#!/bin/bash

# -----------------------------------------------------------------------------
# Load environmental variables
# If you do not trust the path, configure below:
SYSTEM=`uname -s`
if [ "$SYSTEM" = Darwin ]
then
	source /etc/bashrc
	source /etc/profile
	source ${HOME}/.bash_profile
elif [ "$SYSTEM" = Linux ]
then
	source /etc/profile
	source /etc/bash.bashrc
	source ${HOME}/.bashrc
fi

VER=0.1b
VERDATE="1-Apr-2013"

FILENAME=`basename $0`
FILENAME="${FILENAME%.*}"
DIRNAME=`dirname $0`

GENE_LIST=""
METHODS=""
T_ALIGN=""
OUTPUT_DIR=""
LOG_LEVEL=""

# -----------------------------------------------------------------------------
# Load external functions
source ${DIRNAME}/appris_env

# -----------------------------------------------------------------------------
# Usage

USAGE="
\n
 APPRIS's binary package.\n
\n
 Name:\n
\t apprisall\n
\n
 Description:\n
\t global script that runs APPRIS for GENCODE and ENSEMBL.\n
\n
Required arguments:\n
\t -r [-release]\n
\t\t gen12   (Homo sapiens - gencode12/ensembl67)\n
\t\t gen15   (Homo sapiens - gencode15/ensembl70)\n
\t\t gen19   (Homo sapiens - gencode19/ensembl74)\n
\t\t Mmus70  (Mus musculus - ensembl70)\n
\t\t Rnor70  (Rattus norvegicus - ensembl70)\n
\t\t Drer70  (Danio rerio - ensembl70)\n
\t\t Lpar23A (Lynx pardinus)\n
\n
Optional arguments:\n
\t -g [-genes]\n
\t\t File with gene list separated by line\n
\n
\t -p [-operation] # TODO!!!\n
\t\t Operation will execute (by default, all):\n
\t\t appris,cappris,iappris\n
\n
\t -m [-method]\n
\t\t Methods which will execute (by default, all):\n
\t\t firestar,matador3d,spade,corsair,thump,crash,appris\n
\n
\t -a [-talign]\n
\t\t Type of alignment (by default, none):\n
\t\t compara\n
\n
\t -o [-out]\n
\t\t Output path\n
\n
\t -l [-loglevel]\n
\t\t info\n
\t\t debug\n
\n
\t -v [-version]\n
\t -h [-help]\n
\n
\n
 Author: Jose Manuel Rodriguez Carrasco -jmrodriguez@cnio.es- (INB-GN2,CNIO)\n
\n
"

# -----------------------------------------------------------------------------
# Get input parameters

while expr "//$1" : //- >/dev/null
do
	case "$1" in
		-r | -release )
			case "$2" in
				gen12 | gen15 | gen19 | Lpar23A )
					GENCODE=1
					RELEASE=$2
					;;
				Mmus70 | Rnor70 | Drer70 )
					GENCODE=0
					RELEASE=$2
					;;
				* )
					echo Unknown method name: "$2" 
					echo -e $USAGE
					exit 1
					;;
			esac
			shift
			;;	
		-g | -genes )
			GENE_LIST=$2
			shift
			;;
		-p | -operation )
			OPERATION=$2
			shift
			;;
		-m | -methods )
			METHODS=$2
			shift
			;;
		-a | -align )
			T_ALIGN=$2
			shift
			;;
		-o | -out )
        	OUTPUT_DIR=$2
        	shift
			;;
		-l | -loglevel )
			case "$2" in
				info | debug )
		        	LOG_LEVEL=$2
					;;
				* )
					echo Unknown loglevel: "$2" 
					echo -e $USAGE
					exit 1
					;;
			esac
			shift
			;;			
		-h | -help )
			echo -e $USAGE		
			exit
			;;
		-v | -version )
			echo "$VER", "$VERDATE"
			exit
			;;
		* )
			echo Unknown option: "$1"
			echo -e $USAGE
			exit 1
			;;
	esac
	shift
done

if [ "${RELEASE}" == "" ]; then
	echo You must specify at least one release!
	echo -e $USAGE
	exit 1
fi  

# -----------------------------------------------------------------------------
# Prepare Environment from given release
load_appris_release_env "${RELEASE}"

# -----------------------------------------------------------------------------
# Get method script name
METHOD_SCRIPT="apprisall"

# -----------------------------------------------------------------------------
# Required var declarations
if [ "${APPRIS_ANNOT_DIR}" == "" ]; then
	echo Error within env variables: APPRIS_ANNOT_DIR!
	exit 1
fi
if [ "${APPRIS_SPECIE}" == "" ]; then
	echo Error within env variables: APPRIS_SPECIE!
	exit 1
fi
if [ "${APPRIS_E_VERSION}" == "" ]; then
	echo Error within env variables: APPRIS_E_VERSION!
	exit 1
fi

# -----------------------------------------------------------------------------
# Optional var declarations
GENCODE_PARAMETERS=""
if [ "${GENCODE}" == 1 ]; then
	if [[ "${GENCODE_ANNOTATION_FILE}" == "" && "${GENCODE_TRANSCRIPT_FILE}" == "" && "${GENCODE_TRANSLATION_FILE}" == "" ]]; then
		echo Error within env variables: GENCODE!
		exit 1
	else
		GENCODE_PARAMETERS=" --data=${GENCODE_ANNOTATION_FILE}"
		GENCODE_PARAMETERS+=" --transcripts=${GENCODE_TRANSCRIPT_FILE}"
		GENCODE_PARAMETERS+=" --translations=${GENCODE_TRANSLATION_FILE}"		
	fi	
fi
GENE_LIST_PARAMETERS=""
if [ "${GENE_LIST}" != "" ]; then
	GENE_LIST_PARAMETERS=" --gene-list=${GENE_LIST}"
fi
METHOD_PARAMETERS=""
if [ "${METHODS}" != "" ]; then
	METHOD_PARAMETERS=" --methods=${METHODS}"
fi
T_ALIGN_PARAMETERS=""
if [ "${T_ALIGN}" != "" ]; then
	T_ALIGN_PARAMETERS=" --t-align=${T_ALIGN}"
fi
if [ "${OUTPUT_DIR}" != "" ]; then
	APPRIS_ANNOT_DIR="${OUTPUT_DIR}"
fi  

# -----------------------------------------------------------------------------
# Cached declarations
CACHED_PARAMETERS=""
if [ "${APPRIS_CACHED_PATH}" != "" ]; then
	CACHED_PARAMETERS=" --cached-path=${APPRIS_CACHED_PATH}"
fi

# -----------------------------------------------------------------------------
# Run method
SCRIPT="${APPRIS_SCRIPTS_DIR}/${METHOD_SCRIPT}.pl"

# from a given list of genes
if [[ "${GENE_LIST}" != ""  || "${RELEASE}" == "Lpar23A" ]] ; then
 
	# local parameters
	LOG_PARAMETERS=""
	if [ "$LOG_LEVEL" != "" ]; then
		LOG_FILENAME="${APPRIS_WORKSPACE_LOG_DIR}/${FILENAME}.log"
		LOG_PARAMETERS="--loglevel=${LOG_LEVEL} --logappend --logfile=${LOG_FILENAME}"
	fi	

	# print trace
	echo "================="
	echo "perl ${SCRIPT}"
	echo " --species="${APPRIS_SPECIE}""
	echo " --e-version="${APPRIS_E_VERSION}""
	echo " --outpath=${APPRIS_ANNOT_DIR}"
	echo " --apprisdb-conf=${APPRIS_SCRIPTS_DB_INI}"
	echo " ${GENCODE_PARAMETERS}"
	echo " ${GENE_LIST_PARAMETERS}"
	echo " ${METHOD_PARAMETERS}"
	echo " ${T_ALIGN_PARAMETERS}"
	echo " ${CACHED_PARAMETERS}"
	echo " ${LOG_PARAMETERS}"

	# run method
	perl ${SCRIPT} \
		--species="${APPRIS_SPECIE}" \
		--e-version=${APPRIS_E_VERSION} \
		--outpath=${APPRIS_ANNOT_DIR} \
		--apprisdb-conf=${APPRIS_SCRIPTS_DB_INI} \
		${GENCODE_PARAMETERS} \
		${GENE_LIST_PARAMETERS} \
		${METHOD_PARAMETERS} \
		${T_ALIGN_PARAMETERS} \
		${CACHED_PARAMETERS} \
		${LOG_PARAMETERS} \
	echo "================="

# for the whole genome chromsome by chromosome
else
	CHROMOSOME=(${APPRIS_CHR_LIST//,/ })
	INDEX=${#CHROMOSOME[@]}
	for ((i=0;i<$INDEX;i++)); do
	
		# local vars
		CHR="${CHROMOSOME[${i}]}"
		POSITION="chr${CHR}"
		OUTPUT_DIR="${APPRIS_ANNOT_DIR}/${POSITION}"
		
		# local parameters
		LOG_PARAMETERS=""
		if [ "$LOG_LEVEL" != "" ]; then
			LOG_FILENAME="${APPRIS_WORKSPACE_LOG_DIR}/${FILENAME}.${POSITION}.log"
			LOG_PARAMETERS="--loglevel=${LOG_LEVEL} --logappend --logfile=${LOG_FILENAME}"
		fi	
		
		# print trace
		echo "================="
		echo "perl ${SCRIPT}"
		echo " --position=${POSITION}"
		echo " --species="${APPRIS_SPECIE}""
		echo " --e-version="${APPRIS_E_VERSION}""
		echo " --outpath=${OUTPUT_DIR}"
		echo " --apprisdb-conf=${APPRIS_SCRIPTS_DB_INI}"		
		echo " ${GENCODE_PARAMETERS}"
		echo " ${GENE_LIST_PARAMETERS}"
		echo " ${METHOD_PARAMETERS}"
		echo " ${T_ALIGN_PARAMETERS}"
		echo " ${CACHED_PARAMETERS}"
		echo " ${LOG_PARAMETERS}"
	
		# run method
		perl ${SCRIPT} \
			--position=${POSITION} \
			--species="${APPRIS_SPECIE}" \
			--e-version=${APPRIS_E_VERSION} \
			--outpath=${OUTPUT_DIR} \
			--apprisdb-conf=${APPRIS_SCRIPTS_DB_INI} \
			${GENCODE_PARAMETERS} \
			${GENE_LIST_PARAMETERS} \
			${METHOD_PARAMETERS} \
			${T_ALIGN_PARAMETERS} \
			${CACHED_PARAMETERS} \
			${LOG_PARAMETERS} \
		echo "================="
			
	done
fi
