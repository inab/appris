<head>
<!-- Generated by perlmod2www.pl -->
<title>
JSON documentation.
</title>
<link rel="stylesheet" type="text/css" href="../perl.css">
</head>
<body bgcolor="white">
<span id="modRootPath">APPRIS::Export</span>
<span id="modName">JSON</span>
<div id="sep"></div>
<a name="TOP" id="TOP"></a>
<table id="daArea" width="100%"><tr><td id="daEntry" ><a href="#SUMMARY">Summary</a></td><td id="daEntry" ><a href="#vardefs">Package variables</a></td><td id="daEntry" ><a href="#SYNOPSIS">Synopsis</a></td><td id="daEntry" ><a href="#DESCRIPTION">Description</a></td><td id="daEntry" ><a href="#General">General documentation</a></td><td id="daEntry" ><a href="#Methods">Methods</a></td></tr></table>
<div id="sep"></div>
<div id="descTitle">Summary</div>
<div id="descArea"><B>APPRIS::Export::JSON</B> - Utility functions for error handling</div>
<div id="sep"></div>
<a name="vardefs" id="vardefs"></a><div id="descTitle">Package variables</div>
<div id="descArea"><div id="libEntry">No package variables defined.</div>
</div>
<div id="sep"></div>
<div id="descTitle">Included modules</div>
<div id="descArea"><div id="libEntry"><span id="use"><a href="../Utils/Exception.html">APPRIS::Utils::Exception</a></span> qw ( throw warning deprecate ) </div>
<div id="libEntry"><span id="use">Data::Dumper</span> </div>
<div id="libEntry"><span id="use">JSON</span></div>
</div>
<div id="sep"></div>
<a name="SYNOPSIS" id="SYNOPSIS"></a>
<div id="descTitle">Synopsis</div>
<div id="descArea"><pre id="podParagraph">  use <B>APPRIS::Export::JSON</B> qw(get_annotations);
  
  or to get all methods just

  use APPRIS::Export::JSON;

  eval { get_annotations("text to file",file_path) };
  if ($@) {
    print "Caught exception:\n$@";
  }</pre>
</div>
<div id="sep"></div>
<a name="DESCRIPTION" id="DESCRIPTION"></a>
<div id="descTitle">Description</div>
<div id="descArea">The functions exported by this package provide a set of useful methods <br />to export database values as JSON format.
</div>
<div id="sep"></div>
<a name="Methods" id="Methods"></a>
<div id="descTitle">Methods</div>
<table id="methIndArea" width="100%" cellspacing="0"><tr><td id="methIndEntry">get_annotations</td><td id="methIndEntry"><a href="#POD1">Description</a></td><td id="methIndEntry"><a href="#CODE1">Code</a></td></tr>
</table>
<div id="sep"></div>
<a name="MethDesc" id="MethDesc"></a>
<div id="mainTitle">Methods description</div>
<div id="sep"></div>
<table id="methDescTitle" width="100%"><tr><td WIDTH="200"><a name="_pod_get_annotations" id="_pod_get_annotations"></a><a name="POD1" id="POD1"></a>get_annotations</td><td ><a href="#CODE1">code</a></td><td >&nbsp;&nbsp;&nbsp;&nbsp;</td><td ><a href="#POD2">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<table id="methDescArea" width="100%"><tr><td><pre id="podParagraph">  Arg [1]    : String - $gtf
               GTF annotation
  Example    : get_annotations($gtf);  
  Description: Retrieves text as JSON format with the annotations.
  Returntype : String or undef
  Exceptions : if we cant get the gene or transcript in given coord system
  Caller     : general
  Status     : Stable</pre></td></tr></table>
<div id="sep"></div>
<a name="MethCode" id="MethCode"></a>
<div id="mainTitle">Methods code</div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE1" id="CODE1"></a>get_annotations</td><td ><a href="#POD1">description</a></td><td >prev</td><td >next</td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="subName">get_annotations</span>
{<pre>    <span id="perlKey">my</span> <span id="braces">(</span><span id="var">$gtf</span><span id="braces">)</span> = <span id="var">@_</span>;
    <span id="perlKey">my</span> <span id="braces">(</span><span id="var">$list</span><span id="braces">)</span>;
    <span id="perlKey">my</span> <span id="braces">(</span><span id="var">$output</span><span id="braces">)</span> = <span id="sqStr">''</span>;
    
    <span id="perlKey">my</span> <span id="braces">(</span><span id="var">@lines</span><span id="braces">)</span> = <span id="perlFunc">split</span><span id="braces">(</span><span id="dqStr">"\n"</span>, <span id="var">$gtf</span><span id="braces">)</span>;
    <span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$line</span> <span id="braces">(</span><span id="var">@lines</span><span id="braces">)</span> <span id="braces">{</span>
		<span id="perlKey">next</span> <span id="perlKey">if</span><span id="braces">(</span><span id="var">$line</span> =~ <span id="regExp">/^##/</span><span id="braces">)</span>; <span id="comment">#ignore header</span><br />		
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$seqname</span>,<span id="var">$source</span>,<span id="var">$type</span>,<span id="var">$start</span>,<span id="var">$end</span>,<span id="var">$score</span>,<span id="var">$strand</span>,<span id="var">$frame</span>,<span id="var">$attributes</span><span id="braces">)</span> = <span id="perlFunc">split</span><span id="braces">(</span><span id="dqStr">"\t"</span>, <span id="var">$line</span><span id="braces">)</span>;
		<span id="perlKey">next</span> <span id="perlKey">unless</span><span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$seqname</span> and 
					<span id="perlFunc">defined</span> <span id="var">$source</span> and
					<span id="perlFunc">defined</span> <span id="var">$type</span> and
					<span id="perlFunc">defined</span> <span id="var">$start</span> and
					<span id="perlFunc">defined</span> <span id="var">$end</span> and
					<span id="perlFunc">defined</span> <span id="var">$score</span> and
					<span id="perlFunc">defined</span> <span id="var">$strand</span> and
					<span id="perlFunc">defined</span> <span id="var">$frame</span> and 
					<span id="perlFunc">defined</span> <span id="var">$attributes</span><span id="braces">)</span>;
		<span id="comment">#store nine columns in hash</span><br />		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$fields</span><span id="braces">)</span> = <span id="braces">{</span>
				seqname        =&gt; <span id="var">$seqname</span>,
				source     =&gt; <span id="var">$source</span>,
				type       =&gt; <span id="var">$type</span>,
				start      =&gt; <span id="var">$start</span>,
				end        =&gt; <span id="var">$end</span>,
				score      =&gt; <span id="var">$score</span>,
				strand     =&gt; <span id="var">$strand</span>,
				frame      =&gt; <span id="var">$frame</span>
		<span id="braces">}</span>;	
		<span id="comment">#store ids and additional information in second hash</span><br />		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">@add_attributes</span><span id="braces">)</span> = <span id="perlFunc">split</span><span id="braces">(</span><span id="dqStr">";"</span>, <span id="var">$attributes</span><span id="braces">)</span>;				
		<span id="perlKey">for</span> <span id="braces">(</span> <span id="perlKey">my</span> <span id="var">$i</span>=0; <span id="var">$i</span>&lt;<span id="perlFunc">scalar</span> <span id="var">@add_attributes</span>; <span id="var">$i</span>++ <span id="braces">)</span>
		<span id="braces">{</span>
			<span id="var">$add_attributes</span><span id="braces">[</span><span id="var">$i</span><span id="braces">]</span> =~ <span id="regExp">s/^\s//</span>; <span id="var">$add_attributes</span><span id="braces">[</span><span id="var">$i</span><span id="braces">]</span> =~ <span id="regExp">s/\s$//</span>;			
			<span id="var">$add_attributes</span><span id="braces">[</span><span id="var">$i</span><span id="braces">]</span> =~ <span id="regExp">/^([^\s]*)\s*([^\$]*)$/</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$c_type</span><span id="braces">)</span> = <span id="var">$1</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$c_value</span><span id="braces">)</span> = <span id="var">$2</span>;
			<span id="perlKey">if</span><span id="braces">(</span>	<span id="perlFunc">defined</span> <span id="var">$c_type</span> and !<span id="braces">(</span><span id="var">$c_type</span>=~<span id="regExp">/^\s*$/</span><span id="braces">)</span> and
				<span id="perlFunc">defined</span> <span id="var">$c_value</span> and !<span id="braces">(</span><span id="var">$c_value</span>=~<span id="regExp">/^\s*$/</span><span id="braces">)</span><span id="braces">)</span>
			<span id="braces">{</span>
				<span id="var">$c_type</span> =~ <span id="regExp">s/^\s//</span>;
				<span id="var">$c_value</span> =~ <span id="regExp">s/&quot;//g</span>;
				<span id="perlKey">if</span><span id="braces">(</span>!<span id="perlFunc">exists</span><span id="braces">(</span><span id="var">$fields</span>-&gt;<span id="braces">{</span><span id="var">$c_type</span><span id="braces">}</span><span id="braces">)</span><span id="braces">)</span> <span id="braces">{</span>
					<span id="var">$fields</span>-&gt;<span id="braces">{</span><span id="var">$c_type</span><span id="braces">}</span> = <span id="var">$c_value</span>;
				<span id="braces">}</span>
			<span id="braces">}</span>
		<span id="braces">}</span>
		<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$list</span><span id="braces">}</span>, <span id="var">$fields</span><span id="braces">)</span>;
	<span id="braces">}</span>
	
	<span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$list</span><span id="braces">)</span> <span id="braces">{</span>
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$json</span><span id="braces">)</span> = <span id="perlKey">new</span> JSON;
		<span id="var">$output</span> .= <span id="var">$json</span>-&gt;<span id="method">encode</span><span id="braces">(</span><span id="var">$list</span><span id="braces">)</span>;		
	<span id="braces">}</span>	
	<span id="perlKey">return</span> <span id="var">$output</span>;</pre>}</td></div>
<div id="sep"></div>
<a name="General" id="General"></a>
<div id="mainTitle">General documentation</div>
<div id="sep"></div>
<table id="genInfoTitle" width="100%"><tr><td><a name="_pod_CONTACT" id="_pod_CONTACT"></a>CONTACT</td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="genInfoArea"><pre id="podParagraph">  Please email comments or questions to the public INB
  developers list at <<a href="mailto:inb-tecnico@lists.cnio.es" id="podEmail">inb-tecnico@lists.cnio.es</a>&gt;.<br />
  Questions may also be sent to the developer, 
  Jose Manuel Rodriguez <<a href="mailto:jmrodriguez@cnio.es" id="podEmail">jmrodriguez@cnio.es</a>&gt;.</pre></div>
<div id="sep"></div>
</body>
</html>
