<head>
<!-- Generated by perlmod2www.pl -->
<title>
SEQ documentation.
</title>
<link rel="stylesheet" type="text/css" href="../perl.css">
</head>
<body bgcolor="white">
<span id="modRootPath">APPRIS::Export</span>
<span id="modName">SEQ</span>
<div id="sep"></div>
<a name="TOP" id="TOP"></a>
<table id="daArea" width="100%"><tr><td id="daEntry" ><a href="#SUMMARY">Summary</a></td><td id="daEntry" ><a href="#vardefs">Package variables</a></td><td id="daEntry" ><a href="#SYNOPSIS">Synopsis</a></td><td id="daEntry" ><a href="#DESCRIPTION">Description</a></td><td id="daEntry" ><a href="#General">General documentation</a></td><td id="daEntry" ><a href="#Methods">Methods</a></td></tr></table>
<div id="sep"></div>
<div id="descTitle">Summary</div>
<div id="descArea"><B>APPRIS::Export::SEQ</B> - Utility functions for info exporting</div>
<div id="sep"></div>
<a name="vardefs" id="vardefs"></a><div id="descTitle">Package variables</div>
<div id="descArea"><div id="libEntry">No package variables defined.</div>
</div>
<div id="sep"></div>
<div id="descTitle">Included modules</div>
<div id="descArea"><div id="libEntry"><span id="use"><a href="../Utils/Exception.html">APPRIS::Utils::Exception</a></span> qw ( throw warning deprecate ) </div>
<div id="libEntry"><span id="use">Bio::Seq</span> </div>
<div id="libEntry"><span id="use">Bio::SeqIO</span> </div>
<div id="libEntry"><span id="use">Data::Dumper</span> </div>
</div>
<div id="sep"></div>
<a name="SYNOPSIS" id="SYNOPSIS"></a>
<div id="descTitle">Synopsis</div>
<div id="descArea"><pre id="podParagraph">  use APPRIS::Export::SEQ
    qw(
       get_trans_annotations
     );

  or to get all methods just

  use APPRIS::Export::SEQ;

  eval { get_trans_annotations($feature,$params) };
  if ($@) {
    print "Caught exception:\n$@";
  }</pre>
</div>
<div id="sep"></div>
<a name="DESCRIPTION" id="DESCRIPTION"></a>
<div id="descTitle">Description</div>
<div id="descArea">Retrieves sequences of transcript as fasta format.
</div>
<div id="sep"></div>
<a name="Methods" id="Methods"></a>
<div id="descTitle">Methods</div>
<table id="methIndArea" width="100%" cellspacing="0"><tr><td id="methIndEntry">get_trans_annotations</td><td id="methIndEntry"><a href="#POD1">Description</a></td><td id="methIndEntry"><a href="#CODE1">Code</a></td></tr>
</table>
<div id="sep"></div>
<a name="MethDesc" id="MethDesc"></a>
<div id="mainTitle">Methods description</div>
<div id="sep"></div>
<table id="methDescTitle" width="100%"><tr><td WIDTH="200"><a name="_pod_get_trans_annotations" id="_pod_get_trans_annotations"></a><a name="POD1" id="POD1"></a>get_trans_annotations</td><td ><a href="#CODE1">code</a></td><td >&nbsp;&nbsp;&nbsp;&nbsp;</td><td ><a href="#POD2">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<table id="methDescArea" width="100%"><tr><td><pre id="podParagraph">  Arg [1]    : Listref of APPRIS::Gene or APPRIS::Transcript or undef
  Arg [2]    : String $type
               type of sequence ('na' or 'aa')
  Arg [3]    : (optional) String $format
               format of output (by default 'fasta')
  Example    : $annot = $exporter->get_trans_annotations($feature,'aa');
  Description: Retrieves nucleotide o aminoacid sequence.
  Returntype : String or undef</pre></td></tr></table>
<div id="sep"></div>
<a name="MethCode" id="MethCode"></a>
<div id="mainTitle">Methods code</div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE1" id="CODE1"></a>get_trans_annotations</td><td ><a href="#POD1">description</a></td><td >prev</td><td >next</td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="subName">get_trans_annotations</span>
{<pre>    <span id="perlKey">my</span> <span id="braces">(</span><span id="var">$feature</span>,<span id="var">$type</span>,<span id="var">$format</span><span id="braces">)</span> = <span id="var">@_</span>;
    <span id="perlKey">my</span> <span id="braces">(</span><span id="var">$output</span><span id="braces">)</span> = <span id="sqStr">''</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$num_residues</span><span id="braces">)</span> = 70;
	
    <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">ref</span><span id="braces">(</span><span id="var">$feature</span><span id="braces">)</span> and <span id="var">$feature</span>-&gt;<span id="method">isa</span><span id="braces">(</span><span id="dqStr">"APPRIS::Transcript"</span><span id="braces">)</span><span id="braces">)</span> <span id="braces">{</span>
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$id</span><span id="braces">)</span>;
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$sequence</span><span id="braces">)</span>;
		<span id="perlKey">if</span> <span id="braces">(</span><span id="var">$feature</span>-&gt;<span id="method">stable_id</span><span id="braces">)</span> <span id="braces">{</span>
			<span id="var">$id</span> = <span id="var">$feature</span>-&gt;<span id="method">stable_id</span>;
			<span id="perlKey">if</span> <span id="braces">(</span><span id="var">$type</span> <span id="perlKey">eq</span> <span id="sqStr">'na'</span><span id="braces">)</span> <span id="braces">{</span>
				<span id="perlKey">if</span> <span id="braces">(</span><span id="var">$feature</span>-&gt;<span id="method">sequence</span><span id="braces">)</span> <span id="braces">{</span>
					<span id="var">$sequence</span> = <span id="var">$feature</span>-&gt;<span id="method">sequence</span>;
				<span id="braces">}</span>						
			<span id="braces">}</span> <span id="perlKey">elsif</span> <span id="braces">(</span><span id="var">$type</span> <span id="perlKey">eq</span> <span id="sqStr">'aa'</span><span id="braces">)</span> <span id="braces">{</span>
				<span id="perlKey">if</span> <span id="braces">(</span><span id="var">$feature</span>-&gt;<span id="method">translate</span> and <span id="var">$feature</span>-&gt;<span id="method">translate</span>-&gt;<span id="method">sequence</span><span id="braces">)</span> <span id="braces">{</span>
					<span id="var">$sequence</span> = <span id="var">$feature</span>-&gt;<span id="method">translate</span>-&gt;<span id="method">sequence</span>;
				<span id="braces">}</span>
			<span id="braces">}</span>

			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$main_id</span><span id="braces">)</span> = <span id="sqStr">''</span>; 
			<span id="perlKey">if</span> <span id="braces">(</span><span id="var">$feature</span>-&gt;<span id="method">xref_identify</span><span id="braces">)</span> <span id="braces">{</span>
				<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$xref_identify</span> <span id="braces">(</span>@<span id="braces">{</span><span id="var">$feature</span>-&gt;<span id="method">xref_identify</span><span id="braces">}</span><span id="braces">)</span> <span id="braces">{</span>
					<span id="perlKey">if</span> <span id="braces">(</span><span id="braces">(</span><span id="var">$xref_identify</span>-&gt;<span id="method">dbname</span> <span id="perlKey">eq</span> <span id="sqStr">'Ensembl_Gene_Id'</span><span id="braces">)</span> and <span id="var">$xref_identify</span>-&gt;<span id="method">id</span><span id="braces">)</span> <span id="braces">{</span>
						<span id="var">$main_id</span> = <span id="var">$xref_identify</span>-&gt;<span id="method">id</span>;
					<span id="braces">}</span>
				<span id="braces">}</span>				
			<span id="braces">}</span>
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$ext_name</span><span id="braces">)</span> = <span id="sqStr">''</span>;
			<span id="var">$ext_name</span> = <span id="var">$feature</span>-&gt;<span id="method">external_name</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="var">$feature</span>-&gt;<span id="method">external_name</span><span id="braces">)</span>;
			
			<span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$id</span> and <span id="perlFunc">defined</span> <span id="var">$sequence</span><span id="braces">)</span> <span id="braces">{</span>
				<span id="perlKey">my</span><span id="braces">(</span><span id="var">$seqobj</span><span id="braces">)</span>=<span id="module">Bio::Seq</span>-&gt;<span id="perlKey">new</span><span id="braces">(</span>
					-display_id =&gt; <span id="var">$id</span>,
					-seq =&gt; <span id="var">$sequence</span>
				<span id="braces">)</span>;
				<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$slength</span><span id="braces">)</span> = <span id="var">$seqobj</span>-&gt;<span id="perlFunc">length</span>;
				<span id="var">$output</span> .= <span id="dqStr">"&gt;"</span>.<span id="var">$id</span>.<span id="dqStr">"|"</span>.<span id="var">$main_id</span>.<span id="dqStr">"|"</span>.<span id="var">$ext_name</span>.<span id="dqStr">"|"</span>.<span id="var">$slength</span>.<span id="dqStr">"\n"</span>;
				<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$index</span><span id="braces">)</span> = 1;
				<span id="perlKey">while</span><span id="braces">(</span><span id="var">$index</span> &lt; <span id="var">$slength</span><span id="braces">)</span> <span id="braces">{</span>
					<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$send</span><span id="braces">)</span> = <span id="var">$num_residues</span>+<span id="var">$index</span>-1;
					<span id="var">$send</span> = <span id="var">$slength</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="var">$send</span> &gt;= <span id="var">$slength</span><span id="braces">)</span>;
					<span id="var">$output</span> .= <span id="var">$seqobj</span>-&gt;<span id="method">subseq</span><span id="braces">(</span><span id="var">$index</span>,<span id="var">$send</span><span id="braces">)</span>.<span id="dqStr">"\n"</span>;
					<span id="var">$index</span> = <span id="var">$send</span>+1;	
				<span id="braces">}</span>
			<span id="braces">}</span>
		<span id="braces">}</span>		
    <span id="braces">}</span>
    <span id="perlKey">else</span> <span id="braces">{</span>
		<span id="method">throw</span><span id="braces">(</span><span id="sqStr">'Argument must be an APPRIS::Transcript'</span><span id="braces">)</span>;
   	<span id="braces">}</span>
	<span id="perlKey">return</span> <span id="var">$output</span>;</pre>}</td></div>
<div id="sep"></div>
<a name="General" id="General"></a>
<div id="mainTitle">General documentation</div>
<div id="sep"></div>
<table id="genInfoTitle" width="100%"><tr><td><a name="_pod_CONTACT" id="_pod_CONTACT"></a>CONTACT</td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="genInfoArea"><pre id="podParagraph">  Please email comments or questions to the public INB
  developers list at <<a href="mailto:inb-tecnico@lists.cnio.es" id="podEmail">inb-tecnico@lists.cnio.es</a>&gt;.<br />
  Questions may also be sent to the developer, 
  Jose Manuel Rodriguez <<a href="mailto:jmrodriguez@cnio.es" id="podEmail">jmrodriguez@cnio.es</a>&gt;.</pre></div>
<div id="sep"></div>
</body>
</html>
