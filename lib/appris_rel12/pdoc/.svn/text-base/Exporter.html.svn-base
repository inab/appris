<head>
<!-- Generated by perlmod2www.pl -->
<title>
Exporter documentation.
</title>
<link rel="stylesheet" type="text/css" href="perl.css">
</head>
<body bgcolor="white">
<span id="modRootPath">APPRIS</span>
<span id="modName">Exporter</span>
<div id="sep"></div>
<a name="TOP" id="TOP"></a>
<table id="daArea" width="100%"><tr><td id="daEntry" ><a href="#SUMMARY">Summary</a></td><td id="daEntry" ><a href="#vardefs">Package variables</a></td><td id="daEntry" ><a href="#SYNOPSIS">Synopsis</a></td><td id="daEntry" ><a href="#DESCRIPTION">Description</a></td><td id="daEntry" ><a href="#General">General documentation</a></td><td id="daEntry" ><a href="#Methods">Methods</a></td></tr></table>
<div id="sep"></div>
<div id="descTitle">Summary</div>
<div id="descArea">APPRIS::Exporter</div>
<div id="sep"></div>
<a name="vardefs" id="vardefs"></a><div id="descTitle">Package variables</div>
<div id="descArea"><div id="libEntry"><div id="descSubTitle">Privates (from <b>"my"</b> definitions)</div>
</div>
<div id="libEntry"><span id="braces">(</span><span id="var">$API_VERSION</span><span id="braces">)</span> = <span id="sqStr">'rel7'</span></div>
<div id="libEntry"><span id="braces">(</span><span id="var">$VERSION</span><span id="braces">)</span> = <span id="sqStr">'rel7_v3'</span></div>
<div id="libEntry"><span id="var">%_attr_data</span> = <span id="braces">(</span>		<span id="braces">)</span></div>
<div id="libEntry"><span id="braces">(</span><span id="var">$DATE</span><span id="braces">)</span> = <span id="sqStr">'03-Sep-2011'</span></div>
<div id="libEntry"><span id="braces">(</span><span id="var">$CONSTANT_TAB_ANNOTATTIONS</span><span id="braces">)</span> = <span id="braces">{</span>	<span id="sqStr">'identifier'</span> =&gt; <span id="perlFunc">undef</span>,	<span id="sqStr">'class'</span> =&gt; <span id="perlFunc">undef</span>,	<span id="sqStr">'status'</span> =&gt; <span id="perlFunc">undef</span>,	<span id="sqStr">'level'</span> =&gt; <span id="perlFunc">undef</span>,	<span id="sqStr">'external_name'</span> =&gt; <span id="perlFunc">undef</span>,	<span id="sqStr">'length_na'</span> =&gt; <span id="perlFunc">undef</span>,	<span id="sqStr">'length_aa'</span> =&gt; <span id="perlFunc">undef</span>,	<span id="sqStr">'principal_isoform'</span> =&gt; <span id="perlFunc">undef</span>,	<span id="sqStr">'principal_isoform_source'</span> =&gt; <span id="perlFunc">undef</span><span id="braces">}</span></div>
</div>
<div id="sep"></div>
<div id="descTitle">Included modules</div>
<div id="descArea"><div id="libEntry"><span id="use"><a href="Export/BED.html">APPRIS::Export::BED</a></span> </div>
<div id="libEntry"><span id="use"><a href="Export/GTF.html">APPRIS::Export::GTF</a></span> </div>
<div id="libEntry"><span id="use"><a href="Export/JSON.html">APPRIS::Export::JSON</a></span> </div>
<div id="libEntry"><span id="use"><a href="Export/SEQ.html">APPRIS::Export::SEQ</a></span> </div>
<div id="libEntry"><span id="use">APPRIS::Export::TAB</span> </div>
<div id="libEntry"><span id="use"><a href="Utils/Argument.html">APPRIS::Utils::Argument</a></span> qw ( rearrange ) </div>
<div id="libEntry"><span id="use"><a href="Utils/Exception.html">APPRIS::Utils::Exception</a></span> qw ( throw warning deprecate ) </div>
<div id="libEntry"><span id="use">Bio::Seq</span> </div>
<div id="libEntry"><span id="use">Bio::SeqIO</span> </div>
<div id="libEntry"><span id="use">Data::Dumper</span> </div>
</div>
<div id="sep"></div>
<a name="SYNOPSIS" id="SYNOPSIS"></a>
<div id="descTitle">Synopsis</div>
<div id="descArea"><pre id="podParagraph">  $registry = <B>APPRIS::Exporter</B>->new(
    -dbhost  => 'localhost',
    -dbname  => 'homo_sapiens_encode_3c',
    -dbuser  => 'jmrodriguez'
    );

  $gene = $registry->fetch_by_stable_id($stable_id);

  @genes = @{ $registry->fetch_by_chr_start_end('X', 1, 10000) };</pre>
</div>
<div id="sep"></div>
<a name="DESCRIPTION" id="DESCRIPTION"></a>
<div id="descTitle">Description</div>
<div id="descArea">All Adaptors are stored/registered using this module.<br />This module should then be used to get the adaptors needed.<br />The registry can be loaded from a configuration file or from database info.
</div>
<div id="sep"></div>
<a name="Methods" id="Methods"></a>
<div id="descTitle">Methods</div>
<table id="methIndArea" width="100%" cellspacing="0"><tr><td id="methIndEntry">DESTROY</td><td id="methIndEntry"><div id="error">No description</div></td><td id="methIndEntry"><a href="#CODE1">Code</a></td></tr>
<tr><td id="methIndEntry">_default_for</td><td id="methIndEntry"><div id="error">No description</div></td><td id="methIndEntry"><a href="#CODE2">Code</a></td></tr>
<tr><td id="methIndEntry">_standard_keys</td><td id="methIndEntry"><div id="error">No description</div></td><td id="methIndEntry"><a href="#CODE3">Code</a></td></tr>
<tr><td id="methIndEntry">date</td><td id="methIndEntry"><a href="#POD1">Description</a></td><td id="methIndEntry"><a href="#CODE4">Code</a></td></tr>
<tr><td id="methIndEntry">get_bed_annotations</td><td id="methIndEntry"><a href="#POD2">Description</a></td><td id="methIndEntry"><a href="#CODE5">Code</a></td></tr>
<tr><td id="methIndEntry">get_gtf_annotations</td><td id="methIndEntry"><a href="#POD3">Description</a></td><td id="methIndEntry"><a href="#CODE6">Code</a></td></tr>
<tr><td id="methIndEntry">get_json_annotations</td><td id="methIndEntry"><a href="#POD4">Description</a></td><td id="methIndEntry"><a href="#CODE7">Code</a></td></tr>
<tr><td id="methIndEntry">get_seq_annotations</td><td id="methIndEntry"><a href="#POD5">Description</a></td><td id="methIndEntry"><a href="#CODE8">Code</a></td></tr>
<tr><td id="methIndEntry">get_tab_annotations</td><td id="methIndEntry"><a href="#POD6">Description</a></td><td id="methIndEntry"><a href="#CODE9">Code</a></td></tr>
<tr><td id="methIndEntry">new</td><td id="methIndEntry"><a href="#POD7">Description</a></td><td id="methIndEntry"><a href="#CODE10">Code</a></td></tr>
<tr><td id="methIndEntry">software_version</td><td id="methIndEntry"><a href="#POD8">Description</a></td><td id="methIndEntry"><a href="#CODE11">Code</a></td></tr>
<tr><td id="methIndEntry">version</td><td id="methIndEntry"><a href="#POD9">Description</a></td><td id="methIndEntry"><a href="#CODE12">Code</a></td></tr>
</table>
<div id="sep"></div>
<a name="MethDesc" id="MethDesc"></a>
<div id="mainTitle">Methods description</div>
<div id="sep"></div>
<table id="methDescTitle" width="100%"><tr><td WIDTH="200"><a name="_pod_date" id="_pod_date"></a><a name="POD1" id="POD1"></a>date</td><td ><a href="#CODE4">code</a></td><td >&nbsp;&nbsp;&nbsp;&nbsp;</td><td ><a href="#POD2">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<table id="methDescArea" width="100%"><tr><td><pre id="podParagraph">  
  get the date of exported data.
  
  Args       : none
  ReturnType : string
  Status     : At Risk</pre></td></tr></table>
<div id="sep"></div>
<table id="methDescTitle" width="100%"><tr><td WIDTH="200"><a name="_pod_get_bed_annotations" id="_pod_get_bed_annotations"></a><a name="POD2" id="POD2"></a>get_bed_annotations</td><td ><a href="#CODE5">code</a></td><td ><a href="#POD1">prev</a></td><td ><a href="#POD3">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<table id="methDescArea" width="100%"><tr><td><pre id="podParagraph">  Arg [1]    : Listref of APPRIS::Gene or undef
  Arg [2]    : String - $position (optional)
               genome position (chr22:20116979-20137016)
  Arg [3]    : String - $head (optional)
               flag of head title ('yes','no','only')
  Arg [4]    : String - $source
               List of sources ('all', ... )           
  Example    : $annot = $exporter->get_bed_annotations($feature,'chr22:20116979-20137016','no','appris');
  Description: Retrieves text as BED format with the annotations.
  Returntype : String or undef
  Exceptions : if we cant get the gene or transcript in given coord system
  Caller     : general
  Status     : Stable</pre></td></tr></table>
<div id="sep"></div>
<table id="methDescTitle" width="100%"><tr><td WIDTH="200"><a name="_pod_get_gtf_annotations" id="_pod_get_gtf_annotations"></a><a name="POD3" id="POD3"></a>get_gtf_annotations</td><td ><a href="#CODE6">code</a></td><td ><a href="#POD2">prev</a></td><td ><a href="#POD4">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<table id="methDescArea" width="100%"><tr><td><pre id="podParagraph">  Arg [1]    : Listref of APPRIS::Gene or APPRIS::Transcript or undef
  Arg [2]    : List of sources
  Example    : $annot = $exporter->get_gtf_annotations($feature,$source);
  Description: Retrieves text as GFF format with the annotations.
  Returntype : String or undef
  Exceptions : if we cant get the gene or transcript in given coord system
  Caller     : general
  Status     : Stable</pre></td></tr></table>
<div id="sep"></div>
<table id="methDescTitle" width="100%"><tr><td WIDTH="200"><a name="_pod_get_json_annotations" id="_pod_get_json_annotations"></a><a name="POD4" id="POD4"></a>get_json_annotations</td><td ><a href="#CODE7">code</a></td><td ><a href="#POD3">prev</a></td><td ><a href="#POD5">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<table id="methDescArea" width="100%"><tr><td><pre id="podParagraph">  Arg [1]    : Listref of APPRIS::Gene or APPRIS::Transcript or undef
  Arg [2]    : List of sources
  Example    : $annot = $exporter->get_json_annotations($feature,$source);
  Description: Retrieves text as JSON format with the annotations.
  Returntype : String or undef
  Exceptions : if we cant get the gene or transcript in given coord system
  Caller     : general
  Status     : Stable</pre></td></tr></table>
<div id="sep"></div>
<table id="methDescTitle" width="100%"><tr><td WIDTH="200"><a name="_pod_get_seq_annotations" id="_pod_get_seq_annotations"></a><a name="POD5" id="POD5"></a>get_seq_annotations</td><td ><a href="#CODE8">code</a></td><td ><a href="#POD4">prev</a></td><td ><a href="#POD6">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<table id="methDescArea" width="100%"><tr><td><pre id="podParagraph">  Arg [1]    : Listref of APPRIS::Gene or APPRIS::Transcript or undef
  Arg [2]    : String $type
               type of sequence ('na' or 'aa')
  Arg [3]    : (optional) String $format
               format of output (by default 'fasta')
  Example    : $annot = $exporter->get_seq_annotations($feature,'aa');
  Description: Retrieves nucleotide o aminoacid sequence.
  Returntype : String or undef</pre></td></tr></table>
<div id="sep"></div>
<table id="methDescTitle" width="100%"><tr><td WIDTH="200"><a name="_pod_get_tab_annotations" id="_pod_get_tab_annotations"></a><a name="POD6" id="POD6"></a>get_tab_annotations</td><td ><a href="#CODE9">code</a></td><td ><a href="#POD5">prev</a></td><td ><a href="#POD7">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<table id="methDescArea" width="100%"><tr><td><pre id="podParagraph">  Arg [1]    : Listref of APPRIS::Gene or APPRIS::Transcript or undef
  Arg [2]    : Listred of String $params
  Example    : $annot = $exporter->get_tab_annotations($feature,$params);
  Description: Retrieves nucleotide o aminoacid sequence.
  Returntype : String or undef</pre></td></tr></table>
<div id="sep"></div>
<table id="methDescTitle" width="100%"><tr><td WIDTH="200"><a name="_pod_new" id="_pod_new"></a><a name="POD7" id="POD7"></a>new</td><td ><a href="#CODE10">code</a></td><td ><a href="#POD6">prev</a></td><td ><a href="#POD8">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<table id="methDescArea" width="100%"><tr><td><pre id="podParagraph">  Example :

    <B>APPRIS::Exporter</B>->new()

  Description: Will load the correct versions of the appris
               databases for the software release it can find on a
               database instance into the registry.

  Exceptions : None.
  Status     : Stable</pre></td></tr></table>
<div id="sep"></div>
<table id="methDescTitle" width="100%"><tr><td WIDTH="200"><a name="_pod_software_version" id="_pod_software_version"></a><a name="POD8" id="POD8"></a>software_version</td><td ><a href="#CODE11">code</a></td><td ><a href="#POD7">prev</a></td><td ><a href="#POD9">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<table id="methDescArea" width="100%"><tr><td><pre id="podParagraph">  
  get the software version.
  
  Args       : none
  ReturnType : int
  Status     : At Risk</pre></td></tr></table>
<div id="sep"></div>
<table id="methDescTitle" width="100%"><tr><td WIDTH="200"><a name="_pod_version" id="_pod_version"></a><a name="POD9" id="POD9"></a>version</td><td ><a href="#CODE12">code</a></td><td ><a href="#POD8">prev</a></td><td ><a href="#POD10">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<table id="methDescArea" width="100%"><tr><td><pre id="podParagraph">  
  get the version of exported data.
  
  Args       : none
  ReturnType : string
  Status     : At Risk</pre></td></tr></table>
<div id="sep"></div>
<a name="MethCode" id="MethCode"></a>
<div id="mainTitle">Methods code</div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE1" id="CODE1"></a>DESTROY</td><td >description</td><td >prev</td><td ><a href="#CODE2">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="subName">DESTROY</span>
{}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE2" id="CODE2"></a>_default_for</td><td >description</td><td ><a href="#CODE1">prev</a></td><td ><a href="#CODE3">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="privSubName">_default_for</span>
{<pre>		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$self</span>, <span id="var">$attr</span><span id="braces">)</span> = <span id="var">@_</span>;
		<span id="var">$_attr_data</span><span id="braces">{</span><span id="var">$attr</span><span id="braces">}</span>;</pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE3" id="CODE3"></a>_standard_keys</td><td >description</td><td ><a href="#CODE2">prev</a></td><td ><a href="#CODE4">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="privSubName">_standard_keys</span>
{<pre>		<span id="perlFunc">keys</span> <span id="var">%_attr_data</span>;</pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE4" id="CODE4"></a>date</td><td ><a href="#POD1">description</a></td><td ><a href="#CODE3">prev</a></td><td ><a href="#CODE5">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="subName">date</span>
{<pre>	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$self</span><span id="braces">)</span> = <span id="var">@_</span>;
	<span id="perlKey">return</span> <span id="var">$DATE</span>;</pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE5" id="CODE5"></a>get_bed_annotations</td><td ><a href="#POD2">description</a></td><td ><a href="#CODE4">prev</a></td><td ><a href="#CODE6">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="subName">get_bed_annotations</span>
{<pre>    <span id="perlKey">my</span> <span id="braces">(</span><span id="var">$self</span>, <span id="var">$feature</span>, <span id="var">$position</span>, <span id="var">$head</span>, <span id="var">$source</span><span id="braces">)</span> = <span id="var">@_</span>;
    <span id="perlKey">my</span> <span id="braces">(</span><span id="var">$output</span><span id="braces">)</span> = <span id="sqStr">''</span>;

	<span id="comment"># Get position if its not defined</span><br />	<span id="perlKey">unless</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$position</span><span id="braces">)</span> <span id="braces">{</span>
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$chr</span><span id="braces">)</span>;
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$start</span><span id="braces">)</span>;
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$end</span><span id="braces">)</span>;
		<span id="perlKey">if</span> <span id="braces">(</span><span id="var">$feature</span> and <span id="braces">(</span><span id="perlFunc">ref</span><span id="braces">(</span><span id="var">$feature</span><span id="braces">)</span> <span id="perlKey">ne</span> <span id="sqStr">'ARRAY'</span><span id="braces">)</span><span id="braces">)</span> <span id="braces">{</span>			
	    	<span id="perlKey">if</span> <span id="braces">(</span><span id="var">$feature</span>-&gt;<span id="method">isa</span><span id="braces">(</span><span id="dqStr">"APPRIS::Gene"</span><span id="braces">)</span> or <span id="var">$feature</span>-&gt;<span id="method">isa</span><span id="braces">(</span><span id="dqStr">"APPRIS::Transcript"</span><span id="braces">)</span><span id="braces">)</span> <span id="braces">{</span>
				<span id="var">$chr</span> = <span id="var">$feature</span>-&gt;<span id="method">chromosome</span>;
				<span id="var">$start</span> = <span id="var">$feature</span>-&gt;<span id="method">start</span>;
				<span id="var">$end</span> = <span id="var">$feature</span>-&gt;<span id="method">end</span>;	    		
	    	<span id="braces">}</span>
		<span id="braces">}</span>
		<span id="perlKey">elsif</span> <span id="braces">(</span><span id="var">$feature</span> and <span id="braces">(</span><span id="perlFunc">ref</span><span id="braces">(</span><span id="var">$feature</span><span id="braces">)</span> <span id="perlKey">eq</span> <span id="sqStr">'ARRAY'</span><span id="braces">)</span> <span id="braces">)</span> <span id="braces">{</span> <span id="comment"># in the case that we have a list of objects</span><br />    		<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$feat</span> <span id="braces">(</span>@<span id="braces">{</span><span id="var">$feature</span><span id="braces">}</span><span id="braces">)</span> <span id="braces">{</span>
	    		<span id="perlKey">if</span> <span id="braces">(</span><span id="var">$feat</span>-&gt;<span id="method">isa</span><span id="braces">(</span><span id="dqStr">"APPRIS::Gene"</span><span id="braces">)</span> or <span id="var">$feat</span>-&gt;<span id="method">isa</span><span id="braces">(</span><span id="dqStr">"APPRIS::Transcript"</span><span id="braces">)</span><span id="braces">)</span> <span id="braces">{</span>	    			
					<span id="var">$chr</span> = <span id="var">$feature</span>-&gt;<span id="method">chromosome</span> <span id="perlKey">unless</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$chr</span><span id="braces">)</span>;
					<span id="var">$start</span> = <span id="var">$feature</span>-&gt;<span id="method">start</span> <span id="perlKey">unless</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$start</span><span id="braces">)</span>;
					<span id="var">$end</span> = <span id="var">$feature</span>-&gt;<span id="method">end</span> <span id="perlKey">unless</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$end</span><span id="braces">)</span>;
	    			
	    			<span id="var">$start</span> = <span id="var">$feature</span>-&gt;<span id="method">start</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="var">$feature</span>-&gt;<span id="method">start</span> &lt; <span id="var">$start</span><span id="braces">)</span>;
	    			<span id="var">$end</span> = <span id="var">$feature</span>-&gt;<span id="method">end</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="var">$feature</span>-&gt;<span id="method">end</span> &gt; <span id="var">$end</span><span id="braces">)</span>;
	    		<span id="braces">}</span>
    		<span id="braces">}</span>
		<span id="braces">}</span>
	    <span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$chr</span> and <span id="perlFunc">defined</span> <span id="var">$start</span> and <span id="perlFunc">defined</span> <span id="var">$end</span> <span id="braces">)</span> <span id="braces">{</span>
	    	<span id="var">$position</span> = <span id="dqStr">"chr<span id="var">$chr</span>:$start\-$end"</span>;
	    <span id="braces">}</span>		
	<span id="braces">}</span>
	<span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$position</span> and <span id="braces">(</span><span id="var">$position</span> <span id="perlKey">ne</span> <span id="sqStr">''</span><span id="braces">)</span><span id="braces">)</span> <span id="braces">{</span>
		<span id="var">$output</span> .= <span id="module"><a href="Export/BED.html">APPRIS::Export::BED</a></span>::<span id="method">get_annotations</span><span id="braces">(</span><span id="var">$feature</span>, <span id="var">$position</span>, <span id="var">$source</span>, <span id="var">$head</span>, <span id="var">$self</span>-&gt;<span id="method">version</span>, <span id="var">$self</span>-&gt;<span id="method">date</span><span id="braces">)</span>;		
	<span id="braces">}</span>
    <span id="perlKey">else</span> <span id="braces">{</span>
		<span id="method">throw</span><span id="braces">(</span><span id="sqStr">'Argument must be define'</span><span id="braces">)</span>;
    <span id="braces">}</span>
	<span id="perlKey">return</span> <span id="var">$output</span>;</pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE6" id="CODE6"></a>get_gtf_annotations</td><td ><a href="#POD3">description</a></td><td ><a href="#CODE5">prev</a></td><td ><a href="#CODE7">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="subName">get_gtf_annotations</span>
{<pre>    <span id="perlKey">my</span> <span id="braces">(</span><span id="var">$self</span>, <span id="var">$feature</span>, <span id="var">$source</span><span id="braces">)</span> = <span id="var">@_</span>;
    <span id="perlKey">my</span> <span id="braces">(</span><span id="var">$output</span><span id="braces">)</span> = <span id="sqStr">''</span>;

	<span id="perlKey">if</span> <span id="braces">(</span><span id="var">$feature</span> and <span id="braces">(</span><span id="perlFunc">ref</span><span id="braces">(</span><span id="var">$feature</span><span id="braces">)</span> <span id="perlKey">ne</span> <span id="sqStr">'ARRAY'</span><span id="braces">)</span><span id="braces">)</span> <span id="braces">{</span>
    	<span id="perlKey">if</span> <span id="braces">(</span><span id="var">$feature</span>-&gt;<span id="method">isa</span><span id="braces">(</span><span id="dqStr">"APPRIS::Gene"</span><span id="braces">)</span><span id="braces">)</span> <span id="braces">{</span>
			<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$transcript</span> <span id="braces">(</span>@<span id="braces">{</span><span id="var">$feature</span>-&gt;<span id="method">transcripts</span><span id="braces">}</span><span id="braces">)</span> <span id="braces">{</span>
				<span id="var">$output</span> .= <span id="module"><a href="Export/GTF.html">APPRIS::Export::GTF</a></span>::<span id="method">get_trans_annotations</span><span id="braces">(</span><span id="var">$transcript</span>, <span id="var">$source</span>, <span id="var">$self</span>-&gt;<span id="method">version</span><span id="braces">)</span>;
			<span id="braces">}</span>
    	<span id="braces">}</span>
    	<span id="perlKey">elsif</span> <span id="braces">(</span><span id="var">$feature</span>-&gt;<span id="method">isa</span><span id="braces">(</span><span id="dqStr">"APPRIS::Transcript"</span><span id="braces">)</span><span id="braces">)</span> <span id="braces">{</span>
    		<span id="var">$output</span> .= <span id="module"><a href="Export/GTF.html">APPRIS::Export::GTF</a></span>::<span id="method">get_trans_annotations</span><span id="braces">(</span><span id="var">$feature</span>, <span id="var">$source</span>, <span id="var">$self</span>-&gt;<span id="method">version</span><span id="braces">)</span>;
    	<span id="braces">}</span>
    	<span id="perlKey">else</span> <span id="braces">{</span>
			<span id="method">throw</span><span id="braces">(</span><span id="sqStr">'Argument must be an APPRIS::Gene or APPRIS::Transcript'</span><span id="braces">)</span>;
    	<span id="braces">}</span>
    <span id="braces">}</span>
	<span id="perlKey">elsif</span> <span id="braces">(</span><span id="var">$feature</span> and <span id="braces">(</span><span id="perlFunc">ref</span><span id="braces">(</span><span id="var">$feature</span><span id="braces">)</span> <span id="perlKey">eq</span> <span id="sqStr">'ARRAY'</span><span id="braces">)</span> <span id="braces">)</span> <span id="braces">{</span> <span id="comment"># in the case that we have a list of objects</span><br />    	<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$feat</span> <span id="braces">(</span>@<span id="braces">{</span><span id="var">$feature</span><span id="braces">}</span><span id="braces">)</span> <span id="braces">{</span>
	    	<span id="perlKey">if</span> <span id="braces">(</span><span id="var">$feat</span>-&gt;<span id="method">isa</span><span id="braces">(</span><span id="dqStr">"APPRIS::Gene"</span><span id="braces">)</span><span id="braces">)</span> <span id="braces">{</span>
				<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$transcript</span> <span id="braces">(</span>@<span id="braces">{</span><span id="var">$feat</span>-&gt;<span id="method">transcripts</span><span id="braces">}</span><span id="braces">)</span> <span id="braces">{</span>
					<span id="var">$output</span> .= <span id="module"><a href="Export/GTF.html">APPRIS::Export::GTF</a></span>::<span id="method">get_trans_annotations</span><span id="braces">(</span><span id="var">$transcript</span>, <span id="var">$source</span>, <span id="var">$self</span>-&gt;<span id="method">version</span><span id="braces">)</span>;
				<span id="braces">}</span>
	    	<span id="braces">}</span>
	    	<span id="perlKey">elsif</span> <span id="braces">(</span><span id="var">$feat</span>-&gt;<span id="method">isa</span><span id="braces">(</span><span id="dqStr">"APPRIS::Transcript"</span><span id="braces">)</span><span id="braces">)</span> <span id="braces">{</span>
	    		<span id="var">$output</span> .= <span id="module"><a href="Export/GTF.html">APPRIS::Export::GTF</a></span>::<span id="method">get_trans_annotations</span><span id="braces">(</span><span id="var">$feat</span>, <span id="var">$source</span>, <span id="var">$self</span>-&gt;<span id="method">version</span><span id="braces">)</span>;
	    	<span id="braces">}</span>
	    	<span id="perlKey">else</span> <span id="braces">{</span>
				<span id="method">throw</span><span id="braces">(</span><span id="sqStr">'Argument must be an APPRIS::Gene or APPRIS::Transcript'</span><span id="braces">)</span>;
	    	<span id="braces">}</span>    		
    	<span id="braces">}</span>
	<span id="braces">}</span>
    <span id="perlKey">else</span> <span id="braces">{</span>
		<span id="method">throw</span><span id="braces">(</span><span id="sqStr">'Argument must be define'</span><span id="braces">)</span>;
   	<span id="braces">}</span>
	<span id="perlKey">return</span> <span id="var">$output</span>;</pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE7" id="CODE7"></a>get_json_annotations</td><td ><a href="#POD4">description</a></td><td ><a href="#CODE6">prev</a></td><td ><a href="#CODE8">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="subName">get_json_annotations</span>
{<pre>    <span id="perlKey">my</span> <span id="braces">(</span><span id="var">$self</span>, <span id="var">$feature</span>, <span id="var">$source</span><span id="braces">)</span> = <span id="var">@_</span>;
    <span id="perlKey">my</span> <span id="braces">(</span><span id="var">$output</span><span id="braces">)</span> = <span id="sqStr">''</span>;

	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$gtf_output</span><span id="braces">)</span> = <span id="var">$self</span>-&gt;<span id="method">get_gtf_annotations</span><span id="braces">(</span><span id="var">$feature</span>, <span id="var">$source</span><span id="braces">)</span>;
	<span id="var">$output</span> .= <span id="module"><a href="Export/JSON.html">APPRIS::Export::JSON</a></span>::<span id="method">get_annotations</span><span id="braces">(</span><span id="var">$gtf_output</span><span id="braces">)</span>;
	
	<span id="perlKey">return</span> <span id="var">$output</span>;</pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE8" id="CODE8"></a>get_seq_annotations</td><td ><a href="#POD5">description</a></td><td ><a href="#CODE7">prev</a></td><td ><a href="#CODE9">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="subName">get_seq_annotations</span>
{<pre>    <span id="perlKey">my</span> <span id="braces">(</span><span id="var">$self</span>,<span id="var">$feature</span>,<span id="var">$type</span>,<span id="var">$format</span><span id="braces">)</span> = <span id="var">@_</span>;
    <span id="perlKey">my</span> <span id="braces">(</span><span id="var">$output</span><span id="braces">)</span> = <span id="sqStr">''</span>;

    <span id="perlKey">if</span> <span id="braces">(</span><span id="var">$feature</span> and <span id="perlFunc">ref</span><span id="braces">(</span><span id="var">$feature</span><span id="braces">)</span><span id="braces">)</span> <span id="braces">{</span>
    	<span id="perlKey">if</span> <span id="braces">(</span><span id="var">$feature</span>-&gt;<span id="method">isa</span><span id="braces">(</span><span id="dqStr">"APPRIS::Gene"</span><span id="braces">)</span><span id="braces">)</span> <span id="braces">{</span>
			<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$transcript</span> <span id="braces">(</span>@<span id="braces">{</span><span id="var">$feature</span>-&gt;<span id="method">transcripts</span><span id="braces">}</span><span id="braces">)</span> <span id="braces">{</span>
				<span id="var">$output</span> .= <span id="module"><a href="Export/SEQ.html">APPRIS::Export::SEQ</a></span>::<span id="method">get_trans_annotations</span><span id="braces">(</span><span id="var">$transcript</span>,<span id="var">$type</span>,<span id="var">$format</span><span id="braces">)</span>;
			<span id="braces">}</span>
    	<span id="braces">}</span>
    	<span id="perlKey">elsif</span> <span id="braces">(</span><span id="var">$feature</span>-&gt;<span id="method">isa</span><span id="braces">(</span><span id="dqStr">"APPRIS::Transcript"</span><span id="braces">)</span><span id="braces">)</span> <span id="braces">{</span>
    		<span id="var">$output</span> .= <span id="module"><a href="Export/SEQ.html">APPRIS::Export::SEQ</a></span>::<span id="method">get_trans_annotations</span><span id="braces">(</span><span id="var">$feature</span>,<span id="var">$type</span>,<span id="var">$format</span><span id="braces">)</span>;
    	<span id="braces">}</span>
    	<span id="perlKey">else</span> <span id="braces">{</span>
			<span id="method">throw</span><span id="braces">(</span><span id="sqStr">'Argument must be an APPRIS::Gene or APPRIS::Transcript'</span><span id="braces">)</span>;
    	<span id="braces">}</span>
    <span id="braces">}</span>
    <span id="perlKey">else</span> <span id="braces">{</span>
		<span id="method">throw</span><span id="braces">(</span><span id="sqStr">'Argument must be define'</span><span id="braces">)</span>;
   	<span id="braces">}</span>
	<span id="perlKey">return</span> <span id="var">$output</span>;</pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE9" id="CODE9"></a>get_tab_annotations</td><td ><a href="#POD6">description</a></td><td ><a href="#CODE8">prev</a></td><td ><a href="#CODE10">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="subName">get_tab_annotations</span>
{<pre>    <span id="perlKey">my</span> <span id="braces">(</span><span id="var">$self</span>,<span id="var">$feature</span>,<span id="var">$params</span><span id="braces">)</span> = <span id="var">@_</span>;
    <span id="perlKey">my</span> <span id="braces">(</span><span id="var">$output</span><span id="braces">)</span> = <span id="sqStr">''</span>;

    <span id="perlKey">if</span> <span id="braces">(</span><span id="var">$feature</span> and <span id="perlFunc">ref</span><span id="braces">(</span><span id="var">$feature</span><span id="braces">)</span><span id="braces">)</span> <span id="braces">{</span>
    	<span id="perlKey">if</span> <span id="braces">(</span><span id="var">$feature</span>-&gt;<span id="method">isa</span><span id="braces">(</span><span id="dqStr">"APPRIS::Gene"</span><span id="braces">)</span><span id="braces">)</span> <span id="braces">{</span>
			<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$transcript</span> <span id="braces">(</span>@<span id="braces">{</span><span id="var">$feature</span>-&gt;<span id="method">transcripts</span><span id="braces">}</span><span id="braces">)</span> <span id="braces">{</span>
				<span id="var">$output</span> .= <span id="module">APPRIS::Export::TAB</span>::<span id="method">get_trans_annotations</span><span id="braces">(</span><span id="var">$transcript</span>,<span id="var">$params</span><span id="braces">)</span>;
			<span id="braces">}</span>
    	<span id="braces">}</span>
    	<span id="perlKey">elsif</span> <span id="braces">(</span><span id="var">$feature</span>-&gt;<span id="method">isa</span><span id="braces">(</span><span id="dqStr">"APPRIS::Transcript"</span><span id="braces">)</span><span id="braces">)</span> <span id="braces">{</span>
    		<span id="var">$output</span> .= <span id="module">APPRIS::Export::TAB</span>::<span id="method">get_trans_annotations</span><span id="braces">(</span><span id="var">$feature</span>,<span id="var">$params</span><span id="braces">)</span>;
    	<span id="braces">}</span>
    	<span id="perlKey">else</span> <span id="braces">{</span>
			<span id="method">throw</span><span id="braces">(</span><span id="sqStr">'Argument must be an APPRIS::Gene or APPRIS::Transcript'</span><span id="braces">)</span>;
    	<span id="braces">}</span>
    <span id="braces">}</span>
    <span id="perlKey">else</span> <span id="braces">{</span>
		<span id="method">throw</span><span id="braces">(</span><span id="sqStr">'Argument must be define'</span><span id="braces">)</span>;
   	<span id="braces">}</span>
	<span id="perlKey">return</span> <span id="var">$output</span>;</pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE10" id="CODE10"></a>new</td><td ><a href="#POD7">description</a></td><td ><a href="#CODE9">prev</a></td><td ><a href="#CODE11">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="subName">new</span>
{<pre>	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$caller</span>, <span id="var">%args</span><span id="braces">)</span> = <span id="var">@_</span>;
	
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$caller_is_obj</span><span id="braces">)</span> = <span id="perlFunc">ref</span><span id="braces">(</span><span id="var">$caller</span><span id="braces">)</span>;
	<span id="perlKey">return</span> <span id="var">$caller</span> <span id="perlKey">if</span> <span id="var">$caller_is_obj</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$class</span><span id="braces">)</span> = <span id="var">$caller_is_obj</span> || <span id="var">$caller</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$self</span><span id="braces">)</span> = <span id="perlFunc">bless</span> <span id="braces">{</span><span id="braces">}</span>, <span id="var">$class</span>;

	<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$attrname</span> <span id="braces">(</span><span id="var">$self</span>-&gt;<span id="method">_standard_keys</span><span id="braces">)</span> <span id="braces">{</span>
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$attr</span><span id="braces">)</span> = <span id="dqStr">"-"</span>.<span id="var">$attrname</span>;
		<span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">exists</span> <span id="var">$args</span><span id="braces">{</span><span id="var">$attr</span><span id="braces">}</span> &amp;&amp; <span id="perlFunc">defined</span> <span id="var">$args</span><span id="braces">{</span><span id="var">$attr</span><span id="braces">}</span><span id="braces">)</span> <span id="braces">{</span>
			<span id="var">$self</span>-&gt;<span id="braces">{</span><span id="var">$attrname</span><span id="braces">}</span> = <span id="var">$args</span><span id="braces">{</span><span id="var">$attr</span><span id="braces">}</span>;
		<span id="braces">}</span> <span id="perlKey">else</span> <span id="braces">{</span>
			<span id="var">$self</span>-&gt;<span id="braces">{</span><span id="var">$attrname</span><span id="braces">}</span> = <span id="var">$self</span>-&gt;<span id="method">_default_for</span><span id="braces">(</span><span id="var">$attrname</span><span id="braces">)</span>;
		<span id="braces">}</span>
	<span id="braces">}</span>

	<span id="perlKey">return</span> <span id="var">$self</span>;</pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE11" id="CODE11"></a>software_version</td><td ><a href="#POD8">description</a></td><td ><a href="#CODE10">prev</a></td><td ><a href="#CODE12">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="subName">software_version</span>
{<pre>	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$self</span><span id="braces">)</span> = <span id="var">@_</span>;
	<span id="perlKey">return</span> <span id="var">$API_VERSION</span>;</pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE12" id="CODE12"></a>version</td><td ><a href="#POD9">description</a></td><td ><a href="#CODE11">prev</a></td><td >next</td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="subName">version</span>
{<pre>	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$self</span><span id="braces">)</span> = <span id="var">@_</span>;
	<span id="perlKey">return</span> <span id="var">$VERSION</span>;</pre>}</td></div>
<div id="sep"></div>
<a name="General" id="General"></a>
<div id="mainTitle">General documentation</div>
<div id="sep"></div>
<table id="genInfoTitle" width="100%"><tr><td><a name="_pod_CONTACT" id="_pod_CONTACT"></a>CONTACT</td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="genInfoArea"><pre id="podParagraph">  Please email comments or questions to the public INB
  developers list at <<a href="mailto:inb-tecnico@lists.cnio.es" id="podEmail">inb-tecnico@lists.cnio.es</a>&gt;.<br />
  Questions may also be sent to the developer, 
  Jose Manuel Rodriguez <<a href="mailto:jmrodriguez@cnio.es" id="podEmail">jmrodriguez@cnio.es</a>&gt;.</pre></div>
<div id="sep"></div>
</body>
</html>
