<head>
<!-- Generated by perlmod2www.pl -->
<title>
Parser documentation.
</title>
<link rel="stylesheet" type="text/css" href="perl.css">
</head>
<body bgcolor="white">
<span id="modRootPath">APPRIS</span>
<span id="modName">Parser</span>
<div id="sep"></div>
<a name="TOP" id="TOP"></a>
<table id="daArea" width="100%"><tr><td id="daEntry" ><a href="#SUMMARY">Summary</a></td><td id="daEntry" ><a href="#libs">Included libraries</a></td><td id="daEntry" ><a href="#vardefs">Package variables</a></td><td id="daEntry" ><a href="#SYNOPSIS">Synopsis</a></td><td id="daEntry" ><a href="#DESCRIPTION">Description</a></td><td id="daEntry" ><a href="#General">General documentation</a></td><td id="daEntry" ><a href="#Methods">Methods</a></td></tr></table>
<div id="sep"></div>
<div id="descTitle">Summary</div>
<div id="descArea">Parser - Module to handle results of methods of APPRIS pipeline.</div>
<div id="sep"></div>
<a name="vardefs" id="vardefs"></a><div id="descTitle">Package variables</div>
<div id="descArea"><div id="libEntry">No package variables defined.</div>
</div>
<div id="sep"></div>
<div id="descTitle">Included modules</div>
<div id="descArea"><div id="libEntry"><span id="use"><a href="Analysis.html">APPRIS::Analysis</a></span> </div>
<div id="libEntry"><span id="use"><a href="Analysis/APPRIS.html">APPRIS::Analysis::APPRIS</a></span> </div>
<div id="libEntry"><span id="use"><a href="Analysis/CExonic.html">APPRIS::Analysis::CExonic</a></span> </div>
<div id="libEntry"><span id="use"><a href="Analysis/CORSAIR.html">APPRIS::Analysis::CORSAIR</a></span> </div>
<div id="libEntry"><span id="use"><a href="Analysis/CRASH.html">APPRIS::Analysis::CRASH</a></span> </div>
<div id="libEntry"><span id="use"><a href="Analysis/Firestar.html">APPRIS::Analysis::Firestar</a></span> </div>
<div id="libEntry"><span id="use"><a href="Analysis/INERTIA.html">APPRIS::Analysis::INERTIA</a></span> </div>
<div id="libEntry"><span id="use"><a href="Analysis/Matador3D.html">APPRIS::Analysis::Matador3D</a></span> </div>
<div id="libEntry"><span id="use"><a href="Analysis/Region.html">APPRIS::Analysis::Region</a></span> </div>
<div id="libEntry"><span id="use"><a href="Analysis/SPADE.html">APPRIS::Analysis::SPADE</a></span> </div>
<div id="libEntry"><span id="use"><a href="Analysis/THUMP.html">APPRIS::Analysis::THUMP</a></span> </div>
<div id="libEntry"><span id="use"><a href="CDS.html">APPRIS::CDS</a></span> </div>
<div id="libEntry"><span id="use"><a href="Codon.html">APPRIS::Codon</a></span> </div>
<div id="libEntry"><span id="use"><a href="Exon.html">APPRIS::Exon</a></span> </div>
<div id="libEntry"><span id="use"><a href="Gene.html">APPRIS::Gene</a></span> </div>
<div id="libEntry"><span id="use"><a href="Transcript.html">APPRIS::Transcript</a></span> </div>
<div id="libEntry"><span id="use"><a href="Translation.html">APPRIS::Translation</a></span> </div>
<div id="libEntry"><span id="use"><a href="Utils/Argument.html">APPRIS::Utils::Argument</a></span> qw ( rearrange ) </div>
<div id="libEntry"><span id="use"><a href="Utils/Constant.html">APPRIS::Utils::Constant</a></span> qw ( $HAVANA_SOURCE $ENSEMBL_SOURCE $OK_LABEL $NO_LABEL $UNKNOWN_LABEL $FIRESTAR_ACCEPT_LABEL $FIRESTAR_REJECT_LABEL ) </div>
<div id="libEntry"><span id="use"><a href="Utils/EnsEMBL.html">APPRIS::Utils::EnsEMBL</a></span> qw ( get_xref_identifiers get_exons ) </div>
<div id="libEntry"><span id="use"><a href="Utils/Exception.html">APPRIS::Utils::Exception</a></span> qw ( throw warning deprecate ) </div>
<div id="libEntry"><span id="use"><a href="Utils/ProCDS.html">APPRIS::Utils::ProCDS</a></span> qw ( sort_cds get_cds_from_residue ) </div>
<div id="libEntry"><span id="use"><a href="XrefEntry.html">APPRIS::XrefEntry</a></span> </div>
<div id="libEntry"><span id="use">Bio::SeqIO</span> </div>
<div id="libEntry"><span id="use">Data::Dumper</span> </div>
<div id="libEntry"><span id="use"><a href="Exporter.html">Exporter</a></span></div>
</div>
<div id="sep"></div>
<a name="libs" id="libs"></a>
<div id="descTitle">Inherit</div>
<div id="descArea"><span id="isa"><a href="Exporter.html">Exporter</a></span> </div>
<div id="sep"></div>
<a name="SYNOPSIS" id="SYNOPSIS"></a>
<div id="descTitle">Synopsis</div>
<div id="descArea"><pre id="podParagraph">  use APPRIS::Parser
    qw(
       parse_firestar
     );

  or to get all methods just

  use APPRIS::Parser;

  eval { parse_firestar($result) };
  if ($@) {
    print "Caught exception:\n$@";
  }</pre>
</div>
<div id="sep"></div>
<a name="DESCRIPTION" id="DESCRIPTION"></a>
<div id="descTitle">Description</div>
<div id="descArea">Module to handle results of methods of APPRIS pipeline.
</div>
<div id="sep"></div>
<a name="Methods" id="Methods"></a>
<div id="descTitle">Methods</div>
<table id="methIndArea" width="100%" cellspacing="0"><tr><td id="methIndEntry">_fetch_transc_objects($$;$;$)</td><td id="methIndEntry"><div id="error">No description</div></td><td id="methIndEntry"><a href="#CODE1">Code</a></td></tr>
<tr><td id="methIndEntry">_fetch_transc_objects($$;$;$);</td><td id="methIndEntry"><div id="error">No description</div></td><td id="methIndEntry"><a href="#CODE2">Code</a></td></tr>
<tr><td id="methIndEntry">_fetch_transl_objects($$;$)</td><td id="methIndEntry"><div id="error">No description</div></td><td id="methIndEntry"><a href="#CODE3">Code</a></td></tr>
<tr><td id="methIndEntry">_fetch_transl_objects($$;$);</td><td id="methIndEntry"><div id="error">No description</div></td><td id="methIndEntry"><a href="#CODE4">Code</a></td></tr>
<tr><td id="methIndEntry">_get_id_version($)</td><td id="methIndEntry"><div id="error">No description</div></td><td id="methIndEntry"><a href="#CODE5">Code</a></td></tr>
<tr><td id="methIndEntry">_get_id_version($);</td><td id="methIndEntry"><div id="error">No description</div></td><td id="methIndEntry"><a href="#CODE6">Code</a></td></tr>
<tr><td id="methIndEntry">_parse_gencode_data($)</td><td id="methIndEntry"><div id="error">No description</div></td><td id="methIndEntry"><a href="#CODE7">Code</a></td></tr>
<tr><td id="methIndEntry">_parse_gencode_data($);</td><td id="methIndEntry"><div id="error">No description</div></td><td id="methIndEntry"><a href="#CODE8">Code</a></td></tr>
<tr><td id="methIndEntry">_parse_gencode_sequence($)</td><td id="methIndEntry"><div id="error">No description</div></td><td id="methIndEntry"><a href="#CODE9">Code</a></td></tr>
<tr><td id="methIndEntry">_parse_gencode_sequence($);</td><td id="methIndEntry"><div id="error">No description</div></td><td id="methIndEntry"><a href="#CODE10">Code</a></td></tr>
<tr><td id="methIndEntry">_parse_inertia_file($$\$)</td><td id="methIndEntry"><div id="error">No description</div></td><td id="methIndEntry"><a href="#CODE11">Code</a></td></tr>
<tr><td id="methIndEntry">_parse_inertia_file($$\$);</td><td id="methIndEntry"><div id="error">No description</div></td><td id="methIndEntry"><a href="#CODE12">Code</a></td></tr>
<tr><td id="methIndEntry">_parse_omega_file($$\$)</td><td id="methIndEntry"><div id="error">No description</div></td><td id="methIndEntry"><a href="#CODE13">Code</a></td></tr>
<tr><td id="methIndEntry">_parse_omega_file($$\$);</td><td id="methIndEntry"><div id="error">No description</div></td><td id="methIndEntry"><a href="#CODE14">Code</a></td></tr>
<tr><td id="methIndEntry">parse_appris($$)</td><td id="methIndEntry"><div id="error">No description</div></td><td id="methIndEntry"><a href="#CODE15">Code</a></td></tr>
<tr><td id="methIndEntry">parse_appris($$);</td><td id="methIndEntry"><div id="error">No description</div></td><td id="methIndEntry"><a href="#CODE16">Code</a></td></tr>
<tr><td id="methIndEntry">parse_cexonic($$$$)</td><td id="methIndEntry"><div id="error">No description</div></td><td id="methIndEntry"><a href="#CODE17">Code</a></td></tr>
<tr><td id="methIndEntry">parse_cexonic($$$$);</td><td id="methIndEntry"><div id="error">No description</div></td><td id="methIndEntry"><a href="#CODE18">Code</a></td></tr>
<tr><td id="methIndEntry">parse_corsair($$)</td><td id="methIndEntry"><div id="error">No description</div></td><td id="methIndEntry"><a href="#CODE19">Code</a></td></tr>
<tr><td id="methIndEntry">parse_corsair($$);</td><td id="methIndEntry"><div id="error">No description</div></td><td id="methIndEntry"><a href="#CODE20">Code</a></td></tr>
<tr><td id="methIndEntry">parse_crash($$)</td><td id="methIndEntry"><div id="error">No description</div></td><td id="methIndEntry"><a href="#CODE21">Code</a></td></tr>
<tr><td id="methIndEntry">parse_crash($$);</td><td id="methIndEntry"><div id="error">No description</div></td><td id="methIndEntry"><a href="#CODE22">Code</a></td></tr>
<tr><td id="methIndEntry">parse_firestar($$)</td><td id="methIndEntry"><div id="error">No description</div></td><td id="methIndEntry"><a href="#CODE23">Code</a></td></tr>
<tr><td id="methIndEntry">parse_firestar($$);</td><td id="methIndEntry"><div id="error">No description</div></td><td id="methIndEntry"><a href="#CODE24">Code</a></td></tr>
<tr><td id="methIndEntry">parse_firestar_gopher($)</td><td id="methIndEntry"><div id="error">No description</div></td><td id="methIndEntry"><a href="#CODE25">Code</a></td></tr>
<tr><td id="methIndEntry">parse_firestar_gopher($);</td><td id="methIndEntry"><div id="error">No description</div></td><td id="methIndEntry"><a href="#CODE26">Code</a></td></tr>
<tr><td id="methIndEntry">parse_gencode($;$;$)</td><td id="methIndEntry"><div id="error">No description</div></td><td id="methIndEntry"><a href="#CODE27">Code</a></td></tr>
<tr><td id="methIndEntry">parse_gencode($;$;$);</td><td id="methIndEntry"><div id="error">No description</div></td><td id="methIndEntry"><a href="#CODE28">Code</a></td></tr>
<tr><td id="methIndEntry">parse_inertia($$$$$)</td><td id="methIndEntry"><div id="error">No description</div></td><td id="methIndEntry"><a href="#CODE29">Code</a></td></tr>
<tr><td id="methIndEntry">parse_inertia($$$$$);</td><td id="methIndEntry"><div id="error">No description</div></td><td id="methIndEntry"><a href="#CODE30">Code</a></td></tr>
<tr><td id="methIndEntry">parse_matador3d($$)</td><td id="methIndEntry"><div id="error">No description</div></td><td id="methIndEntry"><a href="#CODE31">Code</a></td></tr>
<tr><td id="methIndEntry">parse_matador3d($$);</td><td id="methIndEntry"><div id="error">No description</div></td><td id="methIndEntry"><a href="#CODE32">Code</a></td></tr>
<tr><td id="methIndEntry">parse_spade($$)</td><td id="methIndEntry"><div id="error">No description</div></td><td id="methIndEntry"><a href="#CODE33">Code</a></td></tr>
<tr><td id="methIndEntry">parse_spade($$);</td><td id="methIndEntry"><div id="error">No description</div></td><td id="methIndEntry"><a href="#CODE34">Code</a></td></tr>
<tr><td id="methIndEntry">parse_thump($$)</td><td id="methIndEntry"><div id="error">No description</div></td><td id="methIndEntry"><a href="#CODE35">Code</a></td></tr>
<tr><td id="methIndEntry">parse_thump($$);</td><td id="methIndEntry"><div id="error">No description</div></td><td id="methIndEntry"><a href="#CODE36">Code</a></td></tr>
<tr><td id="methIndEntry">parser_appris_methods($$$$$$$$$$$$)</td><td id="methIndEntry"><div id="error">No description</div></td><td id="methIndEntry"><a href="#CODE37">Code</a></td></tr>
<tr><td id="methIndEntry">parser_appris_methods($$$$$$$$$$$$);</td><td id="methIndEntry"><div id="error">No description</div></td><td id="methIndEntry"><a href="#CODE38">Code</a></td></tr>
</table>
<div id="sep"></div>
<a name="MethDesc" id="MethDesc"></a>
<div id="mainTitle">Methods description</div>
<div id="sep"></div>
<div id="error">None available.</div>
<div id="sep"></div>
<a name="MethCode" id="MethCode"></a>
<div id="mainTitle">Methods code</div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE1" id="CODE1"></a>_fetch_transc_objects($$;$;$)</td><td >description</td><td >prev</td><td ><a href="#CODE2">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="privSubName">_fetch_transc_objects($$;$;$)</span>
{<pre>
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$gene_id</span>, <span id="var">$gene_features</span>, <span id="var">$transc_seq</span>, <span id="var">$transl_seq</span><span id="braces">)</span> = <span id="var">@_</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcripts</span><span id="braces">)</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$index_transcripts</span><span id="braces">)</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$index</span><span id="braces">)</span> = 0;	
	
	<span id="comment"># Scan transcripts</span><br />	<span id="perlKey">while</span> <span id="braces">(</span><span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcript_id</span>, <span id="var">$transcript_features</span><span id="braces">)</span> = <span id="perlFunc">each</span><span id="braces">(</span>%<span id="braces">{</span><span id="var">$gene_features</span><span id="braces">}</span><span id="braces">)</span> <span id="braces">)</span>
	<span id="braces">{</span>
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$xref_identities</span><span id="braces">)</span>;
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$sequence</span><span id="braces">)</span>;
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$exons</span><span id="braces">)</span>;

		<span id="comment"># Create transcript object</span><br />		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcript</span><span id="braces">)</span> = <span id="module"><a href="Transcript.html">APPRIS::Transcript</a></span>-&gt;<span id="perlKey">new</span>
		<span id="braces">(</span>
			-stable_id	=&gt; <span id="var">$transcript_id</span>,
			-<span id="perlFunc">chr</span>		=&gt; <span id="var">$transcript_features</span>-&gt;<span id="braces">{</span><span id="sqStr">'chr'</span><span id="braces">}</span>,
			-start		=&gt; <span id="var">$transcript_features</span>-&gt;<span id="braces">{</span><span id="sqStr">'start'</span><span id="braces">}</span>,
			-end		=&gt; <span id="var">$transcript_features</span>-&gt;<span id="braces">{</span><span id="sqStr">'end'</span><span id="braces">}</span>,
			-strand		=&gt; <span id="var">$transcript_features</span>-&gt;<span id="braces">{</span><span id="sqStr">'strand'</span><span id="braces">}</span>,
			-biotype	=&gt; <span id="var">$transcript_features</span>-&gt;<span id="braces">{</span><span id="sqStr">'biotype'</span><span id="braces">}</span>,
			-status		=&gt; <span id="var">$transcript_features</span>-&gt;<span id="braces">{</span><span id="sqStr">'status'</span><span id="braces">}</span>,
			-source		=&gt; <span id="var">$transcript_features</span>-&gt;<span id="braces">{</span><span id="sqStr">'source'</span><span id="braces">}</span>,
			-level		=&gt; <span id="var">$transcript_features</span>-&gt;<span id="braces">{</span><span id="sqStr">'level'</span><span id="braces">}</span>,
			-version	=&gt; <span id="var">$transcript_features</span>-&gt;<span id="braces">{</span><span id="sqStr">'version'</span><span id="braces">}</span>
		<span id="braces">)</span>;
			
		<span id="comment"># Xref identifiers</span><br />		<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$gene_id</span> <span id="braces">)</span> <span id="braces">{</span>
			<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$xref_identities</span><span id="braces">}</span>,
					<span id="module"><a href="XrefEntry.html">APPRIS::XrefEntry</a></span>-&gt;<span id="perlKey">new</span>
					<span id="braces">(</span>
						-id				=&gt; <span id="var">$gene_id</span>,
						-dbname			=&gt; <span id="sqStr">'Ensembl_Gene_Id'</span>
					<span id="braces">)</span>
			<span id="braces">)</span>;
		<span id="braces">}</span>
		<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">exists</span> <span id="var">$transcript_features</span>-&gt;<span id="braces">{</span><span id="sqStr">'external_id'</span><span id="braces">}</span> and <span id="perlFunc">defined</span> <span id="var">$transcript_features</span>-&gt;<span id="braces">{</span><span id="sqStr">'external_id'</span><span id="braces">}</span> <span id="braces">)</span> <span id="braces">{</span>
			<span id="comment">#$transcript-&gt;external_name($transcript_features-&gt;{'external_id'}); </span><br />			<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$xref_identities</span><span id="braces">}</span>,
					<span id="module"><a href="XrefEntry.html">APPRIS::XrefEntry</a></span>-&gt;<span id="perlKey">new</span>
					<span id="braces">(</span>
						-id				=&gt; <span id="var">$transcript_features</span>-&gt;<span id="braces">{</span><span id="sqStr">'external_id'</span><span id="braces">}</span>,
						-dbname			=&gt; <span id="sqStr">'External_Id'</span>
					<span id="braces">)</span>
			<span id="braces">)</span>;
		<span id="braces">}</span>
		<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">exists</span> <span id="var">$transcript_features</span>-&gt;<span id="braces">{</span><span id="sqStr">'havana_transcript'</span><span id="braces">}</span> and <span id="perlFunc">defined</span> <span id="var">$transcript_features</span>-&gt;<span id="braces">{</span><span id="sqStr">'havana_transcript'</span><span id="braces">}</span> <span id="braces">)</span> <span id="braces">{</span>
			<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$xref_identities</span><span id="braces">}</span>,
					<span id="module"><a href="XrefEntry.html">APPRIS::XrefEntry</a></span>-&gt;<span id="perlKey">new</span>
					<span id="braces">(</span>
						-id				=&gt; <span id="var">$transcript_features</span>-&gt;<span id="braces">{</span><span id="sqStr">'havana_transcript'</span><span id="braces">}</span>,
						-dbname			=&gt; <span id="sqStr">'Havana_Transcript_Id'</span>
					<span id="braces">)</span>
			<span id="braces">)</span>;
		<span id="braces">}</span>
		<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">exists</span> <span id="var">$transcript_features</span>-&gt;<span id="braces">{</span><span id="sqStr">'ccdsid'</span><span id="braces">}</span> and <span id="perlFunc">defined</span> <span id="var">$transcript_features</span>-&gt;<span id="braces">{</span><span id="sqStr">'ccdsid'</span><span id="braces">}</span> <span id="braces">)</span> <span id="braces">{</span>
			<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$xref_identities</span><span id="braces">}</span>,
					<span id="module"><a href="XrefEntry.html">APPRIS::XrefEntry</a></span>-&gt;<span id="perlKey">new</span>
					<span id="braces">(</span>
						-id				=&gt; <span id="var">$transcript_features</span>-&gt;<span id="braces">{</span><span id="sqStr">'ccdsid'</span><span id="braces">}</span>,
						-dbname			=&gt; <span id="sqStr">'CCDS'</span>
					<span id="braces">)</span>
			<span id="braces">)</span>;
		<span id="braces">}</span>				

		<span id="comment"># Add description From Ensembl </span><br />		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$trans_xref</span><span id="braces">)</span> = <span id="method">get_xref_identifiers</span><span id="braces">(</span><span id="var">$transcript_id</span><span id="braces">)</span>;
		<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">exists</span> <span id="var">$trans_xref</span>-&gt;<span id="braces">{</span><span id="sqStr">'description'</span><span id="braces">}</span> and <span id="perlFunc">defined</span> <span id="var">$trans_xref</span>-&gt;<span id="braces">{</span><span id="sqStr">'description'</span><span id="braces">}</span><span id="braces">)</span> <span id="braces">{</span>
			<span id="var">$transcript</span>-&gt;<span id="method">description</span><span id="braces">(</span><span id="var">$trans_xref</span>-&gt;<span id="braces">{</span><span id="sqStr">'description'</span><span id="braces">}</span><span id="braces">)</span>;
		<span id="braces">}</span>			
		
		<span id="comment"># Get transcript sequence</span><br />		<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$transc_seq</span> and
			 <span id="perlFunc">exists</span> <span id="var">$transc_seq</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span> and <span id="perlFunc">defined</span> <span id="var">$transc_seq</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span> <span id="braces">)</span> <span id="braces">{</span>
				<span id="var">$sequence</span> = <span id="var">$transc_seq</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>;
		<span id="braces">}</span>
			
		<span id="comment"># Get exon ids from ensembl</span><br />		<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">exists</span> <span id="var">$transcript_features</span>-&gt;<span id="braces">{</span><span id="sqStr">'exons'</span><span id="braces">}</span> and <span id="perlFunc">scalar</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$transcript_features</span>-&gt;<span id="braces">{</span><span id="sqStr">'exons'</span><span id="braces">}</span><span id="braces">}</span> &gt; 0<span id="braces">)</span> <span id="braces">)</span>
		<span id="braces">{</span>
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$aux_exons</span><span id="braces">)</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$ensembl_exon_list</span><span id="braces">)</span> = <span id="method">get_exons</span><span id="braces">(</span><span id="var">$transcript_id</span><span id="braces">)</span>;
			<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$exon</span> <span id="braces">(</span>@<span id="braces">{</span><span id="var">$transcript_features</span>-&gt;<span id="braces">{</span><span id="sqStr">'exons'</span><span id="braces">}</span><span id="braces">}</span><span id="braces">)</span>
			<span id="braces">{</span>
				<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$exon_id</span><span id="braces">)</span>;
				<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$e_exon</span> <span id="braces">(</span>@<span id="braces">{</span><span id="var">$ensembl_exon_list</span><span id="braces">}</span><span id="braces">)</span> <span id="braces">{</span> <span id="comment"># get id from ensembl</span><br />					<span id="perlKey">if</span> <span id="braces">(</span> <span id="braces">(</span><span id="var">$exon</span>-&gt;<span id="braces">{</span><span id="sqStr">'start'</span><span id="braces">}</span> == <span id="var">$e_exon</span>-&gt;<span id="braces">{</span><span id="sqStr">'start'</span><span id="braces">}</span><span id="braces">)</span> and <span id="braces">(</span><span id="var">$exon</span>-&gt;<span id="braces">{</span><span id="sqStr">'end'</span><span id="braces">}</span> == <span id="var">$e_exon</span>-&gt;<span id="braces">{</span><span id="sqStr">'end'</span><span id="braces">}</span><span id="braces">)</span> <span id="braces">)</span> <span id="braces">{</span>
						<span id="var">$exon_id</span> = <span id="var">$e_exon</span>-&gt;<span id="braces">{</span><span id="sqStr">'id'</span><span id="braces">}</span>;
					<span id="braces">}</span>
				<span id="braces">}</span>
				<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$aux_exons</span><span id="braces">}</span>,
					<span id="module"><a href="Exon.html">APPRIS::Exon</a></span>-&gt;<span id="perlKey">new</span>
					<span id="braces">(</span>
						-stable_id	=&gt; <span id="var">$exon_id</span>,
						-start		=&gt; <span id="var">$exon</span>-&gt;<span id="braces">{</span><span id="sqStr">'start'</span><span id="braces">}</span>,
						-end		=&gt; <span id="var">$exon</span>-&gt;<span id="braces">{</span><span id="sqStr">'end'</span><span id="braces">}</span>,
						-strand		=&gt; <span id="var">$exon</span>-&gt;<span id="braces">{</span><span id="sqStr">'strand'</span><span id="braces">}</span>,
					<span id="braces">)</span>
				<span id="braces">)</span>;
			<span id="braces">}</span>
			<span id="var">$exons</span> = <span id="method">sort_cds</span><span id="braces">(</span><span id="var">$aux_exons</span>, <span id="var">$transcript_features</span>-&gt;<span id="braces">{</span><span id="sqStr">'strand'</span><span id="braces">}</span><span id="braces">)</span>; <span id="comment"># sort exons</span><br />		<span id="braces">}</span>

		<span id="comment"># Add translation</span><br />		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$translate</span><span id="braces">)</span> = <span id="method">_fetch_transl_objects</span><span id="braces">(</span><span id="var">$transcript_id</span>, <span id="var">$transcript_features</span>, <span id="var">$transl_seq</span><span id="braces">)</span>;
		
		
		<span id="var">$transcript</span>-&gt;<span id="method">xref_identify</span><span id="braces">(</span><span id="var">$xref_identities</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$xref_identities</span><span id="braces">)</span>;
		<span id="var">$transcript</span>-&gt;<span id="method">sequence</span><span id="braces">(</span><span id="var">$sequence</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$sequence</span><span id="braces">)</span>;
		<span id="var">$transcript</span>-&gt;<span id="method">exons</span><span id="braces">(</span><span id="var">$exons</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$exons</span><span id="braces">)</span>;
		<span id="var">$transcript</span>-&gt;<span id="method">translate</span><span id="braces">(</span><span id="var">$translate</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$translate</span><span id="braces">)</span>;
			
		<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$transcripts</span><span id="braces">}</span>, <span id="var">$transcript</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$transcript</span><span id="braces">)</span>;
		<span id="var">$index_transcripts</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span> = <span id="var">$index</span>; <span id="var">$index</span>++; <span id="comment"># Index the list of transcripts		</span><br />	<span id="braces">}</span>
	<span id="perlKey">return</span> <span id="braces">(</span><span id="var">$transcripts</span>,<span id="var">$index_transcripts</span><span id="braces">)</span>;
	
<span id="braces">}</span> <span id="comment"># End _fetch_transc_objects</span><br /></pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE2" id="CODE2"></a>_fetch_transc_objects($$;$;$);</td><td >description</td><td ><a href="#CODE1">prev</a></td><td ><a href="#CODE3">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="privSubName">_fetch_transc_objects($$;$;$);</span>
{<pre><span id="perlKey">sub</span> <span id="method">_fetch_transl_objects</span><span id="braces">(</span>$$;$<span id="braces">)</span>;</pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE3" id="CODE3"></a>_fetch_transl_objects($$;$)</td><td >description</td><td ><a href="#CODE2">prev</a></td><td ><a href="#CODE4">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="privSubName">_fetch_transl_objects($$;$)</span>
{<pre>
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcript_id</span>, <span id="var">$transcript_features</span>, <span id="var">$transl_seq</span><span id="braces">)</span> = <span id="var">@_</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$sequence</span><span id="braces">)</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$cds</span><span id="braces">)</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$codons</span><span id="braces">)</span>;	

	<span id="comment"># Create object</span><br />	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$translate</span><span id="braces">)</span> = <span id="module"><a href="Translation.html">APPRIS::Translation</a></span>-&gt;<span id="perlKey">new</span>
	<span id="braces">(</span>
		-stable_id	=&gt; <span id="var">$transcript_id</span>,
	<span id="braces">)</span>;		

	<span id="comment"># From Ensembl:</span><br />	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$trans_xref</span><span id="braces">)</span> = <span id="method">get_xref_identifiers</span><span id="braces">(</span><span id="var">$transcript_id</span><span id="braces">)</span>;
	<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">exists</span> <span id="var">$trans_xref</span>-&gt;<span id="braces">{</span><span id="sqStr">'description'</span><span id="braces">}</span> and <span id="perlFunc">defined</span> <span id="var">$trans_xref</span>-&gt;<span id="braces">{</span><span id="sqStr">'description'</span><span id="braces">}</span><span id="braces">)</span> <span id="braces">{</span> <span id="comment"># add description</span><br />		<span id="var">$translate</span>-&gt;<span id="method">description</span><span id="braces">(</span><span id="var">$trans_xref</span>-&gt;<span id="braces">{</span><span id="sqStr">'description'</span><span id="braces">}</span><span id="braces">)</span>;
	<span id="braces">}</span>
	<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">exists</span> <span id="var">$trans_xref</span>-&gt;<span id="braces">{</span><span id="sqStr">'peptide_id'</span><span id="braces">}</span> and <span id="perlFunc">defined</span> <span id="var">$trans_xref</span>-&gt;<span id="braces">{</span><span id="sqStr">'peptide_id'</span><span id="braces">}</span><span id="braces">)</span> <span id="braces">{</span> <span id="comment"># add description</span><br />		<span id="var">$translate</span>-&gt;<span id="method">stable_id</span><span id="braces">(</span><span id="var">$trans_xref</span>-&gt;<span id="braces">{</span><span id="sqStr">'peptide_id'</span><span id="braces">}</span><span id="braces">)</span>;
	<span id="braces">}</span>
	
	<span id="comment"># Get translate sequence</span><br />	<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$transl_seq</span> and
		 <span id="perlFunc">exists</span> <span id="var">$transl_seq</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span> and <span id="perlFunc">defined</span> <span id="var">$transl_seq</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span> <span id="braces">)</span> <span id="braces">{</span>
			<span id="var">$sequence</span> = <span id="var">$transl_seq</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>;
	<span id="braces">}</span>

	<span id="comment"># Get cds</span><br />	<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">exists</span> <span id="var">$transcript_features</span>-&gt;<span id="braces">{</span><span id="sqStr">'cds'</span><span id="braces">}</span> and <span id="perlFunc">scalar</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$transcript_features</span>-&gt;<span id="braces">{</span><span id="sqStr">'cds'</span><span id="braces">}</span><span id="braces">}</span> &gt; 0<span id="braces">)</span> <span id="braces">)</span>
	<span id="braces">{</span>
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$aux_cds</span><span id="braces">)</span>;
		<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$cds</span> <span id="braces">(</span>@<span id="braces">{</span><span id="var">$transcript_features</span>-&gt;<span id="braces">{</span><span id="sqStr">'cds'</span><span id="braces">}</span><span id="braces">}</span><span id="braces">)</span>
		<span id="braces">{</span>
			<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$aux_cds</span><span id="braces">}</span>,
				<span id="module"><a href="CDS.html">APPRIS::CDS</a></span>-&gt;<span id="perlKey">new</span>
				<span id="braces">(</span>
					-start		=&gt; <span id="var">$cds</span>-&gt;<span id="braces">{</span><span id="sqStr">'start'</span><span id="braces">}</span>,
					-end		=&gt; <span id="var">$cds</span>-&gt;<span id="braces">{</span><span id="sqStr">'end'</span><span id="braces">}</span>,
					-strand		=&gt; <span id="var">$cds</span>-&gt;<span id="braces">{</span><span id="sqStr">'strand'</span><span id="braces">}</span>,
					-phase		=&gt; <span id="var">$cds</span>-&gt;<span id="braces">{</span><span id="sqStr">'phase'</span><span id="braces">}</span>,
				<span id="braces">)</span>
			<span id="braces">)</span>;
		<span id="braces">}</span>
		<span id="var">$cds</span> = <span id="method">sort_cds</span><span id="braces">(</span><span id="var">$aux_cds</span>, <span id="var">$transcript_features</span>-&gt;<span id="braces">{</span><span id="sqStr">'strand'</span><span id="braces">}</span><span id="braces">)</span>; <span id="comment"># sort exons</span><br />	<span id="braces">}</span>	

	<span id="comment"># Get codons</span><br />	<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">exists</span> <span id="var">$transcript_features</span>-&gt;<span id="braces">{</span><span id="sqStr">'codons'</span><span id="braces">}</span> and <span id="perlFunc">scalar</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$transcript_features</span>-&gt;<span id="braces">{</span><span id="sqStr">'codons'</span><span id="braces">}</span><span id="braces">}</span> &gt; 0<span id="braces">)</span> <span id="braces">)</span>
	<span id="braces">{</span>
		<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$codon</span> <span id="braces">(</span>@<span id="braces">{</span><span id="var">$transcript_features</span>-&gt;<span id="braces">{</span><span id="sqStr">'codons'</span><span id="braces">}</span><span id="braces">}</span><span id="braces">)</span>
		<span id="braces">{</span>
			<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$codons</span><span id="braces">}</span>,
				<span id="module"><a href="Codon.html">APPRIS::Codon</a></span>-&gt;<span id="perlKey">new</span>
				<span id="braces">(</span>
					-type		=&gt; <span id="var">$codon</span>-&gt;<span id="braces">{</span><span id="sqStr">'type'</span><span id="braces">}</span>,
					-start		=&gt; <span id="var">$codon</span>-&gt;<span id="braces">{</span><span id="sqStr">'start'</span><span id="braces">}</span>,
					-end		=&gt; <span id="var">$codon</span>-&gt;<span id="braces">{</span><span id="sqStr">'end'</span><span id="braces">}</span>,
					-strand		=&gt; <span id="var">$codon</span>-&gt;<span id="braces">{</span><span id="sqStr">'strand'</span><span id="braces">}</span>,
					-phase		=&gt; <span id="var">$codon</span>-&gt;<span id="braces">{</span><span id="sqStr">'phase'</span><span id="braces">}</span>,
				<span id="braces">)</span>
			<span id="braces">)</span>;
		<span id="braces">}</span>
	<span id="braces">}</span>
	
	<span id="var">$translate</span>-&gt;<span id="method">sequence</span><span id="braces">(</span><span id="var">$sequence</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$sequence</span><span id="braces">)</span>;
	<span id="var">$translate</span>-&gt;<span id="method">cds</span><span id="braces">(</span><span id="var">$cds</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$cds</span><span id="braces">)</span>;
	<span id="var">$translate</span>-&gt;<span id="method">codons</span><span id="braces">(</span><span id="var">$codons</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$codons</span><span id="braces">)</span>;
	
	<span id="perlKey">return</span> <span id="var">$translate</span>;
	
<span id="braces">}</span> <span id="comment"># End _fetch_transl_objects</span><br /></pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE4" id="CODE4"></a>_fetch_transl_objects($$;$);</td><td >description</td><td ><a href="#CODE3">prev</a></td><td ><a href="#CODE5">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="privSubName">_fetch_transl_objects($$;$);</span>
{<pre><span id="perlKey">sub</span> <span id="method">parse_firestar</span><span id="braces">(</span>$$<span id="braces">)</span>;</pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE5" id="CODE5"></a>_get_id_version($)</td><td >description</td><td ><a href="#CODE4">prev</a></td><td ><a href="#CODE6">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="privSubName">_get_id_version($)</span>
{<pre>
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$i_id</span><span id="braces">)</span> = <span id="var">@_</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$id</span>, <span id="var">$version</span><span id="braces">)</span> = <span id="braces">(</span><span id="perlFunc">undef</span>,<span id="perlFunc">undef</span><span id="braces">)</span>;
	
	<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$i_id</span> =~ <span id="regExp">/^([^\.]*)\.(\d*)$/</span> <span id="braces">)</span> <span id="braces">{</span>
		<span id="braces">(</span><span id="var">$id</span>, <span id="var">$version</span><span id="braces">)</span> = <span id="braces">(</span><span id="var">$1</span>, <span id="var">$2</span><span id="braces">)</span>;
	<span id="braces">}</span>
	<span id="perlKey">return</span> <span id="braces">(</span><span id="var">$id</span>, <span id="var">$version</span><span id="braces">)</span>;
		
<span id="braces">}</span> <span id="comment"># End _get_id_version</span><br /></pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE6" id="CODE6"></a>_get_id_version($);</td><td >description</td><td ><a href="#CODE5">prev</a></td><td ><a href="#CODE7">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="privSubName">_get_id_version($);</span>
{<pre><span id="perlKey">sub</span> <span id="method">_parse_gencode_data</span><span id="braces">(</span>$<span id="braces">)</span>;</pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE7" id="CODE7"></a>_parse_gencode_data($)</td><td >description</td><td ><a href="#CODE6">prev</a></td><td ><a href="#CODE8">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="privSubName">_parse_gencode_data($)</span>
{<pre>
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$file</span><span id="braces">)</span> = <span id="var">@_</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$data</span><span id="braces">)</span>;	
	<span id="perlKey">return</span> <span id="var">$data</span> <span id="perlKey">unless</span> <span id="braces">(</span>-e <span id="var">$file</span> and <span id="braces">(</span>-s <span id="var">$file</span> &gt; 0<span id="braces">)</span> <span id="braces">)</span>;
	
	<span id="perlFunc">open</span> <span id="braces">(</span>GENCONDE_FILE, <span id="var">$file</span><span id="braces">)</span> or <span id="method">throw</span><span id="braces">(</span><span id="sqStr">'Can not open file'</span><span id="braces">)</span>;
	<span id="perlKey">while</span> <span id="braces">(</span> &lt;GENCONDE_FILE&gt; <span id="braces">)</span>
	<span id="braces">{</span>
		<span id="comment">#ignore header</span><br />		<span id="perlKey">next</span> <span id="perlKey">if</span><span id="braces">(</span><span id="regExp">/^##/</span><span id="braces">)</span>;

		<span id="perlFunc">chomp</span>;

		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$chr</span>,<span id="var">$source</span>,<span id="var">$type</span>,<span id="var">$start</span>,<span id="var">$end</span>,<span id="var">$score</span>,<span id="var">$strand</span>,<span id="var">$phase</span>,<span id="var">$attributes</span><span id="braces">)</span> = <span id="perlFunc">split</span><span id="braces">(</span><span id="dqStr">"\t"</span><span id="braces">)</span>;
		<span id="perlKey">next</span> <span id="perlKey">unless</span><span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$chr</span> and 
					<span id="perlFunc">defined</span> <span id="var">$source</span> and
					<span id="perlFunc">defined</span> <span id="var">$type</span> and
					<span id="perlFunc">defined</span> <span id="var">$start</span> and
					<span id="perlFunc">defined</span> <span id="var">$end</span> and
					<span id="perlFunc">defined</span> <span id="var">$score</span> and
					<span id="perlFunc">defined</span> <span id="var">$strand</span> and
					<span id="perlFunc">defined</span> <span id="var">$phase</span> and 
					<span id="perlFunc">defined</span> <span id="var">$attributes</span><span id="braces">)</span>;

		<span id="comment">#store nine columns in hash</span><br />		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$fields</span><span id="braces">)</span> = <span id="braces">{</span>
				<span id="perlFunc">chr</span>        =&gt; <span id="var">$chr</span>,
				source     =&gt; <span id="var">$source</span>,
				type       =&gt; <span id="var">$type</span>,
				start      =&gt; <span id="var">$start</span>,
				end        =&gt; <span id="var">$end</span>,
				score      =&gt; <span id="var">$score</span>,
				strand     =&gt; <span id="var">$strand</span>,
				phase      =&gt; <span id="var">$phase</span>,
				attributes =&gt; <span id="var">$attributes</span>,
		<span id="braces">}</span>;
		<span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$chr</span> and <span id="var">$chr</span>=~<span id="regExp">/chr(\w*)/</span><span id="braces">)</span>
		<span id="braces">{</span>
			<span id="var">$chr</span> = <span id="var">$1</span> <span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$1</span><span id="braces">)</span>;
		<span id="braces">}</span>
		
		<span id="comment">#store ids and additional information in second hash</span><br />		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$attribs</span><span id="braces">)</span>;
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">@add_attributes</span><span id="braces">)</span> = <span id="perlFunc">split</span><span id="braces">(</span><span id="dqStr">";"</span>, <span id="var">$attributes</span><span id="braces">)</span>;				
		<span id="perlKey">for</span> <span id="braces">(</span> <span id="perlKey">my</span> <span id="var">$i</span>=0; <span id="var">$i</span>&lt;<span id="perlFunc">scalar</span> <span id="var">@add_attributes</span>; <span id="var">$i</span>++ <span id="braces">)</span>
		<span id="braces">{</span>
			<span id="var">$add_attributes</span><span id="braces">[</span><span id="var">$i</span><span id="braces">]</span> =~ <span id="regExp">/^(.+)\s(.+)$/</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$c_type</span><span id="braces">)</span> = <span id="var">$1</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$c_value</span><span id="braces">)</span> = <span id="var">$2</span>;
			<span id="perlKey">if</span><span id="braces">(</span>	<span id="perlFunc">defined</span> <span id="var">$c_type</span> and !<span id="braces">(</span><span id="var">$c_type</span>=~<span id="regExp">/^\s*$/</span><span id="braces">)</span> and
				<span id="perlFunc">defined</span> <span id="var">$c_value</span> and !<span id="braces">(</span><span id="var">$c_value</span>=~<span id="regExp">/^\s*$/</span><span id="braces">)</span><span id="braces">)</span>
			<span id="braces">{</span>
				<span id="var">$c_type</span> =~ <span id="regExp">s/^\s//</span>;
				<span id="var">$c_value</span> =~ <span id="regExp">s/&quot;//g</span>;
				<span id="perlKey">if</span><span id="braces">(</span>!<span id="perlFunc">exists</span><span id="braces">(</span><span id="var">$attribs</span>-&gt;<span id="braces">{</span><span id="var">$c_type</span><span id="braces">}</span><span id="braces">)</span><span id="braces">)</span>
				<span id="braces">{</span>
					<span id="var">$attribs</span>-&gt;<span id="braces">{</span><span id="var">$c_type</span><span id="braces">}</span> = <span id="var">$c_value</span>;
				<span id="braces">}</span>
			<span id="braces">}</span>
		<span id="braces">}</span>

		<span id="comment"># Always we have Gene Id</span><br />		<span id="perlKey">if</span><span id="braces">(</span>	<span id="perlFunc">exists</span> <span id="var">$attribs</span>-&gt;<span id="braces">{</span><span id="sqStr">'gene_id'</span><span id="braces">}</span> 		and <span id="perlFunc">defined</span> <span id="var">$attribs</span>-&gt;<span id="braces">{</span><span id="sqStr">'gene_id'</span><span id="braces">}</span> and
			<span id="perlFunc">exists</span> <span id="var">$attribs</span>-&gt;<span id="braces">{</span><span id="sqStr">'transcript_id'</span><span id="braces">}</span>	and <span id="perlFunc">defined</span> <span id="var">$attribs</span>-&gt;<span id="braces">{</span><span id="sqStr">'transcript_id'</span><span id="braces">}</span> <span id="braces">)</span>
		<span id="braces">{</span>
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$gene_id</span>, <span id="var">$gene_version</span><span id="braces">)</span> = <span id="method">_get_id_version</span><span id="braces">(</span><span id="var">$attribs</span>-&gt;<span id="braces">{</span><span id="sqStr">'gene_id'</span><span id="braces">}</span><span id="braces">)</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcript_id</span>, <span id="var">$trans_version</span><span id="braces">)</span> = <span id="method">_get_id_version</span><span id="braces">(</span><span id="var">$attribs</span>-&gt;<span id="braces">{</span><span id="sqStr">'transcript_id'</span><span id="braces">}</span><span id="braces">)</span>;

			<span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$gene_id</span> and <span id="perlFunc">defined</span> <span id="var">$transcript_id</span> and <span id="braces">(</span><span id="var">$type</span> <span id="perlKey">eq</span> <span id="sqStr">'gene'</span><span id="braces">)</span> <span id="braces">)</span> <span id="comment"># Gene Information</span><br />			<span id="braces">{</span>
				<span id="var">$data</span>-&gt;<span id="braces">{</span><span id="var">$gene_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'chr'</span><span id="braces">}</span> = <span id="var">$chr</span> <span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$chr</span><span id="braces">)</span>;			
				<span id="var">$data</span>-&gt;<span id="braces">{</span><span id="var">$gene_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'start'</span><span id="braces">}</span> = <span id="var">$start</span> <span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$start</span><span id="braces">)</span>;
				<span id="var">$data</span>-&gt;<span id="braces">{</span><span id="var">$gene_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'end'</span><span id="braces">}</span> = <span id="var">$end</span> <span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$end</span><span id="braces">)</span>;
				<span id="var">$data</span>-&gt;<span id="braces">{</span><span id="var">$gene_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'strand'</span><span id="braces">}</span> = <span id="var">$strand</span> <span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$strand</span><span id="braces">)</span>;

				<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$source</span> and
					<span id="braces">(</span><span id="var">$source</span> <span id="perlKey">eq</span> <span id="var">$APPRIS</span>::<span id="module">Utils::Constant::HAVANA_SOURCE</span> or <span id="var">$source</span> <span id="perlKey">eq</span> <span id="var">$APPRIS</span>::<span id="module">Utils::Constant::ENSEMBL_SOURCE</span><span id="braces">)</span> <span id="braces">)</span>
				<span id="braces">{</span>
					<span id="var">$data</span>-&gt;<span id="braces">{</span><span id="var">$gene_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'source'</span><span id="braces">}</span> = <span id="var">$source</span>; 					
				<span id="braces">}</span>
				<span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">exists</span> <span id="var">$attribs</span>-&gt;<span id="braces">{</span><span id="sqStr">'gene_status'</span><span id="braces">}</span> and <span id="perlFunc">defined</span> <span id="var">$attribs</span>-&gt;<span id="braces">{</span><span id="sqStr">'gene_status'</span><span id="braces">}</span><span id="braces">)</span>
				<span id="braces">{</span>
					<span id="var">$data</span>-&gt;<span id="braces">{</span><span id="var">$gene_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'status'</span><span id="braces">}</span> = <span id="var">$attribs</span>-&gt;<span id="braces">{</span><span id="sqStr">'gene_status'</span><span id="braces">}</span>;	
				<span id="braces">}</span>			
				<span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">exists</span> <span id="var">$attribs</span>-&gt;<span id="braces">{</span><span id="sqStr">'gene_type'</span><span id="braces">}</span> and <span id="perlFunc">defined</span> <span id="var">$attribs</span>-&gt;<span id="braces">{</span><span id="sqStr">'gene_type'</span><span id="braces">}</span><span id="braces">)</span>
				<span id="braces">{</span>
					<span id="var">$data</span>-&gt;<span id="braces">{</span><span id="var">$gene_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'biotype'</span><span id="braces">}</span> = <span id="var">$attribs</span>-&gt;<span id="braces">{</span><span id="sqStr">'gene_type'</span><span id="braces">}</span>;	
				<span id="braces">}</span>
				<span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">exists</span> <span id="var">$attribs</span>-&gt;<span id="braces">{</span><span id="sqStr">'gene_name'</span><span id="braces">}</span> and <span id="perlFunc">defined</span> <span id="var">$attribs</span>-&gt;<span id="braces">{</span><span id="sqStr">'gene_name'</span><span id="braces">}</span><span id="braces">)</span>
				<span id="braces">{</span>
					<span id="var">$data</span>-&gt;<span id="braces">{</span><span id="var">$gene_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'external_id'</span><span id="braces">}</span> = <span id="var">$attribs</span>-&gt;<span id="braces">{</span><span id="sqStr">'gene_name'</span><span id="braces">}</span>;	
				<span id="braces">}</span>
				<span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">exists</span> <span id="var">$attribs</span>-&gt;<span id="braces">{</span><span id="sqStr">'havana_gene'</span><span id="braces">}</span> and <span id="perlFunc">defined</span> <span id="var">$attribs</span>-&gt;<span id="braces">{</span><span id="sqStr">'havana_gene'</span><span id="braces">}</span><span id="braces">)</span>
				<span id="braces">{</span>
					<span id="var">$data</span>-&gt;<span id="braces">{</span><span id="var">$gene_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'havana_gene'</span><span id="braces">}</span> = <span id="var">$attribs</span>-&gt;<span id="braces">{</span><span id="sqStr">'havana_gene'</span><span id="braces">}</span>;	
				<span id="braces">}</span>
				<span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">exists</span> <span id="var">$attribs</span>-&gt;<span id="braces">{</span><span id="sqStr">'level'</span><span id="braces">}</span> and <span id="perlFunc">defined</span> <span id="var">$attribs</span>-&gt;<span id="braces">{</span><span id="sqStr">'level'</span><span id="braces">}</span><span id="braces">)</span>
				<span id="braces">{</span>
					<span id="var">$data</span>-&gt;<span id="braces">{</span><span id="var">$gene_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'level'</span><span id="braces">}</span> = <span id="var">$attribs</span>-&gt;<span id="braces">{</span><span id="sqStr">'level'</span><span id="braces">}</span>;	
				<span id="braces">}</span>
				<span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$gene_version</span><span id="braces">)</span>
				<span id="braces">{</span>
					<span id="var">$data</span>-&gt;<span id="braces">{</span><span id="var">$gene_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'version'</span><span id="braces">}</span> = <span id="var">$gene_version</span>;
				<span id="braces">}</span>
			<span id="braces">}</span>
			<span id="perlKey">elsif</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$gene_id</span> and <span id="perlFunc">defined</span> <span id="var">$transcript_id</span> and <span id="braces">(</span><span id="var">$type</span> <span id="perlKey">eq</span> <span id="sqStr">'transcript'</span><span id="braces">)</span> <span id="braces">)</span> <span id="comment"># Transcript Information</span><br />			<span id="braces">{</span>
				<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcript</span><span id="braces">)</span>;
				<span id="var">$transcript</span>-&gt;<span id="braces">{</span><span id="sqStr">'chr'</span><span id="braces">}</span> = <span id="var">$chr</span> <span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$chr</span><span id="braces">)</span>;
				<span id="var">$transcript</span>-&gt;<span id="braces">{</span><span id="sqStr">'start'</span><span id="braces">}</span> = <span id="var">$start</span> <span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$start</span><span id="braces">)</span>;
				<span id="var">$transcript</span>-&gt;<span id="braces">{</span><span id="sqStr">'end'</span><span id="braces">}</span> = <span id="var">$end</span> <span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$end</span><span id="braces">)</span>;
				<span id="var">$transcript</span>-&gt;<span id="braces">{</span><span id="sqStr">'strand'</span><span id="braces">}</span> = <span id="var">$strand</span> <span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$strand</span><span id="braces">)</span>;					

				<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$source</span> and
					<span id="braces">(</span><span id="var">$source</span> <span id="perlKey">eq</span> <span id="var">$APPRIS</span>::<span id="module">Utils::Constant::HAVANA_SOURCE</span> or <span id="var">$source</span> <span id="perlKey">eq</span> <span id="var">$APPRIS</span>::<span id="module">Utils::Constant::ENSEMBL_SOURCE</span><span id="braces">)</span> <span id="braces">)</span>
				<span id="braces">{</span>
					<span id="var">$transcript</span>-&gt;<span id="braces">{</span><span id="sqStr">'source'</span><span id="braces">}</span> = <span id="var">$source</span>;
				<span id="braces">}</span>
				<span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">exists</span> <span id="var">$attribs</span>-&gt;<span id="braces">{</span><span id="sqStr">'transcript_status'</span><span id="braces">}</span> and <span id="perlFunc">defined</span> <span id="var">$attribs</span>-&gt;<span id="braces">{</span><span id="sqStr">'transcript_status'</span><span id="braces">}</span><span id="braces">)</span>
				<span id="braces">{</span>
					<span id="var">$transcript</span>-&gt;<span id="braces">{</span><span id="sqStr">'status'</span><span id="braces">}</span> = <span id="var">$attribs</span>-&gt;<span id="braces">{</span><span id="sqStr">'transcript_status'</span><span id="braces">}</span>;	
				<span id="braces">}</span>			
				<span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">exists</span> <span id="var">$attribs</span>-&gt;<span id="braces">{</span><span id="sqStr">'transcript_type'</span><span id="braces">}</span> and <span id="perlFunc">defined</span> <span id="var">$attribs</span>-&gt;<span id="braces">{</span><span id="sqStr">'transcript_type'</span><span id="braces">}</span><span id="braces">)</span>
				<span id="braces">{</span>
					<span id="var">$transcript</span>-&gt;<span id="braces">{</span><span id="sqStr">'biotype'</span><span id="braces">}</span> = <span id="var">$attribs</span>-&gt;<span id="braces">{</span><span id="sqStr">'transcript_type'</span><span id="braces">}</span>;	
				<span id="braces">}</span>
				<span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">exists</span> <span id="var">$attribs</span>-&gt;<span id="braces">{</span><span id="sqStr">'transcript_name'</span><span id="braces">}</span> and <span id="perlFunc">defined</span> <span id="var">$attribs</span>-&gt;<span id="braces">{</span><span id="sqStr">'transcript_name'</span><span id="braces">}</span><span id="braces">)</span>
				<span id="braces">{</span>
					<span id="var">$transcript</span>-&gt;<span id="braces">{</span><span id="sqStr">'external_id'</span><span id="braces">}</span> = <span id="var">$attribs</span>-&gt;<span id="braces">{</span><span id="sqStr">'transcript_name'</span><span id="braces">}</span>;	
				<span id="braces">}</span>
				<span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">exists</span> <span id="var">$attribs</span>-&gt;<span id="braces">{</span><span id="sqStr">'havana_transcript'</span><span id="braces">}</span> and <span id="perlFunc">defined</span> <span id="var">$attribs</span>-&gt;<span id="braces">{</span><span id="sqStr">'havana_transcript'</span><span id="braces">}</span><span id="braces">)</span>
				<span id="braces">{</span>
					<span id="var">$transcript</span>-&gt;<span id="braces">{</span><span id="sqStr">'havana_transcript'</span><span id="braces">}</span> = <span id="var">$attribs</span>-&gt;<span id="braces">{</span><span id="sqStr">'havana_transcript'</span><span id="braces">}</span>;	
				<span id="braces">}</span>
				<span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">exists</span> <span id="var">$attribs</span>-&gt;<span id="braces">{</span><span id="sqStr">'level'</span><span id="braces">}</span> and <span id="perlFunc">defined</span> <span id="var">$attribs</span>-&gt;<span id="braces">{</span><span id="sqStr">'level'</span><span id="braces">}</span><span id="braces">)</span>
				<span id="braces">{</span>
					<span id="var">$transcript</span>-&gt;<span id="braces">{</span><span id="sqStr">'level'</span><span id="braces">}</span> = <span id="var">$attribs</span>-&gt;<span id="braces">{</span><span id="sqStr">'level'</span><span id="braces">}</span>;	
				<span id="braces">}</span>
				<span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$trans_version</span><span id="braces">)</span>
				<span id="braces">{</span>
					<span id="var">$transcript</span>-&gt;<span id="braces">{</span><span id="sqStr">'version'</span><span id="braces">}</span> = <span id="var">$trans_version</span>;
				<span id="braces">}</span>
				<span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">exists</span> <span id="var">$attribs</span>-&gt;<span id="braces">{</span><span id="sqStr">'ccdsid'</span><span id="braces">}</span> and <span id="perlFunc">defined</span> <span id="var">$attribs</span>-&gt;<span id="braces">{</span><span id="sqStr">'ccdsid'</span><span id="braces">}</span><span id="braces">)</span>
				<span id="braces">{</span>
					<span id="var">$transcript</span>-&gt;<span id="braces">{</span><span id="sqStr">'ccdsid'</span><span id="braces">}</span> = <span id="var">$attribs</span>-&gt;<span id="braces">{</span><span id="sqStr">'ccdsid'</span><span id="braces">}</span>;	
				<span id="braces">}</span>
					
				<span id="var">$data</span>-&gt;<span id="braces">{</span><span id="var">$gene_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'transcripts'</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span> = <span id="var">$transcript</span> <span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$transcript</span><span id="braces">)</span>;
			<span id="braces">}</span>
			<span id="perlKey">elsif</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$gene_id</span> and <span id="perlFunc">defined</span> <span id="var">$transcript_id</span> and <span id="braces">(</span><span id="var">$type</span> <span id="perlKey">eq</span> <span id="sqStr">'exon'</span><span id="braces">)</span> <span id="braces">)</span> <span id="comment"># Exon Information</span><br />			<span id="braces">{</span>
				<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$exon</span><span id="braces">)</span>;
				<span id="var">$exon</span>-&gt;<span id="braces">{</span><span id="sqStr">'start'</span><span id="braces">}</span> = <span id="var">$start</span> <span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$start</span><span id="braces">)</span>;
				<span id="var">$exon</span>-&gt;<span id="braces">{</span><span id="sqStr">'end'</span><span id="braces">}</span> = <span id="var">$end</span> <span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$end</span><span id="braces">)</span>;
				<span id="var">$exon</span>-&gt;<span id="braces">{</span><span id="sqStr">'strand'</span><span id="braces">}</span> = <span id="var">$strand</span> <span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$strand</span><span id="braces">)</span>;
						
				<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$data</span>-&gt;<span id="braces">{</span><span id="var">$gene_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'transcripts'</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'exons'</span><span id="braces">}</span><span id="braces">}</span>,<span id="var">$exon</span><span id="braces">)</span>;
			<span id="braces">}</span>			
			<span id="perlKey">elsif</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$gene_id</span> and <span id="perlFunc">defined</span> <span id="var">$transcript_id</span> and <span id="braces">(</span><span id="var">$type</span> <span id="perlKey">eq</span> <span id="sqStr">'CDS'</span><span id="braces">)</span> <span id="braces">)</span> <span id="comment"># CDS Information</span><br />			<span id="braces">{</span>
				<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$cds</span><span id="braces">)</span>;
				<span id="var">$cds</span>-&gt;<span id="braces">{</span><span id="sqStr">'start'</span><span id="braces">}</span> = <span id="var">$start</span> <span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$start</span><span id="braces">)</span>;
				<span id="var">$cds</span>-&gt;<span id="braces">{</span><span id="sqStr">'end'</span><span id="braces">}</span> = <span id="var">$end</span> <span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$end</span><span id="braces">)</span>;
				<span id="var">$cds</span>-&gt;<span id="braces">{</span><span id="sqStr">'strand'</span><span id="braces">}</span> = <span id="var">$strand</span> <span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$strand</span><span id="braces">)</span>;
				<span id="var">$cds</span>-&gt;<span id="braces">{</span><span id="sqStr">'phase'</span><span id="braces">}</span> = <span id="var">$phase</span> <span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$phase</span><span id="braces">)</span>;
				
				<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$data</span>-&gt;<span id="braces">{</span><span id="var">$gene_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'transcripts'</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'cds'</span><span id="braces">}</span><span id="braces">}</span>,<span id="var">$cds</span><span id="braces">)</span>;
			<span id="braces">}</span>
			<span id="perlKey">elsif</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$gene_id</span> and <span id="perlFunc">defined</span> <span id="var">$transcript_id</span> and <span id="braces">(</span><span id="var">$type</span> <span id="perlKey">eq</span> <span id="sqStr">'start_codon'</span><span id="braces">)</span> <span id="braces">)</span> <span id="comment"># Codon Information</span><br />			<span id="braces">{</span>
				<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$codon</span><span id="braces">)</span>;
				<span id="var">$codon</span>-&gt;<span id="braces">{</span><span id="sqStr">'type'</span><span id="braces">}</span>=<span id="sqStr">'start'</span>;
				<span id="var">$codon</span>-&gt;<span id="braces">{</span><span id="sqStr">'start'</span><span id="braces">}</span> = <span id="var">$start</span> <span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$start</span><span id="braces">)</span>;
				<span id="var">$codon</span>-&gt;<span id="braces">{</span><span id="sqStr">'end'</span><span id="braces">}</span> = <span id="var">$end</span> <span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$end</span><span id="braces">)</span>;
				<span id="var">$codon</span>-&gt;<span id="braces">{</span><span id="sqStr">'strand'</span><span id="braces">}</span> = <span id="var">$strand</span> <span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$strand</span><span id="braces">)</span>;
				<span id="var">$codon</span>-&gt;<span id="braces">{</span><span id="sqStr">'phase'</span><span id="braces">}</span> = <span id="var">$phase</span> <span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$phase</span><span id="braces">)</span>;
				
				<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$data</span>-&gt;<span id="braces">{</span><span id="var">$gene_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'transcripts'</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'codons'</span><span id="braces">}</span><span id="braces">}</span>,<span id="var">$codon</span><span id="braces">)</span> <span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$codon</span><span id="braces">)</span>;
			<span id="braces">}</span>
			<span id="perlKey">elsif</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$gene_id</span> and <span id="perlFunc">defined</span> <span id="var">$transcript_id</span> and <span id="braces">(</span><span id="var">$type</span> <span id="perlKey">eq</span> <span id="sqStr">'stop_codon'</span><span id="braces">)</span> <span id="braces">)</span> <span id="comment"># Codon Information</span><br />			<span id="braces">{</span>
				<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$codon</span><span id="braces">)</span>;
				<span id="var">$codon</span>-&gt;<span id="braces">{</span><span id="sqStr">'type'</span><span id="braces">}</span>=<span id="sqStr">'stop'</span>;
				<span id="var">$codon</span>-&gt;<span id="braces">{</span><span id="sqStr">'start'</span><span id="braces">}</span> = <span id="var">$start</span> <span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$start</span><span id="braces">)</span>;
				<span id="var">$codon</span>-&gt;<span id="braces">{</span><span id="sqStr">'end'</span><span id="braces">}</span> = <span id="var">$end</span> <span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$end</span><span id="braces">)</span>;
				<span id="var">$codon</span>-&gt;<span id="braces">{</span><span id="sqStr">'strand'</span><span id="braces">}</span> = <span id="var">$strand</span> <span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$strand</span><span id="braces">)</span>;
				<span id="var">$codon</span>-&gt;<span id="braces">{</span><span id="sqStr">'phase'</span><span id="braces">}</span> = <span id="var">$phase</span> <span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$phase</span><span id="braces">)</span>;
				
				<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$data</span>-&gt;<span id="braces">{</span><span id="var">$gene_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'transcripts'</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'codons'</span><span id="braces">}</span><span id="braces">}</span>,<span id="var">$codon</span><span id="braces">)</span> <span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$codon</span><span id="braces">)</span>;
			<span id="braces">}</span>
		<span id="braces">}</span>
		<span id="perlKey">else</span>
		<span id="braces">{</span>
			<span id="method">throw</span><span id="braces">(</span><span id="sqStr">'Wrong entity'</span><span id="braces">)</span>;
		<span id="braces">}</span>
	<span id="braces">}</span>
	<span id="perlFunc">close</span><span id="braces">(</span>GENCONDE_FILE<span id="braces">)</span>;
	
	<span id="perlKey">return</span> <span id="var">$data</span>;
	
<span id="braces">}</span> <span id="comment"># End _parse_gencode_data</span><br /></pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE8" id="CODE8"></a>_parse_gencode_data($);</td><td >description</td><td ><a href="#CODE7">prev</a></td><td ><a href="#CODE9">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="privSubName">_parse_gencode_data($);</span>
{<pre><span id="perlKey">sub</span> <span id="method">_parse_gencode_sequence</span><span id="braces">(</span>$<span id="braces">)</span>;</pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE9" id="CODE9"></a>_parse_gencode_sequence($)</td><td >description</td><td ><a href="#CODE8">prev</a></td><td ><a href="#CODE10">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="privSubName">_parse_gencode_sequence($)</span>
{<pre>
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$file</span><span id="braces">)</span> = <span id="var">@_</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$data</span><span id="braces">)</span>;

	<span id="perlKey">if</span> <span id="braces">(</span>-e <span id="var">$file</span> and <span id="braces">(</span>-s <span id="var">$file</span> &gt; 0<span id="braces">)</span> <span id="braces">)</span> <span id="braces">{</span>
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$in</span><span id="braces">)</span> = <span id="module">Bio::SeqIO</span>-&gt;<span id="perlKey">new</span><span id="braces">(</span>
							-file =&gt; <span id="var">$file</span>,
							-<span id="perlFunc">format</span> =&gt; <span id="sqStr">'Fasta'</span>
		<span id="braces">)</span>;
		<span id="perlKey">while</span> <span id="braces">(</span> <span id="perlKey">my</span> <span id="var">$seq</span> = <span id="var">$in</span>-&gt;<span id="method">next_seq</span><span id="braces">(</span><span id="braces">)</span> <span id="braces">)</span>
		<span id="braces">{</span>
			<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$seq</span>-&gt;<span id="method">id</span>=~<span id="regExp">/([^|]*)/</span> <span id="braces">)</span>
			<span id="braces">{</span>
				<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$sequence_id</span><span id="braces">)</span> = <span id="var">$1</span>;
				<span id="var">$sequence_id</span> =~ <span id="regExp">s/\.\d*$//</span>; <span id="comment"># delete suffix</span><br />				<span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">exists</span> <span id="var">$data</span>-&gt;<span id="braces">{</span><span id="var">$sequence_id</span><span id="braces">}</span><span id="braces">)</span> <span id="braces">{</span>
					<span id="method">throw</span><span id="braces">(</span><span id="dqStr">"Duplicated sequence: <span id="var">$sequence_id</span>"</span><span id="braces">)</span>;
				<span id="braces">}</span>
				<span id="perlKey">else</span> <span id="braces">{</span>
					<span id="var">$data</span>-&gt;<span id="braces">{</span><span id="var">$sequence_id</span><span id="braces">}</span> = <span id="var">$seq</span>-&gt;<span id="method">seq</span>;				
				<span id="braces">}</span>
			<span id="braces">}</span>
		<span id="braces">}</span>		
	<span id="braces">}</span>
	<span id="perlKey">return</span> <span id="var">$data</span>;
	
<span id="braces">}</span> <span id="comment"># End _parse_gencode_sequence</span><br /></pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE10" id="CODE10"></a>_parse_gencode_sequence($);</td><td >description</td><td ><a href="#CODE9">prev</a></td><td ><a href="#CODE11">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="privSubName">_parse_gencode_sequence($);</span>
{<pre><span id="perlKey">sub</span> <span id="method">_fetch_transc_objects</span><span id="braces">(</span>$$;$;$<span id="braces">)</span>;</pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE11" id="CODE11"></a>_parse_inertia_file($$\$)</td><td >description</td><td ><a href="#CODE10">prev</a></td><td ><a href="#CODE12">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="privSubName">_parse_inertia_file($$\$)</span>
{<pre>
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$type</span>, <span id="var">$result</span>, <span id="var">$ref_cutoffs</span><span id="braces">)</span> = <span id="var">@_</span>;

	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcript_id</span><span id="braces">)</span>;	
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">@results</span><span id="braces">)</span> = <span id="perlFunc">split</span><span id="braces">(</span> <span id="sqStr">'\n'</span>, <span id="var">$result</span><span id="braces">)</span>;
	
	<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$line</span> <span id="braces">(</span><span id="var">@results</span><span id="braces">)</span>
	<span id="braces">{</span>
		<span id="perlKey">next</span> <span id="perlKey">if</span><span id="braces">(</span> <span id="var">$line</span> =~ <span id="regExp">/^#/</span> <span id="braces">)</span>; <span id="comment"># Skip comment line</span><br />		<span id="var">$line</span>.=<span id="dqStr">"\n"</span>; <span id="comment"># Due we are spliting by '\n'</span><br />		
		<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$line</span> =~ <span id="regExp">/^&gt;([^\t]+)\t+([^\n]+)\n+$/</span> <span id="braces">)</span>
		<span id="braces">{</span>
			<span id="var">$transcript_id</span> = <span id="var">$1</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$unusual_evolution</span><span id="braces">)</span> = <span id="var">$2</span>;

			$<span id="braces">{</span><span id="var">$ref_cutoffs</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="var">$type</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'unusual_evolution'</span><span id="braces">}</span> = <span id="var">$unusual_evolution</span>;			
			<span id="perlKey">unless</span> <span id="braces">(</span> <span id="perlFunc">exists</span> $<span id="braces">{</span><span id="var">$ref_cutoffs</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="var">$type</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> <span id="braces">)</span> <span id="braces">{</span>
				$<span id="braces">{</span><span id="var">$ref_cutoffs</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="var">$type</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> = <span id="var">$line</span>;
			<span id="braces">}</span> <span id="perlKey">else</span> <span id="braces">{</span>
				$<span id="braces">{</span><span id="var">$ref_cutoffs</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="var">$type</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> .= <span id="var">$line</span>;
			<span id="braces">}</span>			
		<span id="braces">}</span>		
		<span id="perlKey">elsif</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$transcript_id</span> and <span id="braces">(</span><span id="var">$line</span> =~ <span id="regExp">/^\t+([^\:]+)\:([^\_]+)\:([^\t]+)\t([^\n]+)\n+$/</span><span id="braces">)</span> <span id="braces">)</span>
		<span id="braces">{</span>
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$start</span><span id="braces">)</span> = <span id="var">$1</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$end</span><span id="braces">)</span> = <span id="var">$2</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$strand</span><span id="braces">)</span> = <span id="var">$3</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$exon_annotation</span><span id="braces">)</span> = <span id="var">$4</span>;
		
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$exon_report</span><span id="braces">)</span> = <span id="braces">{</span>
							<span id="sqStr">'start'</span>					=&gt; <span id="var">$start</span>,
							<span id="sqStr">'end'</span>					=&gt; <span id="var">$end</span>,
							<span id="sqStr">'strand'</span>				=&gt; <span id="var">$strand</span>,
							<span id="sqStr">'unusual_evolution'</span>		=&gt; <span id="var">$exon_annotation</span>						
			<span id="braces">}</span>;
			<span id="perlFunc">push</span><span id="braces">(</span> @<span id="braces">{</span>$<span id="braces">{</span><span id="var">$ref_cutoffs</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="var">$type</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'residues'</span><span id="braces">}</span><span id="braces">}</span>, <span id="var">$exon_report</span> <span id="braces">)</span>;
			$<span id="braces">{</span><span id="var">$ref_cutoffs</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="var">$type</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> .= <span id="var">$line</span>;
		<span id="braces">}</span>		
	<span id="braces">}</span>	
<span id="braces">}</span> <span id="comment"># End _parse_inertia_file</span><br /></pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE12" id="CODE12"></a>_parse_inertia_file($$\$);</td><td >description</td><td ><a href="#CODE11">prev</a></td><td ><a href="#CODE13">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="privSubName">_parse_inertia_file($$\$);</span>
{<pre><span id="perlKey">sub</span> <span id="method">_parse_omega_file</span><span id="braces">(</span>$$\$<span id="braces">)</span>;</pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE13" id="CODE13"></a>_parse_omega_file($$\$)</td><td >description</td><td ><a href="#CODE12">prev</a></td><td ><a href="#CODE14">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="privSubName">_parse_omega_file($$\$)</span>
{<pre>
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$type</span>, <span id="var">$result</span>, <span id="var">$ref_cutoffs</span><span id="braces">)</span> = <span id="var">@_</span>;

	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">@results</span><span id="braces">)</span> = <span id="perlFunc">split</span><span id="braces">(</span> <span id="sqStr">'\n'</span>, <span id="var">$result</span><span id="braces">)</span>;
	
	<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$line</span> <span id="braces">(</span><span id="var">@results</span><span id="braces">)</span>
	<span id="braces">{</span>
		<span id="perlKey">next</span> <span id="perlKey">if</span><span id="braces">(</span> <span id="var">$line</span> =~<span id="regExp">/^#/</span> <span id="braces">)</span>; <span id="comment"># Skip comment line</span><br />		<span id="var">$line</span>.=<span id="dqStr">"\n"</span>; <span id="comment"># Due we are spliting by '\n'</span><br />				
		<span id="comment"># omega_average omega_exon_id   start_exon      end_exon        strand_exon     difference_value        p_value st_desviation   exon_annotation transcript_list</span><br />		<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$line</span> =~ <span id="regExp">/^([^\t]+)\t+([^\t]+)\t([^\t]+)\t([^\t]+)\t([^\t]+)\t([^\t]+)\t+([^\t]+)\t+([^\t]+)\t+([^\t]+)\t+([^\n]+)\n+$/</span> <span id="braces">)</span>
		<span id="braces">{</span>
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$omega_mean</span><span id="braces">)</span> = <span id="var">$1</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$omega_exon_id</span><span id="braces">)</span> = <span id="var">$2</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$start</span><span id="braces">)</span> = <span id="var">$3</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$end</span><span id="braces">)</span> = <span id="var">$4</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$strand</span><span id="braces">)</span> = <span id="var">$5</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$d_value</span><span id="braces">)</span> = <span id="var">$6</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$p_value</span><span id="braces">)</span> = <span id="var">$7</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$st_desviation</span><span id="braces">)</span> = <span id="var">$8</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$exon_annotation</span><span id="braces">)</span> = <span id="var">$9</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$exon_transcrits_list</span><span id="braces">)</span> = <span id="var">$10</span>;
		
			<span id="comment"># Get the trasncipt with omega exons</span><br />			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">@exon_transcrits</span><span id="braces">)</span>;
			<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$exon_transcrits_list</span> <span id="perlKey">ne</span> <span id="sqStr">'NULL'</span> <span id="braces">)</span> <span id="braces">{</span>
				<span id="var">@exon_transcrits</span> = <span id="perlFunc">split</span><span id="braces">(</span><span id="sqStr">';'</span>,<span id="var">$exon_transcrits_list</span><span id="braces">)</span>;			
			<span id="braces">}</span>
			
			<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$transcript_id</span> <span id="braces">(</span><span id="var">@exon_transcrits</span><span id="braces">)</span>
			<span id="braces">{</span>
				<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$omega_exon_report</span><span id="braces">)</span> = <span id="braces">{</span>
							<span id="sqStr">'omega_exon_id'</span>			=&gt; <span id="var">$omega_exon_id</span>,
							<span id="sqStr">'start'</span>					=&gt; <span id="var">$start</span>,
							<span id="sqStr">'end'</span>					=&gt; <span id="var">$end</span>,
							<span id="sqStr">'strand'</span>				=&gt; <span id="var">$strand</span>,
							<span id="sqStr">'omega_mean'</span>			=&gt; <span id="var">$omega_mean</span>,
							<span id="sqStr">'st_deviation'</span>			=&gt; <span id="var">$st_desviation</span>,
							<span id="sqStr">'difference_value'</span>		=&gt; <span id="var">$d_value</span>,
							<span id="sqStr">'p_value'</span>				=&gt; <span id="var">$p_value</span>,
							<span id="sqStr">'unusual_evolution'</span>		=&gt; <span id="var">$exon_annotation</span>						
				<span id="braces">}</span>;
				<span id="perlFunc">push</span><span id="braces">(</span> @<span id="braces">{</span>$<span id="braces">{</span><span id="var">$ref_cutoffs</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="var">$type</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'residues'</span><span id="braces">}</span><span id="braces">}</span>, <span id="var">$omega_exon_report</span> <span id="braces">)</span>;
				<span id="perlKey">unless</span> <span id="braces">(</span> <span id="perlFunc">exists</span> $<span id="braces">{</span><span id="var">$ref_cutoffs</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="var">$type</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> <span id="braces">)</span> <span id="braces">{</span>
					$<span id="braces">{</span><span id="var">$ref_cutoffs</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="var">$type</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> = <span id="var">$line</span>;
				<span id="braces">}</span> <span id="perlKey">else</span> <span id="braces">{</span>
					$<span id="braces">{</span><span id="var">$ref_cutoffs</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="var">$type</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> .= <span id="var">$line</span>;
				<span id="braces">}</span>
			<span id="braces">}</span>
		<span id="braces">}</span>

		<span id="comment"># # omega_average omega_exon_id   start_exon      end_exon        difference_value        p_value st_desviation   exon_annotation transcript_list</span><br />		<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$line</span> =~ <span id="regExp">/^&gt;([^\t]+)\t+([^\n]+)\n+$/</span> <span id="braces">)</span>
		<span id="braces">{</span>
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcript_id</span><span id="braces">)</span> = <span id="var">$1</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$unusual_evolution</span><span id="braces">)</span> = <span id="var">$2</span>;

			$<span id="braces">{</span><span id="var">$ref_cutoffs</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="var">$type</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'unusual_evolution'</span><span id="braces">}</span> = <span id="var">$unusual_evolution</span>;			
			$<span id="braces">{</span><span id="var">$ref_cutoffs</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="var">$type</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> .= <span id="dqStr">"----------------------------------------------------------------------\n"</span>;
			$<span id="braces">{</span><span id="var">$ref_cutoffs</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="var">$type</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> .= <span id="var">$line</span>;

			$<span id="braces">{</span><span id="var">$ref_cutoffs</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="var">$type</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'omega_average'</span><span id="braces">}</span> = 0; <span id="comment"># DEPRECATED</span><br />			$<span id="braces">{</span><span id="var">$ref_cutoffs</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="var">$type</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'omega_st_desviation'</span><span id="braces">}</span> = 0; <span id="comment"># DEPRECATED			</span><br />		<span id="braces">}</span>		
	<span id="braces">}</span>
<span id="braces">}</span> <span id="comment"># End _parse_omega_file</span><br /></pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE14" id="CODE14"></a>_parse_omega_file($$\$);</td><td >description</td><td ><a href="#CODE13">prev</a></td><td ><a href="#CODE15">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="privSubName">_parse_omega_file($$\$);</span>
{<pre><span id="perlKey">sub</span> <span id="method">parse_corsair</span><span id="braces">(</span>$$<span id="braces">)</span>;</pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE15" id="CODE15"></a>parse_appris($$)</td><td >description</td><td ><a href="#CODE14">prev</a></td><td ><a href="#CODE16">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="subName">parse_appris($$)</span>
{<pre>
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$gene</span>, <span id="var">$result</span><span id="braces">)</span> = <span id="var">@_</span>;

	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$stable_id</span><span id="braces">)</span> = <span id="var">$gene</span>-&gt;<span id="method">stable_id</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$cutoffs</span><span id="braces">)</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcripts</span><span id="braces">)</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$index_transcripts</span><span id="braces">)</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$index</span><span id="braces">)</span> = 0;

	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">@results</span><span id="braces">)</span> = <span id="perlFunc">split</span><span id="braces">(</span><span id="dqStr">"\n"</span>, <span id="var">$result</span><span id="braces">)</span>;
	<span id="comment">#foreach my $transcript_result (@results)</span><br />	<span id="perlKey">for</span> <span id="braces">(</span><span id="perlKey">my</span> <span id="var">$i</span> = 1 ; <span id="var">$i</span> &lt; <span id="perlFunc">scalar</span><span id="braces">(</span><span id="var">@results</span><span id="braces">)</span>; <span id="var">$i</span>++<span id="braces">)</span> <span id="comment"># skip the first line</span><br />	<span id="braces">{</span>
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcript_result</span><span id="braces">)</span> = <span id="var">$results</span><span id="braces">[</span><span id="var">$i</span><span id="braces">]</span>;
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">@rst</span><span id="braces">)</span> = <span id="perlFunc">split</span><span id="braces">(</span><span id="dqStr">"\t"</span>, <span id="var">$transcript_result</span><span id="braces">)</span>;
		
        <span id="comment">#gene_id	transcript_id	translation	status	biotype	(5)</span><br />        <span id="comment">#fun_res	con_struct	u_evol_con_vert (3)</span><br />        <span id="comment">#dom_signal (1)</span><br />        <span id="comment">#vert_signal (1)</span><br />        <span id="comment">#evol_pep_mit_tmh (1)</span><br />        <span id="comment">#exon_pep_mit_tmh (1)</span><br />        <span id="comment">#pep_mit_tmh (1)</span><br />        <span id="comment">#u_evol_exon (1)</span><br />        <span id="comment">#prin_isoform (1)</span><br />        
        <span id="comment">#pep_signal (1)</span><br />        <span id="comment">#mit_signal (1)</span><br />        <span id="comment">#tmh_signal (1)</span><br />        <span id="comment">#exon_signal (1)</span><br />        <span id="comment">#u_evol_maf      u_evol_prank    u_evol_kalign   u_evol (4)</span><br />        		
		<span id="comment">#chromosome  num_exons  level  ccds_set (4)</span><br />		<span id="comment">#num_fun_res (1)</span><br />		<span id="comment">#score_con_struct (1)</span><br />		<span id="comment">#score_dom_signal (1)</span><br />		<span id="comment">#score_vert_signal (1)</span><br />		<span id="comment">#score_u_evol (1)</span><br />		<span id="comment">#score_pep_signal (1)</span><br />		<span id="comment">#score_mit_signal (1)</span><br />		<span id="comment">#score_tmh_signal (1)</span><br />		<span id="comment">#source (1)</span><br />      
		<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">scalar</span><span id="braces">(</span><span id="var">@rst</span><span id="braces">)</span> == 36 <span id="braces">)</span> <span id="braces">{</span>
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$gene_id</span><span id="braces">)</span> = <span id="var">$rst</span><span id="braces">[</span>0<span id="braces">]</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcript_id</span><span id="braces">)</span> = <span id="var">$rst</span><span id="braces">[</span>1<span id="braces">]</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$translation</span><span id="braces">)</span> = <span id="var">$rst</span><span id="braces">[</span>2<span id="braces">]</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$status</span><span id="braces">)</span> = <span id="var">$rst</span><span id="braces">[</span>3<span id="braces">]</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$biotype</span><span id="braces">)</span> = <span id="var">$rst</span><span id="braces">[</span>4<span id="braces">]</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$fun_res</span><span id="braces">)</span> = <span id="var">$rst</span><span id="braces">[</span>5<span id="braces">]</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$con_struct</span><span id="braces">)</span> = <span id="var">$rst</span><span id="braces">[</span>6<span id="braces">]</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$u_evol_con_vertebrate</span><span id="braces">)</span> = <span id="var">$rst</span><span id="braces">[</span>7<span id="braces">]</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$dom_signal</span><span id="braces">)</span> = <span id="var">$rst</span><span id="braces">[</span>8<span id="braces">]</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$vert_signal</span><span id="braces">)</span> = <span id="var">$rst</span><span id="braces">[</span>9<span id="braces">]</span>;
			
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$evol_pep_mit_tmh</span><span id="braces">)</span> = <span id="var">$rst</span><span id="braces">[</span>10<span id="braces">]</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$exon_pep_mit_tmh</span><span id="braces">)</span> = <span id="var">$rst</span><span id="braces">[</span>11<span id="braces">]</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$pep_mit_tmh</span><span id="braces">)</span> = <span id="var">$rst</span><span id="braces">[</span>12<span id="braces">]</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$u_evol_exon</span><span id="braces">)</span> = <span id="var">$rst</span><span id="braces">[</span>13<span id="braces">]</span>;			
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$prin_isoform</span><span id="braces">)</span> = <span id="var">$rst</span><span id="braces">[</span>14<span id="braces">]</span>;
			
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$pep_signal</span><span id="braces">)</span> = <span id="var">$rst</span><span id="braces">[</span>15<span id="braces">]</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$mit_signal</span><span id="braces">)</span> = <span id="var">$rst</span><span id="braces">[</span>16<span id="braces">]</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$tmh_signal</span><span id="braces">)</span> = <span id="var">$rst</span><span id="braces">[</span>17<span id="braces">]</span>;
			
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$exon_signal</span><span id="braces">)</span> = <span id="var">$rst</span><span id="braces">[</span>18<span id="braces">]</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$u_e_raw</span><span id="braces">)</span> = <span id="var">$rst</span><span id="braces">[</span>19<span id="braces">]</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$u_e_prank</span><span id="braces">)</span> = <span id="var">$rst</span><span id="braces">[</span>20<span id="braces">]</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$u_e_kalign</span><span id="braces">)</span> = <span id="var">$rst</span><span id="braces">[</span>21<span id="braces">]</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$u_evol</span><span id="braces">)</span> = <span id="var">$rst</span><span id="braces">[</span>22<span id="braces">]</span>;

			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$chromosome</span><span id="braces">)</span> = <span id="var">$rst</span><span id="braces">[</span>23<span id="braces">]</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$num_exons</span><span id="braces">)</span> = <span id="var">$rst</span><span id="braces">[</span>24<span id="braces">]</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$level</span><span id="braces">)</span> = <span id="var">$rst</span><span id="braces">[</span>25<span id="braces">]</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$ccds_set</span><span id="braces">)</span> = <span id="var">$rst</span><span id="braces">[</span>26<span id="braces">]</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$num_fun_res</span><span id="braces">)</span> = <span id="var">$rst</span><span id="braces">[</span>27<span id="braces">]</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$score_con_struct</span><span id="braces">)</span> = <span id="var">$rst</span><span id="braces">[</span>28<span id="braces">]</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$num_domains</span><span id="braces">)</span> = <span id="var">$rst</span><span id="braces">[</span>29<span id="braces">]</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$score_con_vertebrate</span><span id="braces">)</span> = <span id="var">$rst</span><span id="braces">[</span>30<span id="braces">]</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$num_u_e_exons</span><span id="braces">)</span> = <span id="var">$rst</span><span id="braces">[</span>31<span id="braces">]</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$score_pep_signal</span><span id="braces">)</span> = <span id="var">$rst</span><span id="braces">[</span>32<span id="braces">]</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$score_mit_signal</span><span id="braces">)</span> = <span id="var">$rst</span><span id="braces">[</span>33<span id="braces">]</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$num_tmh</span><span id="braces">)</span> = <span id="var">$rst</span><span id="braces">[</span>34<span id="braces">]</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$source</span><span id="braces">)</span> = <span id="var">$rst</span><span id="braces">[</span>35<span id="braces">]</span>;

			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'source'</span><span id="braces">}</span> = <span id="var">$source</span>
														;<span id="comment"># if (defined $source and $source ne '.');</span><br />			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'functional_residue'</span><span id="braces">}</span> = <span id="var">$fun_res</span>
														;<span id="comment"># if (defined $fun_res and $fun_res ne '.');</span><br />			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'conservation_structure'</span><span id="braces">}</span> = <span id="var">$con_struct</span>
														;<span id="comment"># if (defined $con_struct and $con_struct ne '.');</span><br />			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'un_evolution_ver_conservation'</span><span id="braces">}</span> = <span id="var">$u_evol_con_vertebrate</span> 
														;<span id="comment"># if (defined $u_evol_con_vertebrate and $u_evol_con_vertebrate ne '.');</span><br />			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'domain_signal'</span><span id="braces">}</span> = <span id="var">$dom_signal</span>
														;<span id="comment"># if (defined $dom_signal and $dom_signal ne '.');</span><br />			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'vertebrate_signal'</span><span id="braces">}</span> = <span id="var">$vert_signal</span>
														;<span id="comment"># if (defined $vert_signal and $vert_signal ne '.');</span><br />			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'evol_pep_mit_tmh_signal'</span><span id="braces">}</span> = <span id="var">$evol_pep_mit_tmh</span>
														;<span id="comment"># if (defined $exon_pep_mit_tmh and $exon_pep_mit_tmh ne '.');</span><br />			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'exon_pep_mit_tmh_signal'</span><span id="braces">}</span> = <span id="var">$exon_pep_mit_tmh</span>
														;<span id="comment"># if (defined $exon_pep_mit_tmh and $exon_pep_mit_tmh ne '.');</span><br />			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'pep_mit_tmh_signal'</span><span id="braces">}</span> = <span id="var">$pep_mit_tmh</span>
														;<span id="comment"># if (defined $pep_mit_tmh and $pep_mit_tmh ne '.');</span><br />			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'u_evol_exon_signal'</span><span id="braces">}</span> = <span id="var">$u_evol_exon</span>
														;<span id="comment"># if (defined $u_evol_exon and $u_evol_exon ne '.');</span><br />			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'principal_isoform'</span><span id="braces">}</span> = <span id="var">$prin_isoform</span>
														;<span id="comment"># if (defined $prin_isoform and $prin_isoform ne '.');</span><br />			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'peptide_signal'</span><span id="braces">}</span> = <span id="var">$pep_signal</span>
														;<span id="comment"># if (defined $pep_signal and $pep_signal ne '.');</span><br />			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'mitochondrial_signal'</span><span id="braces">}</span> = <span id="var">$mit_signal</span>
														;<span id="comment"># if (defined $mit_signal and $mit_signal ne '.');</span><br />			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'transmembrane_signal'</span><span id="braces">}</span> = <span id="var">$tmh_signal</span>
														;<span id="comment"># if (defined $tmh_signal and $tmh_signal ne '.');</span><br />			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'conservation_exon'</span><span id="braces">}</span> = <span id="var">$exon_signal</span>
														;<span id="comment"># if (defined $exon_signal and $exon_signal ne '.');</span><br />			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'unusual_evolution'</span><span id="braces">}</span> = <span id="var">$u_evol</span>
														;<span id="comment"># if (defined $u_evol and $u_evol ne '.');</span><br />
			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'num_fun_res'</span><span id="braces">}</span> = <span id="var">$num_fun_res</span>
														;<span id="comment"># if (defined $num_fun_res and $num_fun_res ne '.');</span><br />			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'score_con_struct'</span><span id="braces">}</span> = <span id="var">$score_con_struct</span>
														;<span id="comment"># if (defined $score_con_struct and $score_con_struct ne '.');</span><br />			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'num_domains'</span><span id="braces">}</span> = <span id="var">$num_domains</span>
														;<span id="comment"># if (defined $num_domains and $num_domains ne '.');</span><br />			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'score_con_vertebrate'</span><span id="braces">}</span> = <span id="var">$score_con_vertebrate</span> 
														;<span id="comment"># if (defined $score_con_vertebrate and $score_con_vertebrate ne '.');</span><br />			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'num_u_e_exons'</span><span id="braces">}</span> = <span id="var">$num_u_e_exons</span>
														;<span id="comment"># if (defined $num_u_e_exons and $num_u_e_exons ne '.');</span><br />			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'score_pep_signal'</span><span id="braces">}</span> = <span id="var">$score_pep_signal</span>
														;<span id="comment"># if (defined $score_pep_signal and $score_pep_signal ne '.');</span><br />			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'score_mit_signal'</span><span id="braces">}</span> = <span id="var">$score_mit_signal</span>
														;<span id="comment"># if (defined $score_mit_signal and $score_mit_signal ne '.');</span><br />			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'num_tmh'</span><span id="braces">}</span> = <span id="var">$num_tmh</span>
														;<span id="comment"># if (defined $num_tmh and $num_tmh ne '.');</span><br />
			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> = <span id="var">$transcript_result</span>;
		<span id="braces">}</span>
	<span id="braces">}</span>
	<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> = <span id="var">$result</span>;

	<span id="comment"># Create APPRIS object</span><br />	<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$transcript</span> <span id="braces">(</span>@<span id="braces">{</span><span id="var">$gene</span>-&gt;<span id="method">transcripts</span><span id="braces">}</span><span id="braces">)</span> <span id="braces">{</span>			
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcript_id</span><span id="braces">)</span> = <span id="var">$transcript</span>-&gt;<span id="method">stable_id</span>;
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$analysis</span><span id="braces">)</span>;
		
		<span id="comment"># create method object</span><br />		<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">exists</span> <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span> <span id="braces">)</span> <span id="braces">{</span>
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$report</span><span id="braces">)</span> = <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>;
			
			<span id="comment"># create Analysis object (for trans)			</span><br />			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method</span><span id="braces">)</span> = <span id="module"><a href="Analysis/APPRIS.html">APPRIS::Analysis::APPRIS</a></span>-&gt;<span id="perlKey">new</span> <span id="braces">(</span>
							-source								=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'source'</span><span id="braces">}</span>,
							-result								=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span>,
							-functional_residue					=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'functional_residue'</span><span id="braces">}</span>,						
							-conservation_structure				=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'conservation_structure'</span><span id="braces">}</span>,
							-un_evolution_ver_conservation		=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'un_evolution_ver_conservation'</span><span id="braces">}</span>,						
							-domain_signal						=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'domain_signal'</span><span id="braces">}</span>,						
							-vertebrate_signal					=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'vertebrate_signal'</span><span id="braces">}</span>,
							-evol_pep_mit_tmh_signal			=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'evol_pep_mit_tmh_signal'</span><span id="braces">}</span>,
							-exon_pep_mit_tmh_signal			=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'exon_pep_mit_tmh_signal'</span><span id="braces">}</span>,
							-pep_mit_tmh_signal					=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'pep_mit_tmh_signal'</span><span id="braces">}</span>,
							-u_evol_exon_signal					=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'u_evol_exon_signal'</span><span id="braces">}</span>,
							-principal_isoform					=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'principal_isoform'</span><span id="braces">}</span>,
							-peptide_signal						=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'peptide_signal'</span><span id="braces">}</span>,						
							-mitochondrial_signal				=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'mitochondrial_signal'</span><span id="braces">}</span>,						
							-transmembrane_signal				=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'transmembrane_signal'</span><span id="braces">}</span>,		
							-conservation_exon					=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'conservation_exon'</span><span id="braces">}</span>,						
							-unusual_evolution					=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'unusual_evolution'</span><span id="braces">}</span>,
							-num_fun_res						=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'num_fun_res'</span><span id="braces">}</span>,
							-score_con_struct					=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'score_con_struct'</span><span id="braces">}</span>,
							-num_domains						=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'num_domains'</span><span id="braces">}</span>,
							-score_con_vertebrate				=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'score_con_vertebrate'</span><span id="braces">}</span>,
							-num_u_e_exons						=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'num_u_e_exons'</span><span id="braces">}</span>,
							-score_pep_signal					=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'score_pep_signal'</span><span id="braces">}</span>,
							-score_mit_signal					=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'score_mit_signal'</span><span id="braces">}</span>,
							-num_tmh							=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'num_tmh'</span><span id="braces">}</span>
			<span id="braces">)</span>;
			<span id="var">$analysis</span> = <span id="module"><a href="Analysis.html">APPRIS::Analysis</a></span>-&gt;<span id="perlKey">new</span><span id="braces">(</span><span id="braces">)</span>;
			<span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$method</span><span id="braces">)</span> <span id="braces">{</span>
				<span id="var">$analysis</span>-&gt;<span id="method">appris</span><span id="braces">(</span><span id="var">$method</span><span id="braces">)</span>;
				<span id="var">$analysis</span>-&gt;<span id="method">number</span><span id="braces">(</span><span id="var">$analysis</span>-&gt;<span id="method">number</span>+1<span id="braces">)</span>;
			<span id="braces">}</span>			
		<span id="braces">}</span>
				
		<span id="comment"># create Transcript object</span><br />		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcript</span><span id="braces">)</span> = <span id="module"><a href="Transcript.html">APPRIS::Transcript</a></span>-&gt;<span id="perlKey">new</span>
		<span id="braces">(</span>
			-stable_id	=&gt; <span id="var">$transcript_id</span>,
		<span id="braces">)</span>;
		<span id="var">$transcript</span>-&gt;<span id="method">analysis</span><span id="braces">(</span><span id="var">$analysis</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$analysis</span><span id="braces">)</span>;
		<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$transcripts</span><span id="braces">}</span>, <span id="var">$transcript</span><span id="braces">)</span>;
		<span id="var">$index_transcripts</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span> = <span id="var">$index</span>; <span id="var">$index</span>++; <span id="comment"># Index the list of transcripts</span><br />	<span id="braces">}</span>

	<span id="comment"># create Analysis object (for gene)</span><br />	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method2</span><span id="braces">)</span> = <span id="module"><a href="Analysis/APPRIS.html">APPRIS::Analysis::APPRIS</a></span>-&gt;<span id="perlKey">new</span><span id="braces">(</span> -result =&gt; <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> <span id="braces">)</span>;	
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$analysis2</span><span id="braces">)</span> = <span id="module"><a href="Analysis.html">APPRIS::Analysis</a></span>-&gt;<span id="perlKey">new</span><span id="braces">(</span><span id="braces">)</span>;
	<span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$method2</span><span id="braces">)</span> <span id="braces">{</span>
		<span id="var">$analysis2</span>-&gt;<span id="method">appris</span><span id="braces">(</span><span id="var">$method2</span><span id="braces">)</span>;
		<span id="var">$analysis2</span>-&gt;<span id="method">number</span><span id="braces">(</span><span id="var">$analysis2</span>-&gt;<span id="method">number</span>+1<span id="braces">)</span>;
	<span id="braces">}</span>
	
	<span id="comment"># create Gene object</span><br />	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$entity</span><span id="braces">)</span> = <span id="module"><a href="Gene.html">APPRIS::Gene</a></span>-&gt;<span id="perlKey">new</span><span id="braces">(</span> -stable_id =&gt; <span id="var">$stable_id</span> <span id="braces">)</span>;
	<span id="var">$entity</span>-&gt;<span id="method">transcripts</span><span id="braces">(</span><span id="var">$transcripts</span>, <span id="var">$index_transcripts</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$transcripts</span> and <span id="perlFunc">defined</span> <span id="var">$index_transcripts</span><span id="braces">)</span>;
	<span id="var">$entity</span>-&gt;<span id="method">analysis</span><span id="braces">(</span><span id="var">$analysis2</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$analysis2</span><span id="braces">)</span>;	

	<span id="perlKey">return</span> <span id="var">$entity</span>;</pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE16" id="CODE16"></a>parse_appris($$);</td><td >description</td><td ><a href="#CODE15">prev</a></td><td ><a href="#CODE17">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="subName">parse_appris($$);</span>
{<pre><span id="perlKey">sub</span> <span id="method">parser_appris_methods</span><span id="braces">(</span>$$$$$$$$$$$$<span id="braces">)</span>;</pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE17" id="CODE17"></a>parse_cexonic($$$$)</td><td >description</td><td ><a href="#CODE16">prev</a></td><td ><a href="#CODE18">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="subName">parse_cexonic($$$$)</span>
{<pre>
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$gene</span>, <span id="var">$text_result</span>, <span id="var">$first_specie_alignment_image</span>, <span id="var">$second_specie_alignment_image</span><span id="braces">)</span> = <span id="var">@_</span>;

	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$stable_id</span><span id="braces">)</span> = <span id="var">$gene</span>-&gt;<span id="method">stable_id</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$cutoffs</span><span id="braces">)</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcripts</span><span id="braces">)</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$index_transcripts</span><span id="braces">)</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$index</span><span id="braces">)</span> = 0;

	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$specie</span><span id="braces">)</span>;
	<span id="comment">#my ($text_result) = $result-&gt;{'result'};</span><br />	<span id="comment">#my ($first_specie_alignment_image) = $result-&gt;{'first_specie_alignment_image'};</span><br />	<span id="comment">#my ($second_specie_alignment_image) = $result-&gt;{'second_specie_alignment_image'};</span><br />
	<span id="comment"># Parser all alignments!!</span><br />	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">@transcript</span><span id="braces">)</span> = <span id="perlFunc">split</span><span id="braces">(</span><span id="regExp">/\n+\&gt;([^\n]+)\n/</span>, <span id="var">$text_result</span><span id="braces">)</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$cexonic_trans_aligments</span><span id="braces">)</span>;
	<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$alignment</span> <span id="braces">(</span><span id="var">@transcript</span><span id="braces">)</span>
	<span id="braces">{</span>
		<span id="perlKey">next</span> <span id="perlKey">if</span> <span id="braces">(</span> <span id="braces">(</span><span id="var">$alignment</span> =~ <span id="regExp">/^\/\*[^\$]*$/</span><span id="braces">)</span> or <span id="braces">(</span><span id="var">$alignment</span> =~ <span id="regExp">/^\s\*\w*$/</span><span id="braces">)</span> <span id="braces">)</span>; <span id="comment"># jump comment line</span><br />		
		<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$alignment</span> <span id="braces">)</span> <span id="braces">{</span>
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$id</span><span id="braces">)</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$num_exons_1</span><span id="braces">)</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$num_exons_2</span><span id="braces">)</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$num_introns</span><span id="braces">)</span>;
	    	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$residues_exonic</span><span id="braces">)</span>;
	    	
			<span id="comment"># Get the transcript identifier and CExonic identifiers from the next pattern:</span><br />			<span id="comment"># 1:OTTHUMT00000157419 2:OTTHUMG00000074130_mouse_musculus_2</span><br />			<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$alignment</span> =~ <span id="regExp">/^1\:([^\s]+)\s+2\:([^\n+]+)\n*/</span> <span id="braces">)</span> <span id="braces">{</span>
				<span id="var">$id</span> = <span id="var">$1</span>;
				<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$cexonic_trans_id</span><span id="braces">)</span> = <span id="var">$2</span>;
				<span id="var">$cexonic_trans_id</span> =~ <span id="regExp">/^([^\_]+)\_([^\_]+)\_([^\_]+)\_[0-9]/</span>;
				<span id="var">$specie</span> = <span id="var">$2</span>.<span id="sqStr">'_'</span>.<span id="var">$3</span>;
			<span id="braces">}</span>
			<span id="comment"># Get the CExonic scores from the next pattern:</span><br />			<span id="comment"># #       1       2       2       2       1</span><br />			<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$alignment</span> =~ <span id="regExp">/\#\#\t+\d+\t+\d+\t+(\d+)\t+(\d+)\t+(\d+)/g</span> <span id="braces">)</span> <span id="braces">{</span>
				<span id="var">$num_exons_1</span> = <span id="var">$1</span>;
				<span id="var">$num_exons_2</span> = <span id="var">$2</span>;
				<span id="var">$num_introns</span> = <span id="var">$3</span>;
			<span id="braces">}</span>
			<span id="comment"># Get CExonic Residues for the first article name from the next pattern:</span><br />	    	<span id="comment"># intron:1      22      35493850        35501663        -</span><br />			<span id="perlKey">while</span> <span id="braces">(</span> <span id="var">$alignment</span> =~ <span id="regExp">/#\s+intron:([^\:]+)\t([^\t]+)\t([^\t]+)\t([^\t]+)\t(\W)/g</span> <span id="braces">)</span> <span id="braces">{</span>
				<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$num_intron</span><span id="braces">)</span> = <span id="var">$1</span>;
				<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$chr_residue</span><span id="braces">)</span> = <span id="var">$2</span>;
				<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$start_residue</span><span id="braces">)</span> = <span id="var">$3</span>;
				<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$end_residue</span><span id="braces">)</span> = <span id="var">$4</span>;
				<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$strand_residue</span><span id="braces">)</span> = <span id="var">$5</span>;
				<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$start_residue</span> and <span id="perlFunc">defined</span> <span id="var">$end_residue</span> and <span id="perlFunc">defined</span> <span id="var">$strand_residue</span> <span id="braces">)</span> <span id="braces">{</span>
					<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$residues_report</span><span id="braces">)</span>;
					<span id="var">$residues_report</span>-&gt;<span id="braces">{</span><span id="sqStr">'start'</span><span id="braces">}</span> = <span id="var">$start_residue</span>;
					<span id="var">$residues_report</span>-&gt;<span id="braces">{</span><span id="sqStr">'end'</span><span id="braces">}</span> = <span id="var">$end_residue</span>;
					<span id="var">$residues_report</span>-&gt;<span id="braces">{</span><span id="sqStr">'strand'</span><span id="braces">}</span> = <span id="var">$strand_residue</span>;
					<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$residues_exonic</span><span id="braces">}</span>,<span id="var">$residues_report</span><span id="braces">)</span>;
				<span id="braces">}</span>
			<span id="braces">}</span>
			<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$id</span> and <span id="perlFunc">defined</span> <span id="var">$alignment</span> and <span id="perlFunc">defined</span> <span id="var">$num_exons_1</span> and <span id="perlFunc">defined</span> <span id="var">$num_exons_2</span> and <span id="perlFunc">defined</span> <span id="var">$num_introns</span> <span id="braces">)</span> <span id="braces">{</span>
				<span id="var">$alignment</span> =~ <span id="regExp">s/\n*#[^#]+#\n+#[^#]+#\n+#[^#]+#//mg</span>;
				<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> = <span id="var">$alignment</span>;
				<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'first_specie_num_exons'</span><span id="braces">}</span> = <span id="var">$num_exons_1</span>;
				<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'second_specie_num_exons'</span><span id="braces">}</span> = <span id="var">$num_exons_2</span>;
				<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'residues'</span><span id="braces">}</span> = <span id="var">$residues_exonic</span> <span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$residues_exonic</span> <span id="braces">)</span>;
				<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$residues_exonic</span> and <span id="braces">(</span><span id="perlFunc">scalar</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$residues_exonic</span><span id="braces">}</span><span id="braces">)</span> &gt; 0<span id="braces">)</span> <span id="braces">)</span> <span id="braces">{</span>
					<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'num_introns'</span><span id="braces">}</span> = <span id="perlFunc">scalar</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$residues_exonic</span><span id="braces">}</span><span id="braces">)</span>;
				<span id="braces">}</span> <span id="perlKey">else</span> <span id="braces">{</span>
					<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'num_introns'</span><span id="braces">}</span> = 0;
				<span id="braces">}</span>
			<span id="braces">}</span>
			<span id="comment"># Get the appris annotations from the next pattern:</span><br />	        <span id="comment">#ENST00000381318        UNKNOWN</span><br />	        <span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$alignment</span> =~ <span id="regExp">/([^\t]+)\t+(</span><span id="var">$APPRIS</span><span id="regExp">::Utils::Constant::OK_LABEL|</span><span id="var">$APPRIS</span><span id="regExp">::Utils::Constant::NO_LABEL|</span><span id="var">$APPRIS</span><span id="regExp">::Utils::Constant::UNKNOWN_LABEL)/</span> <span id="braces">)</span> <span id="braces">{</span>	        	
				<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcript_id</span><span id="braces">)</span> = <span id="var">$1</span>;
				<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$conservation_exon</span><span id="braces">)</span> = <span id="var">$2</span>;
				<span id="var">$transcript_id</span> =~ <span id="regExp">s/^&gt;//mg</span>;
				<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'conservation_exon'</span><span id="braces">}</span> = <span id="var">$conservation_exon</span>;
			<span id="braces">}</span>			
		<span id="braces">}</span>
	<span id="braces">}</span>
	<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$specie</span> and <span id="perlFunc">defined</span> <span id="var">$text_result</span> <span id="braces">)</span> <span id="braces">{</span>
	<span id="comment">#if ( defined $specie and defined $text_result and defined $first_specie_alignment_image and defined $second_specie_alignment_image ) { # DEPRECATED!!!</span><br />		<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> = <span id="var">$text_result</span>;
		<span id="comment">#$cutoffs-&gt;{'specie'} = $specie; # DEPRECATED!!!</span><br />		<span id="comment">#$cutoffs-&gt;{'first_specie_alignment_image'} = $first_specie_alignment_image; # DEPRECATED!!!</span><br />		<span id="comment">#$cutoffs-&gt;{'second_specie_alignment_image'} = $second_specie_alignment_image; # DEPRECATED!!!		</span><br />	<span id="braces">}</span>

	<span id="comment"># Create APPRIS object</span><br />	<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$transcript</span> <span id="braces">(</span>@<span id="braces">{</span><span id="var">$gene</span>-&gt;<span id="method">transcripts</span><span id="braces">}</span><span id="braces">)</span> <span id="braces">{</span>			
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcript_id</span><span id="braces">)</span> = <span id="var">$transcript</span>-&gt;<span id="method">stable_id</span>;
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$analysis</span><span id="braces">)</span>;
		
		<span id="comment"># create method object</span><br />		<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">exists</span> <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span> and <span id="perlFunc">exists</span> <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'conservation_exon'</span><span id="braces">}</span> <span id="braces">)</span> <span id="braces">{</span>
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$report</span><span id="braces">)</span> = <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$regions</span><span id="braces">)</span>;
			<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$transcript</span>-&gt;<span id="method">translate</span> and <span id="var">$transcript</span>-&gt;<span id="method">translate</span>-&gt;<span id="method">cds</span> <span id="braces">)</span> <span id="braces">{</span>				
				<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">exists</span> <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'residues'</span><span id="braces">}</span> <span id="braces">)</span> <span id="braces">{</span>
					<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$residue</span> <span id="braces">(</span>@<span id="braces">{</span><span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'residues'</span><span id="braces">}</span><span id="braces">}</span><span id="braces">)</span> <span id="braces">{</span>						
						<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$region</span><span id="braces">)</span> = <span id="module"><a href="Analysis/CExonicRegion.html">APPRIS::Analysis::CExonicRegion</a></span>-&gt;<span id="perlKey">new</span> <span id="braces">(</span>
										-start								=&gt; <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'start'</span><span id="braces">}</span>,
										-end								=&gt; <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'end'</span><span id="braces">}</span>,
										-strand								=&gt; <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'strand'</span><span id="braces">}</span>,						
						<span id="braces">)</span>;						
						<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$regions</span><span id="braces">}</span>, <span id="var">$region</span><span id="braces">)</span>;
					<span id="braces">}</span>
				<span id="braces">}</span>
			<span id="braces">}</span>

			<span id="comment"># create Analysis object (for trans)			</span><br />			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method</span><span id="braces">)</span> = <span id="module"><a href="Analysis/CExonic.html">APPRIS::Analysis::CExonic</a></span>-&gt;<span id="perlKey">new</span> <span id="braces">(</span>
							-result							=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span>,
							-conservation_exon				=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'conservation_exon'</span><span id="braces">}</span>,
							-num_introns					=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'num_introns'</span><span id="braces">}</span>,
							-first_specie_num_exons			=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'first_specie_num_exons'</span><span id="braces">}</span>,
							-second_specie_num_exons		=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'second_specie_num_exons'</span><span id="braces">}</span>
			<span id="braces">)</span>;
			<span id="var">$method</span>-&gt;<span id="method">regions</span><span id="braces">(</span><span id="var">$regions</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$regions</span> and <span id="braces">(</span><span id="perlFunc">scalar</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$regions</span><span id="braces">}</span><span id="braces">)</span> &gt; 0<span id="braces">)</span> <span id="braces">)</span>;
			
			<span id="var">$analysis</span> = <span id="module"><a href="Analysis.html">APPRIS::Analysis</a></span>-&gt;<span id="perlKey">new</span><span id="braces">(</span><span id="braces">)</span>;
			<span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$method</span><span id="braces">)</span> <span id="braces">{</span>
				<span id="var">$analysis</span>-&gt;<span id="method">cexonic</span><span id="braces">(</span><span id="var">$method</span><span id="braces">)</span>;
				<span id="var">$analysis</span>-&gt;<span id="method">number</span><span id="braces">(</span><span id="var">$analysis</span>-&gt;<span id="method">number</span>+1<span id="braces">)</span>;
			<span id="braces">}</span>			
		<span id="braces">}</span>
				
		<span id="comment"># create Transcript object</span><br />		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcript</span><span id="braces">)</span> = <span id="module"><a href="Transcript.html">APPRIS::Transcript</a></span>-&gt;<span id="perlKey">new</span>
		<span id="braces">(</span>
			-stable_id	=&gt; <span id="var">$transcript_id</span>,
		<span id="braces">)</span>;
		<span id="var">$transcript</span>-&gt;<span id="method">analysis</span><span id="braces">(</span><span id="var">$analysis</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$analysis</span><span id="braces">)</span>;
		<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$transcripts</span><span id="braces">}</span>, <span id="var">$transcript</span><span id="braces">)</span>;
		<span id="var">$index_transcripts</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span> = <span id="var">$index</span>; <span id="var">$index</span>++; <span id="comment"># Index the list of transcripts</span><br />	<span id="braces">}</span>

	<span id="comment"># create Analysis object (for gene)</span><br />	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method2</span><span id="braces">)</span> = <span id="module"><a href="Analysis/CExonic.html">APPRIS::Analysis::CExonic</a></span>-&gt;<span id="perlKey">new</span><span id="braces">(</span> -result =&gt; <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> <span id="braces">)</span>;	
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$analysis2</span><span id="braces">)</span> = <span id="module"><a href="Analysis.html">APPRIS::Analysis</a></span>-&gt;<span id="perlKey">new</span><span id="braces">(</span><span id="braces">)</span>;
	<span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$method2</span><span id="braces">)</span> <span id="braces">{</span>
		<span id="var">$analysis2</span>-&gt;<span id="method">cexonic</span><span id="braces">(</span><span id="var">$method2</span><span id="braces">)</span>;
		<span id="var">$analysis2</span>-&gt;<span id="method">number</span><span id="braces">(</span><span id="var">$analysis2</span>-&gt;<span id="method">number</span>+1<span id="braces">)</span>;
	<span id="braces">}</span>
	
	<span id="comment"># create Gene object</span><br />	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$entity</span><span id="braces">)</span> = <span id="module"><a href="Gene.html">APPRIS::Gene</a></span>-&gt;<span id="perlKey">new</span><span id="braces">(</span> -stable_id =&gt; <span id="var">$stable_id</span> <span id="braces">)</span>;
	<span id="var">$entity</span>-&gt;<span id="method">transcripts</span><span id="braces">(</span><span id="var">$transcripts</span>, <span id="var">$index_transcripts</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$transcripts</span> and <span id="perlFunc">defined</span> <span id="var">$index_transcripts</span><span id="braces">)</span>;
	<span id="var">$entity</span>-&gt;<span id="method">analysis</span><span id="braces">(</span><span id="var">$analysis2</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$analysis2</span><span id="braces">)</span>;	

	<span id="perlKey">return</span> <span id="var">$entity</span>;</pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE18" id="CODE18"></a>parse_cexonic($$$$);</td><td >description</td><td ><a href="#CODE17">prev</a></td><td ><a href="#CODE19">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="subName">parse_cexonic($$$$);</span>
{<pre><span id="perlKey">sub</span> <span id="method">parse_crash</span><span id="braces">(</span>$$<span id="braces">)</span>;</pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE19" id="CODE19"></a>parse_corsair($$)</td><td >description</td><td ><a href="#CODE18">prev</a></td><td ><a href="#CODE20">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="subName">parse_corsair($$)</span>
{<pre>
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$gene</span>, <span id="var">$result</span><span id="braces">)</span> = <span id="var">@_</span>;

	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$stable_id</span><span id="braces">)</span> = <span id="var">$gene</span>-&gt;<span id="method">stable_id</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$cutoffs</span><span id="braces">)</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcripts</span><span id="braces">)</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$index_transcripts</span><span id="braces">)</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$index</span><span id="braces">)</span> = 0;

	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">@results</span><span id="braces">)</span> = <span id="perlFunc">split</span><span id="braces">(</span><span id="sqStr">'&gt;'</span>,<span id="var">$result</span><span id="braces">)</span>;	
	<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$transcript_result</span> <span id="braces">(</span><span id="var">@results</span><span id="braces">)</span>
	<span id="braces">{</span>
        <span id="comment">#&gt;ENST00000381318        UNKNOWN</span><br />        <span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$transcript_result</span> =~ <span id="regExp">/^([^\t]+)\t+(</span><span id="var">$APPRIS</span><span id="regExp">::Utils::Constant::OK_LABEL|</span><span id="var">$APPRIS</span><span id="regExp">::Utils::Constant::NO_LABEL|</span><span id="var">$APPRIS</span><span id="regExp">::Utils::Constant::UNKNOWN_LABEL)\n+/</span> <span id="braces">)</span>        
		<span id="braces">{</span>
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcript_id</span><span id="braces">)</span> = <span id="var">$1</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$vertebrate_signal</span><span id="braces">)</span> = <span id="var">$2</span>;

			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'vertebrate_signal'</span><span id="braces">}</span> = <span id="var">$vertebrate_signal</span>;
		<span id="braces">}</span>
        <span id="perlKey">elsif</span> <span id="braces">(</span> <span id="var">$transcript_result</span> =~ <span id="regExp">/^([^\t]+)\t+([^\n]+)\n+/</span> <span id="braces">)</span>
		<span id="braces">{</span>
			<span id="comment">#&gt;ENST00000300481        1</span><br />			<span id="comment">#Pan troglodytes 98.7586206896552        1       1       </span><br />			<span id="comment">#Bos taurus      77.8231292517007        0       1       It has different N-terminal</span><br />
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcript_id</span><span id="braces">)</span> = <span id="var">$1</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$score</span><span id="braces">)</span> = <span id="var">$2</span>;
			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'score'</span><span id="braces">}</span> = <span id="var">$score</span>;
			<span id="var">$transcript_result</span> =~ <span id="regExp">s/\n*#[^#]+#\n+#[^#]+#\n+#[^#]+#//mg</span>;
			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span>=<span id="sqStr">'&gt;'</span>.<span id="var">$transcript_result</span>;			
		<span id="braces">}</span>
	<span id="braces">}</span>
	<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> = <span id="var">$result</span>;

	<span id="comment"># Create APPRIS object</span><br />	<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$transcript</span> <span id="braces">(</span>@<span id="braces">{</span><span id="var">$gene</span>-&gt;<span id="method">transcripts</span><span id="braces">}</span><span id="braces">)</span> <span id="braces">{</span>			
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcript_id</span><span id="braces">)</span> = <span id="var">$transcript</span>-&gt;<span id="method">stable_id</span>;
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$analysis</span><span id="braces">)</span>;
		
		<span id="comment"># create method object</span><br />		<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">exists</span> <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span> and <span id="perlFunc">exists</span> <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'vertebrate_signal'</span><span id="braces">}</span> <span id="braces">)</span> <span id="braces">{</span>
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$report</span><span id="braces">)</span> = <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>;

			<span id="comment"># create Analysis object (for trans)			</span><br />			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method</span><span id="braces">)</span> = <span id="module"><a href="Analysis/CORSAIR.html">APPRIS::Analysis::CORSAIR</a></span>-&gt;<span id="perlKey">new</span> <span id="braces">(</span>
							-result							=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span>,
							-vertebrate_signal				=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'vertebrate_signal'</span><span id="braces">}</span>,
							-score							=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'score'</span><span id="braces">}</span>
			<span id="braces">)</span>;			
			<span id="var">$analysis</span> = <span id="module"><a href="Analysis.html">APPRIS::Analysis</a></span>-&gt;<span id="perlKey">new</span><span id="braces">(</span><span id="braces">)</span>;
			<span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$method</span><span id="braces">)</span> <span id="braces">{</span>
				<span id="var">$analysis</span>-&gt;<span id="method">corsair</span><span id="braces">(</span><span id="var">$method</span><span id="braces">)</span>;
				<span id="var">$analysis</span>-&gt;<span id="method">number</span><span id="braces">(</span><span id="var">$analysis</span>-&gt;<span id="method">number</span>+1<span id="braces">)</span>;
			<span id="braces">}</span>			
		<span id="braces">}</span>
				
		<span id="comment"># create Transcript object</span><br />		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcript</span><span id="braces">)</span> = <span id="module"><a href="Transcript.html">APPRIS::Transcript</a></span>-&gt;<span id="perlKey">new</span>
		<span id="braces">(</span>
			-stable_id	=&gt; <span id="var">$transcript_id</span>,
		<span id="braces">)</span>;
		<span id="var">$transcript</span>-&gt;<span id="method">analysis</span><span id="braces">(</span><span id="var">$analysis</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$analysis</span><span id="braces">)</span>;
		<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$transcripts</span><span id="braces">}</span>, <span id="var">$transcript</span><span id="braces">)</span>;
		<span id="var">$index_transcripts</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span> = <span id="var">$index</span>; <span id="var">$index</span>++; <span id="comment"># Index the list of transcripts</span><br />	<span id="braces">}</span>

	<span id="comment"># create Analysis object (for gene)</span><br />	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method2</span><span id="braces">)</span> = <span id="module"><a href="Analysis/CORSAIR.html">APPRIS::Analysis::CORSAIR</a></span>-&gt;<span id="perlKey">new</span><span id="braces">(</span> -result =&gt; <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> <span id="braces">)</span>;	
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$analysis2</span><span id="braces">)</span> = <span id="module"><a href="Analysis.html">APPRIS::Analysis</a></span>-&gt;<span id="perlKey">new</span><span id="braces">(</span><span id="braces">)</span>;
	<span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$method2</span><span id="braces">)</span> <span id="braces">{</span>
		<span id="var">$analysis2</span>-&gt;<span id="method">corsair</span><span id="braces">(</span><span id="var">$method2</span><span id="braces">)</span>;
		<span id="var">$analysis2</span>-&gt;<span id="method">number</span><span id="braces">(</span><span id="var">$analysis2</span>-&gt;<span id="method">number</span>+1<span id="braces">)</span>;
	<span id="braces">}</span>
	
	<span id="comment"># create Gene object</span><br />	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$entity</span><span id="braces">)</span> = <span id="module"><a href="Gene.html">APPRIS::Gene</a></span>-&gt;<span id="perlKey">new</span><span id="braces">(</span> -stable_id =&gt; <span id="var">$stable_id</span> <span id="braces">)</span>;
	<span id="var">$entity</span>-&gt;<span id="method">transcripts</span><span id="braces">(</span><span id="var">$transcripts</span>, <span id="var">$index_transcripts</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$transcripts</span> and <span id="perlFunc">defined</span> <span id="var">$index_transcripts</span><span id="braces">)</span>;
	<span id="var">$entity</span>-&gt;<span id="method">analysis</span><span id="braces">(</span><span id="var">$analysis2</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$analysis2</span><span id="braces">)</span>;	

	<span id="perlKey">return</span> <span id="var">$entity</span>;</pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE20" id="CODE20"></a>parse_corsair($$);</td><td >description</td><td ><a href="#CODE19">prev</a></td><td ><a href="#CODE21">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="subName">parse_corsair($$);</span>
{<pre><span id="perlKey">sub</span> <span id="method">parse_cexonic</span><span id="braces">(</span>$$$$<span id="braces">)</span>;</pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE21" id="CODE21"></a>parse_crash($$)</td><td >description</td><td ><a href="#CODE20">prev</a></td><td ><a href="#CODE22">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="subName">parse_crash($$)</span>
{<pre>
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$gene</span>, <span id="var">$result</span><span id="braces">)</span> = <span id="var">@_</span>;

	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$stable_id</span><span id="braces">)</span> = <span id="var">$gene</span>-&gt;<span id="method">stable_id</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$cutoffs</span><span id="braces">)</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcripts</span><span id="braces">)</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$index_transcripts</span><span id="braces">)</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$index</span><span id="braces">)</span> = 0;

	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">@results</span><span id="braces">)</span> = <span id="perlFunc">split</span><span id="braces">(</span><span id="sqStr">'&gt;'</span>,<span id="var">$result</span><span id="braces">)</span>;	
	<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$transcript_result</span> <span id="braces">(</span><span id="var">@results</span><span id="braces">)</span>
	<span id="braces">{</span>
        <span id="comment">#id      start   end     s_mean  d_score c_max   s_prob  sp_score        peptide_signal  localization    reliability     tp_score        mitochondrial_signal</span><br />		<span id="comment">#&gt;ENST00000479548        1       20      0.902   0.832   0.963   0.709   2       YES     S       2       -3      NO</span><br />        <span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$transcript_result</span> =~ <span id="regExp">/^([^\t]+)\t+([^\t]+)\t+([^\t]+)\t+([^\t]+)\t+([^\t]+)\t+([^\t]+)\t+([^\t]+)\t+([^\t]+)\t+(</span><span id="var">$APPRIS</span><span id="regExp">::Utils::Constant::OK_LABEL|</span><span id="var">$APPRIS</span><span id="regExp">::Utils::Constant::NO_LABEL|</span><span id="var">$APPRIS</span><span id="regExp">::Utils::Constant::UNKNOWN_LABEL)\t+([^\t]+)\t+([^\t]+)\t+([^\t]+)\t+(</span><span id="var">$APPRIS</span><span id="regExp">::Utils::Constant::OK_LABEL|</span><span id="var">$APPRIS</span><span id="regExp">::Utils::Constant::NO_LABEL|</span><span id="var">$APPRIS</span><span id="regExp">::Utils::Constant::UNKNOWN_LABEL)\n+/</span> <span id="braces">)</span>        
		<span id="braces">{</span>
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcript_id</span><span id="braces">)</span> = <span id="var">$1</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$pstart</span><span id="braces">)</span> = <span id="var">$2</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$pend</span><span id="braces">)</span> = <span id="var">$3</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$s_mean</span><span id="braces">)</span> = <span id="var">$4</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$d_score</span><span id="braces">)</span> = <span id="var">$5</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$c_max</span><span id="braces">)</span> = <span id="var">$6</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$s_prob</span><span id="braces">)</span> = <span id="var">$7</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$sp_score</span><span id="braces">)</span> = <span id="var">$8</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$peptide_signal</span><span id="braces">)</span> = <span id="var">$9</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$localization</span><span id="braces">)</span> = <span id="var">$10</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$reliability</span><span id="braces">)</span> = <span id="var">$11</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$tp_score</span><span id="braces">)</span> = <span id="var">$12</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$mitochondrial_signal</span><span id="braces">)</span> = <span id="var">$13</span>;

			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> = <span id="sqStr">'&gt;'</span>.<span id="var">$transcript_result</span>;
			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'sp_score'</span><span id="braces">}</span> = <span id="var">$sp_score</span>;
			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'tp_score'</span><span id="braces">}</span> = <span id="var">$tp_score</span>;
			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'peptide_signal'</span><span id="braces">}</span> = <span id="var">$peptide_signal</span>;
			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'mitochondrial_signal'</span><span id="braces">}</span> = <span id="var">$mitochondrial_signal</span>;
			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'pstart'</span><span id="braces">}</span> = <span id="var">$pstart</span>;
			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'pend'</span><span id="braces">}</span> = <span id="var">$pend</span>;
			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'s_mean'</span><span id="braces">}</span> = <span id="var">$s_mean</span>;
			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'s_prob'</span><span id="braces">}</span> = <span id="var">$s_prob</span>;
			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'d_score'</span><span id="braces">}</span> = <span id="var">$d_score</span>;
			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'c_max'</span><span id="braces">}</span> = <span id="var">$c_max</span>;
			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'reliability'</span><span id="braces">}</span> = <span id="var">$reliability</span>;
			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'localization'</span><span id="braces">}</span> = <span id="var">$localization</span>;
		<span id="braces">}</span>
	<span id="braces">}</span>
	<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> = <span id="var">$result</span>;

	<span id="comment"># Create APPRIS object</span><br />	<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$transcript</span> <span id="braces">(</span>@<span id="braces">{</span><span id="var">$gene</span>-&gt;<span id="method">transcripts</span><span id="braces">}</span><span id="braces">)</span> <span id="braces">{</span>			
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcript_id</span><span id="braces">)</span> = <span id="var">$transcript</span>-&gt;<span id="method">stable_id</span>;
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$analysis</span><span id="braces">)</span>;
		
		<span id="comment"># create method object</span><br />		<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">exists</span> <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span> and <span id="perlFunc">exists</span> <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'peptide_signal'</span><span id="braces">}</span> and <span id="perlFunc">exists</span> <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'mitochondrial_signal'</span><span id="braces">}</span> <span id="braces">)</span> <span id="braces">{</span>
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$report</span><span id="braces">)</span> = <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$regions</span><span id="braces">)</span>;
			<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$transcript</span>-&gt;<span id="method">translate</span> and <span id="var">$transcript</span>-&gt;<span id="method">translate</span>-&gt;<span id="method">cds</span> <span id="braces">)</span> <span id="braces">{</span>		
				<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">exists</span> <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'pstart'</span><span id="braces">}</span> and <span id="perlFunc">exists</span> <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'pend'</span><span id="braces">}</span> <span id="braces">)</span> <span id="braces">{</span>
					<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$strand</span><span id="braces">)</span> = <span id="var">$transcript</span>-&gt;<span id="method">strand</span>;
					<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$pro_coord_start</span><span id="braces">)</span> = <span id="method">get_cds_from_residue</span><span id="braces">(</span><span id="var">$transcript</span>, <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'pstart'</span><span id="braces">}</span><span id="braces">)</span>;
					<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$pro_coord_end</span><span id="braces">)</span> = <span id="method">get_cds_from_residue</span><span id="braces">(</span><span id="var">$transcript</span>, <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'pend'</span><span id="braces">}</span><span id="braces">)</span>;
					<span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'trans_strand'</span><span id="braces">}</span> = <span id="var">$strand</span>;
					<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$strand</span> <span id="perlKey">eq</span> <span id="sqStr">'-'</span> <span id="braces">)</span> <span id="braces">{</span>
						<span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'trans_end'</span><span id="braces">}</span> = <span id="var">$pro_coord_start</span>-&gt;<span id="braces">{</span><span id="sqStr">'start'</span><span id="braces">}</span>;                                                
						<span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'trans_start'</span><span id="braces">}</span> = <span id="var">$pro_coord_end</span>-&gt;<span id="braces">{</span><span id="sqStr">'end'</span><span id="braces">}</span>;                                              
					<span id="braces">}</span>
					<span id="perlKey">else</span> <span id="braces">{</span>
						<span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'trans_start'</span><span id="braces">}</span> = <span id="var">$pro_coord_start</span>-&gt;<span id="braces">{</span><span id="sqStr">'start'</span><span id="braces">}</span>;                                                
						<span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'trans_end'</span><span id="braces">}</span> = <span id="var">$pro_coord_end</span>-&gt;<span id="braces">{</span><span id="sqStr">'end'</span><span id="braces">}</span>;                                              
					<span id="braces">}</span>
						
					<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$regions</span><span id="braces">}</span>,
							<span id="module"><a href="Analysis/CRASHRegion.html">APPRIS::Analysis::CRASHRegion</a></span>-&gt;<span id="perlKey">new</span> <span id="braces">(</span>
									-start						=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'trans_start'</span><span id="braces">}</span>,
									-end						=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'trans_end'</span><span id="braces">}</span>,
									-strand						=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'trans_strand'</span><span id="braces">}</span>,
									-pstart						=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'pstart'</span><span id="braces">}</span>,						
									-pend						=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'pend'</span><span id="braces">}</span>,						
									-s_mean						=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'s_mean'</span><span id="braces">}</span>,					
									-s_prob						=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'s_prob'</span><span id="braces">}</span>,
									-d_score					=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'d_score'</span><span id="braces">}</span>,					
									-c_max						=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'c_max'</span><span id="braces">}</span>,
									-reliability				=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'reliability'</span><span id="braces">}</span>,					
									-localization				=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'localization'</span><span id="braces">}</span>,
							<span id="braces">)</span>
					<span id="braces">)</span>;
				<span id="braces">}</span>
			<span id="braces">}</span>
			
			<span id="comment"># create Analysis object (for trans)			</span><br />			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method</span><span id="braces">)</span> = <span id="module"><a href="Analysis/CRASH.html">APPRIS::Analysis::CRASH</a></span>-&gt;<span id="perlKey">new</span> <span id="braces">(</span>
							-result						=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span>,
							-sp_score					=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'sp_score'</span><span id="braces">}</span>,
							-tp_score					=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'tp_score'</span><span id="braces">}</span>,
							-peptide_signal				=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'peptide_signal'</span><span id="braces">}</span>,
							-mitochondrial_signal		=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'mitochondrial_signal'</span><span id="braces">}</span>
			<span id="braces">)</span>;
			<span id="var">$method</span>-&gt;<span id="method">regions</span><span id="braces">(</span><span id="var">$regions</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$regions</span> and <span id="braces">(</span><span id="perlFunc">scalar</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$regions</span><span id="braces">}</span><span id="braces">)</span> &gt; 0<span id="braces">)</span> <span id="braces">)</span>;
			
			<span id="var">$analysis</span> = <span id="module"><a href="Analysis.html">APPRIS::Analysis</a></span>-&gt;<span id="perlKey">new</span><span id="braces">(</span><span id="braces">)</span>;
			<span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$method</span><span id="braces">)</span> <span id="braces">{</span>
				<span id="var">$analysis</span>-&gt;<span id="method">crash</span><span id="braces">(</span><span id="var">$method</span><span id="braces">)</span>;
				<span id="var">$analysis</span>-&gt;<span id="method">number</span><span id="braces">(</span><span id="var">$analysis</span>-&gt;<span id="method">number</span>+1<span id="braces">)</span>;
			<span id="braces">}</span>			
		<span id="braces">}</span>
				
		<span id="comment"># create Transcript object</span><br />		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcript</span><span id="braces">)</span> = <span id="module"><a href="Transcript.html">APPRIS::Transcript</a></span>-&gt;<span id="perlKey">new</span>
		<span id="braces">(</span>
			-stable_id	=&gt; <span id="var">$transcript_id</span>,
		<span id="braces">)</span>;
		<span id="var">$transcript</span>-&gt;<span id="method">analysis</span><span id="braces">(</span><span id="var">$analysis</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$analysis</span><span id="braces">)</span>;
		<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$transcripts</span><span id="braces">}</span>, <span id="var">$transcript</span><span id="braces">)</span>;
		<span id="var">$index_transcripts</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span> = <span id="var">$index</span>; <span id="var">$index</span>++; <span id="comment"># Index the list of transcripts</span><br />	<span id="braces">}</span>

	<span id="comment"># create Analysis object (for gene)</span><br />	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method2</span><span id="braces">)</span> = <span id="module"><a href="Analysis/CRASH.html">APPRIS::Analysis::CRASH</a></span>-&gt;<span id="perlKey">new</span><span id="braces">(</span> -result =&gt; <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> <span id="braces">)</span>;	
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$analysis2</span><span id="braces">)</span> = <span id="module"><a href="Analysis.html">APPRIS::Analysis</a></span>-&gt;<span id="perlKey">new</span><span id="braces">(</span><span id="braces">)</span>;
	<span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$method2</span><span id="braces">)</span> <span id="braces">{</span>
		<span id="var">$analysis2</span>-&gt;<span id="method">crash</span><span id="braces">(</span><span id="var">$method2</span><span id="braces">)</span>;
		<span id="var">$analysis2</span>-&gt;<span id="method">number</span><span id="braces">(</span><span id="var">$analysis2</span>-&gt;<span id="method">number</span>+1<span id="braces">)</span>;
	<span id="braces">}</span>
	
	<span id="comment"># create Gene object</span><br />	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$entity</span><span id="braces">)</span> = <span id="module"><a href="Gene.html">APPRIS::Gene</a></span>-&gt;<span id="perlKey">new</span><span id="braces">(</span> -stable_id =&gt; <span id="var">$stable_id</span> <span id="braces">)</span>;
	<span id="var">$entity</span>-&gt;<span id="method">transcripts</span><span id="braces">(</span><span id="var">$transcripts</span>, <span id="var">$index_transcripts</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$transcripts</span> and <span id="perlFunc">defined</span> <span id="var">$index_transcripts</span><span id="braces">)</span>;
	<span id="var">$entity</span>-&gt;<span id="method">analysis</span><span id="braces">(</span><span id="var">$analysis2</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$analysis2</span><span id="braces">)</span>;	

	<span id="perlKey">return</span> <span id="var">$entity</span>;</pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE22" id="CODE22"></a>parse_crash($$);</td><td >description</td><td ><a href="#CODE21">prev</a></td><td ><a href="#CODE23">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="subName">parse_crash($$);</span>
{<pre><span id="perlKey">sub</span> <span id="method">parse_thump</span><span id="braces">(</span>$$<span id="braces">)</span>;</pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE23" id="CODE23"></a>parse_firestar($$)</td><td >description</td><td ><a href="#CODE22">prev</a></td><td ><a href="#CODE24">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="subName">parse_firestar($$)</span>
{<pre>
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$gene</span>, <span id="var">$result</span><span id="braces">)</span> = <span id="var">@_</span>;

	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$stable_id</span><span id="braces">)</span> = <span id="var">$gene</span>-&gt;<span id="method">stable_id</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcript_result</span><span id="braces">)</span> = <span id="sqStr">''</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$init_trans_result</span><span id="braces">)</span> = 0;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$cutoffs</span><span id="braces">)</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcripts</span><span id="braces">)</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$index_transcripts</span><span id="braces">)</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$index</span><span id="braces">)</span> = 0;	
	
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">@results</span><span id="braces">)</span> = <span id="perlFunc">split</span><span id="braces">(</span> <span id="sqStr">'\n'</span>, <span id="var">$result</span><span id="braces">)</span>;
	<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$line</span> <span id="braces">(</span><span id="var">@results</span><span id="braces">)</span>
	<span id="braces">{</span>
		<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$line</span> <span id="perlKey">eq</span> <span id="sqStr">'######'</span><span id="braces">)</span> <span id="braces">{</span>
			<span id="comment"># Init trans result</span><br />			<span id="var">$transcript_result</span> = <span id="sqStr">''</span>;
			<span id="var">$init_trans_result</span> = 1;
		<span id="braces">}</span>
		<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$init_trans_result</span> <span id="braces">)</span> <span id="braces">{</span>
			<span id="var">$transcript_result</span> .= <span id="var">$line</span>.<span id="dqStr">"\n"</span>;		
		<span id="braces">}</span>

		<span id="comment">#&gt;&gt;&gt;     OTTHUMT00000171822      29      46,47,48,49,67,68,69,70,98,99,100,101,166,170,171,394,411,412,413,448,452,480,481,492,495,497,498,499,504</span><br />		<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$line</span>=~<span id="regExp">/^&gt;&gt;&gt;\t+([^\t]+)\t+([^\t]+)\t+([^\$]+)$/</span> <span id="braces">)</span>
		<span id="braces">{</span>
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$id</span><span id="braces">)</span> = <span id="var">$1</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">@residue_list</span><span id="braces">)</span> = <span id="perlFunc">split</span><span id="braces">(</span><span id="sqStr">','</span>, <span id="var">$3</span><span id="braces">)</span>;

			<span id="comment"># Get the peptide position and scores</span><br />			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$residue_list_report</span><span id="braces">)</span>;
			<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$residue_position</span> <span id="braces">(</span><span id="var">@residue_list</span><span id="braces">)</span>
			<span id="braces">{</span>
				<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$residue_position</span> and <span id="var">$residue_position</span> <span id="perlKey">ne</span> <span id="sqStr">''</span> <span id="braces">)</span>
				<span id="braces">{</span>
					<span id="comment">#76	6	VETATTVGYGDLY	 2h8pC  1k4cC  2r9rH</span><br />					<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$transcript_result</span> =~ <span id="regExp">/$residue_position\t+(\d+)\t+([^\t]*)\t+([^\n]*)[^\&gt;]*&gt;&gt;&gt;\t+$id/</span> <span id="braces">)</span>
					<span id="braces">{</span>
						<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$score</span><span id="braces">)</span> = <span id="var">$1</span>;
						<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$domain</span><span id="braces">)</span> = <span id="var">$2</span>;
						<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$motifs</span><span id="braces">)</span> = <span id="var">$3</span>; <span id="var">$motifs</span> =~ <span id="regExp">s/^\s*//</span>; <span id="var">$motifs</span> =~ <span id="regExp">s/\s*$//</span>; <span id="var">$motifs</span> =~ <span id="regExp">s/\s+/\|/g</span>; <span id="comment">#$motifs = join('|',split(/\s+/,$motifs));</span><br />						<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$residue_list_report</span><span id="braces">}</span>,<span id="braces">{</span>
								<span id="sqStr">'residue'</span>	=&gt; <span id="var">$residue_position</span>,
								<span id="sqStr">'score'</span>		=&gt; <span id="var">$score</span>,
								<span id="sqStr">'domain'</span>	=&gt; <span id="var">$domain</span>,
								<span id="sqStr">'motifs'</span>	=&gt; <span id="var">$motifs</span>,
						<span id="braces">}</span><span id="braces">)</span>;
					<span id="braces">}</span>
				<span id="braces">}</span>			
			<span id="braces">}</span>

			<span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$residue_list_report</span> and <span id="perlFunc">scalar</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$residue_list_report</span><span id="braces">}</span><span id="braces">)</span>&gt;0<span id="braces">)</span>
			<span id="braces">{</span>
				<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'residues'</span><span id="braces">}</span> = <span id="var">$residue_list_report</span>;
			<span id="braces">}</span>
			
			<span id="comment"># Save result for each transcript</span><br />			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> = <span id="var">$transcript_result</span>;
			
			<span id="comment"># Init trans result</span><br />			<span id="var">$transcript_result</span> = <span id="sqStr">''</span>; 
		<span id="braces">}</span>
		<span id="comment">#C&gt;&gt;     OTTHUMT00000171822      3      46,47,48</span><br />		<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$line</span>=~<span id="regExp">/^C&gt;&gt;\t+([^\t]+)\t+([^\t]+)\t+([^\$]+)$/</span> <span id="braces">)</span>
		<span id="braces">{</span>
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$id</span><span id="braces">)</span> = <span id="var">$1</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">@residue_list</span><span id="braces">)</span> = <span id="perlFunc">split</span><span id="braces">(</span><span id="sqStr">','</span>, <span id="var">$3</span><span id="braces">)</span>;

			<span id="comment"># Get the peptide position and scores</span><br />			<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$residue_position</span> <span id="braces">(</span><span id="var">@residue_list</span><span id="braces">)</span>
			<span id="braces">{</span>
				<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$residue_position</span> and <span id="var">$residue_position</span> <span id="perlKey">ne</span> <span id="sqStr">''</span> <span id="braces">)</span>
				<span id="braces">{</span>
					<span id="comment">#76	6	VETATTVGYGDLY	 2h8pC  1k4cC  2r9rH</span><br />					<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$transcript_result</span> =~ <span id="regExp">/$residue_position\t+(\d+)\t+([^\t]*)\t+([^\n]*)[^\&gt;]*&gt;&gt;\t+$id/</span> <span id="braces">)</span>
					<span id="braces">{</span>
						<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$score</span><span id="braces">)</span> = <span id="var">$1</span>;
						<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$domain</span><span id="braces">)</span> = <span id="var">$2</span>;
						<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$motifs</span><span id="braces">)</span> = <span id="var">$3</span>;
						<span id="var">$motifs</span> =~ <span id="regExp">s/^\s*//</span>; <span id="var">$motifs</span> =~ <span id="regExp">s/\s*$//</span>; <span id="var">$motifs</span> =~ <span id="regExp">s/\s+/\|/g</span>; <span id="comment">#$motifs = join('|',split(/\s+/,$motifs));</span><br />						<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'residues'</span><span id="braces">}</span><span id="braces">}</span>,<span id="braces">{</span>
								<span id="sqStr">'residue'</span>	=&gt; <span id="var">$residue_position</span>,
								<span id="sqStr">'score'</span>		=&gt; <span id="var">$score</span>,
								<span id="sqStr">'domain'</span>	=&gt; <span id="var">$domain</span>,
								<span id="sqStr">'motifs'</span>	=&gt; <span id="var">$motifs</span>,				
						<span id="braces">}</span><span id="braces">)</span>;		
					<span id="braces">}</span>
				<span id="braces">}</span>
			<span id="braces">}</span>
			
			<span id="comment"># Sort residues</span><br />			<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">exists</span> <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'residues'</span><span id="braces">}</span> and <span id="perlFunc">defined</span> <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'residues'</span><span id="braces">}</span> and
				 <span id="braces">(</span><span id="perlFunc">scalar</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'residues'</span><span id="braces">}</span><span id="braces">}</span><span id="braces">)</span> &gt; 0<span id="braces">)</span> <span id="braces">)</span>
			<span id="braces">{</span>
				<span id="perlKey">my</span> <span id="braces">(</span><span id="var">@res_list</span><span id="braces">)</span> = @<span id="braces">{</span><span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'residues'</span><span id="braces">}</span><span id="braces">}</span>;
				<span id="perlKey">my</span> <span id="braces">(</span><span id="var">@sort_res_list</span><span id="braces">)</span> = <span id="perlFunc">sort</span> <span id="braces">{</span> <span id="var">$a</span>-&gt;<span id="braces">{</span><span id="sqStr">'residue'</span><span id="braces">}</span> &lt;=&gt; <span id="var">$b</span>-&gt;<span id="braces">{</span><span id="sqStr">'residue'</span><span id="braces">}</span> <span id="braces">}</span> <span id="var">@res_list</span>;
				<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'residues'</span><span id="braces">}</span> =\@ sort_res_list;				
			<span id="braces">}</span>

			<span id="comment"># Save result for each transcript</span><br />			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$trans_result</span><span id="braces">)</span> = <span id="sqStr">''</span>;
			<span id="var">$trans_result</span> = <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> <span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">exists</span> <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> and <span id="perlFunc">defined</span> <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> <span id="braces">)</span>;
			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> = <span id="var">$trans_result</span> . <span id="var">$transcript_result</span>;
			
			<span id="comment"># Init result variable for the next</span><br />			<span id="var">$transcript_result</span> = <span id="sqStr">''</span>;
		<span id="braces">}</span>
		
		<span id="comment">#ACCEPT: ID\tTOTAL_SCORE\tTOTAL_MOTIFS\tNUM_SCORE_6\tNUM_SCORE_5\tNUM_SCORE_4\n		</span><br />		<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$line</span> =~ <span id="regExp">/^ACCEPT:\s*([^\t]+)\t([^\t]+)\t([^\t]*)\t([^\t]+)\t([^\t]+)\t([^\n]+)\n*/</span> <span id="braces">)</span>
		<span id="braces">{</span>
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$id</span><span id="braces">)</span> = <span id="var">$1</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$total_score</span><span id="braces">)</span> = <span id="var">$2</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$total_residues</span><span id="braces">)</span> = <span id="var">$3</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$num_residues_6</span><span id="braces">)</span> = <span id="var">$4</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$num_residues_5</span><span id="braces">)</span> = <span id="var">$5</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$num_residues_4</span><span id="braces">)</span> = <span id="var">$6</span>;

			<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$id</span> and <span id="braces">(</span><span id="var">$id</span> <span id="perlKey">ne</span> <span id="sqStr">''</span><span id="braces">)</span> <span id="braces">)</span>
			<span id="braces">{</span>
				<span id="perlKey">unless</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$total_residues</span> and <span id="var">$total_residues</span> <span id="perlKey">ne</span> <span id="sqStr">''</span> <span id="braces">)</span>
					<span id="braces">{</span> <span id="var">$total_residues</span> = 0; <span id="braces">}</span>
					
				<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'num_residues'</span><span id="braces">}</span> = <span id="var">$total_residues</span>;
				<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'functional_residue'</span><span id="braces">}</span> = <span id="var">$APPRIS</span>::<span id="module">Utils::Constant::FIRESTAR_ACCEPT_LABEL</span>;

				<span id="comment"># Save result for each transcript</span><br />				<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$trans_result</span><span id="braces">)</span> = <span id="sqStr">''</span>;
				<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">exists</span> <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> and <span id="perlFunc">defined</span> <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> <span id="braces">)</span> <span id="braces">{</span>
					<span id="var">$trans_result</span> .= <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span>;
					<span id="var">$trans_result</span> .= <span id="dqStr">"----------------------------------------------------------------------\n"</span>;					
				<span id="braces">}</span>				
				<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> = <span id="var">$trans_result</span> . <span id="var">$line</span>;
			<span id="braces">}</span>
		<span id="braces">}</span>
		<span id="comment">#REJECT: ID\tTOTAL_SCORE\tTOTAL_MOTIFS\tNUM_SCORE_6\tNUM_SCORE_5\tNUM_SCORE_4\n</span><br />		<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$line</span> =~ <span id="regExp">/^REJECT:\s*([^\t]+)\t([^\t]+)\t([^\t]*)\t([^\t]+)\t([^\t]+)\t([^\n]+)\n*/</span> <span id="braces">)</span>
		<span id="braces">{</span>
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$id</span><span id="braces">)</span> = <span id="var">$1</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$total_score</span><span id="braces">)</span> = <span id="var">$2</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$total_residues</span><span id="braces">)</span> = <span id="var">$3</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$num_residues_6</span><span id="braces">)</span> = <span id="var">$4</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$num_residues_5</span><span id="braces">)</span> = <span id="var">$5</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$num_residues_4</span><span id="braces">)</span> = <span id="var">$6</span>;

			<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$id</span> and <span id="braces">(</span><span id="var">$id</span> <span id="perlKey">ne</span> <span id="sqStr">''</span><span id="braces">)</span> <span id="braces">)</span>
			<span id="braces">{</span>
				<span id="perlKey">unless</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$total_residues</span> and <span id="var">$total_residues</span> <span id="perlKey">ne</span> <span id="sqStr">''</span> <span id="braces">)</span>
					<span id="braces">{</span> <span id="var">$total_residues</span> = 0; <span id="braces">}</span>
					
				<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'num_residues'</span><span id="braces">}</span> = <span id="var">$total_residues</span>;
				<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'functional_residue'</span><span id="braces">}</span> = <span id="var">$APPRIS</span>::<span id="module">Utils::Constant::FIRESTAR_REJECT_LABEL</span>;
				
				<span id="comment"># Save result for each transcript</span><br />				<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$trans_result</span><span id="braces">)</span> = <span id="sqStr">''</span>;
				<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">exists</span> <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> and <span id="perlFunc">defined</span> <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> <span id="braces">)</span> <span id="braces">{</span>
					<span id="var">$trans_result</span> .= <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span>;
					<span id="var">$trans_result</span> .= <span id="dqStr">"----------------------------------------------------------------------\n"</span>;					
				<span id="braces">}</span>				
				<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> = <span id="var">$trans_result</span> . <span id="var">$line</span>;				
			<span id="braces">}</span>
		<span id="braces">}</span>
	<span id="braces">}</span>
	<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> = <span id="var">$result</span>;

	<span id="comment"># Create APPRIS object</span><br />	<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$transcript</span> <span id="braces">(</span>@<span id="braces">{</span><span id="var">$gene</span>-&gt;<span id="method">transcripts</span><span id="braces">}</span><span id="braces">)</span> <span id="braces">{</span>			
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcript_id</span><span id="braces">)</span> = <span id="var">$transcript</span>-&gt;<span id="method">stable_id</span>;
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$analysis</span><span id="braces">)</span>;
		
		<span id="comment"># create method object</span><br />		<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">exists</span> <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span> and <span id="perlFunc">exists</span> <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'functional_residue'</span><span id="braces">}</span> <span id="braces">)</span> <span id="braces">{</span>
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$report</span><span id="braces">)</span> = <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$regions</span><span id="braces">)</span>;			
			<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$transcript</span>-&gt;<span id="method">translate</span> and <span id="var">$transcript</span>-&gt;<span id="method">translate</span>-&gt;<span id="method">cds</span> <span id="braces">)</span> <span id="braces">{</span>				
				<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">exists</span> <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'residues'</span><span id="braces">}</span> <span id="braces">)</span> <span id="braces">{</span>
					<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$re</span> <span id="braces">(</span>@<span id="braces">{</span><span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'residues'</span><span id="braces">}</span><span id="braces">}</span><span id="braces">)</span> <span id="braces">{</span>
						<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$pro_coord</span><span id="braces">)</span> = <span id="method">get_cds_from_residue</span><span id="braces">(</span><span id="var">$transcript</span>, <span id="var">$re</span>-&gt;<span id="braces">{</span><span id="sqStr">'residue'</span><span id="braces">}</span><span id="braces">)</span>;
						<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$region</span><span id="braces">)</span> = <span id="module"><a href="Analysis/FirestarRegion.html">APPRIS::Analysis::FirestarRegion</a></span>-&gt;<span id="perlKey">new</span> <span id="braces">(</span>
										-residue	=&gt; <span id="var">$re</span>-&gt;<span id="braces">{</span><span id="sqStr">'residue'</span><span id="braces">}</span>,
										-score		=&gt; <span id="var">$re</span>-&gt;<span id="braces">{</span><span id="sqStr">'score'</span><span id="braces">}</span>,
										-domain		=&gt; <span id="var">$re</span>-&gt;<span id="braces">{</span><span id="sqStr">'domain'</span><span id="braces">}</span>,
										-motifs		=&gt; <span id="var">$re</span>-&gt;<span id="braces">{</span><span id="sqStr">'motifs'</span><span id="braces">}</span>,
										-start		=&gt; <span id="var">$pro_coord</span>-&gt;<span id="method">start</span>,
										-end		=&gt; <span id="var">$pro_coord</span>-&gt;<span id="method">end</span>,
										-strand		=&gt; <span id="var">$pro_coord</span>-&gt;<span id="method">strand</span>,
						<span id="braces">)</span>;
						<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$regions</span><span id="braces">}</span>, <span id="var">$region</span><span id="braces">)</span>;
					<span id="braces">}</span>
				<span id="braces">}</span>
			<span id="braces">}</span>
			
			<span id="comment"># create Analysis object (for trans)			</span><br />			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method</span><span id="braces">)</span> = <span id="module"><a href="Analysis/Firestar.html">APPRIS::Analysis::Firestar</a></span>-&gt;<span id="perlKey">new</span> <span id="braces">(</span>
							-result					=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span>,
							-score					=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'score'</span><span id="braces">}</span>,
							-functional_residue		=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'functional_residue'</span><span id="braces">}</span>,
							-num_residues			=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'num_residues'</span><span id="braces">}</span>,
			<span id="braces">)</span>;
			<span id="var">$method</span>-&gt;<span id="method">residues</span><span id="braces">(</span><span id="var">$regions</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$regions</span><span id="braces">)</span>; 
			<span id="var">$analysis</span> = <span id="module"><a href="Analysis.html">APPRIS::Analysis</a></span>-&gt;<span id="perlKey">new</span><span id="braces">(</span><span id="braces">)</span>;
			<span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$method</span><span id="braces">)</span> <span id="braces">{</span>
				<span id="var">$analysis</span>-&gt;<span id="method">firestar</span><span id="braces">(</span><span id="var">$method</span><span id="braces">)</span>;
				<span id="var">$analysis</span>-&gt;<span id="method">number</span><span id="braces">(</span><span id="var">$analysis</span>-&gt;<span id="method">number</span>+1<span id="braces">)</span>;
			<span id="braces">}</span>			
		<span id="braces">}</span>
				
		<span id="comment"># create Transcript object</span><br />		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcript</span><span id="braces">)</span> = <span id="module"><a href="Transcript.html">APPRIS::Transcript</a></span>-&gt;<span id="perlKey">new</span>
		<span id="braces">(</span>
			-stable_id	=&gt; <span id="var">$transcript_id</span>,
		<span id="braces">)</span>;
		<span id="var">$transcript</span>-&gt;<span id="method">analysis</span><span id="braces">(</span><span id="var">$analysis</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$analysis</span><span id="braces">)</span>;
		<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$transcripts</span><span id="braces">}</span>, <span id="var">$transcript</span><span id="braces">)</span>;
		<span id="var">$index_transcripts</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span> = <span id="var">$index</span>; <span id="var">$index</span>++; <span id="comment"># Index the list of transcripts</span><br />	<span id="braces">}</span>

	<span id="comment"># create Analysis object (for gene)</span><br />	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method2</span><span id="braces">)</span> = <span id="module"><a href="Analysis/Firestar.html">APPRIS::Analysis::Firestar</a></span>-&gt;<span id="perlKey">new</span><span id="braces">(</span> -result =&gt; <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> <span id="braces">)</span>;	
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$analysis2</span><span id="braces">)</span> = <span id="module"><a href="Analysis.html">APPRIS::Analysis</a></span>-&gt;<span id="perlKey">new</span><span id="braces">(</span><span id="braces">)</span>;
	<span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$method2</span><span id="braces">)</span> <span id="braces">{</span>
		<span id="var">$analysis2</span>-&gt;<span id="method">firestar</span><span id="braces">(</span><span id="var">$method2</span><span id="braces">)</span>;
		<span id="var">$analysis2</span>-&gt;<span id="method">number</span><span id="braces">(</span><span id="var">$analysis2</span>-&gt;<span id="method">number</span>+1<span id="braces">)</span>;
	<span id="braces">}</span>
	
	<span id="comment"># create Gene object</span><br />	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$entity</span><span id="braces">)</span> = <span id="module"><a href="Gene.html">APPRIS::Gene</a></span>-&gt;<span id="perlKey">new</span><span id="braces">(</span> -stable_id =&gt; <span id="var">$stable_id</span> <span id="braces">)</span>;
	<span id="var">$entity</span>-&gt;<span id="method">transcripts</span><span id="braces">(</span><span id="var">$transcripts</span>, <span id="var">$index_transcripts</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$transcripts</span> and <span id="perlFunc">defined</span> <span id="var">$index_transcripts</span><span id="braces">)</span>;
	<span id="var">$entity</span>-&gt;<span id="method">analysis</span><span id="braces">(</span><span id="var">$analysis2</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$analysis2</span><span id="braces">)</span>;	

	<span id="perlKey">return</span> <span id="var">$entity</span>;</pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE24" id="CODE24"></a>parse_firestar($$);</td><td >description</td><td ><a href="#CODE23">prev</a></td><td ><a href="#CODE25">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="subName">parse_firestar($$);</span>
{<pre><span id="perlKey">sub</span> <span id="method">parse_matador3d</span><span id="braces">(</span>$$<span id="braces">)</span>;</pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE25" id="CODE25"></a>parse_firestar_gopher($)</td><td >description</td><td ><a href="#CODE24">prev</a></td><td ><a href="#CODE26">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="subName">parse_firestar_gopher($)</span>
{<pre>
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$result</span><span id="braces">)</span> = <span id="var">@_</span>;

	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcript_result</span><span id="braces">)</span> = <span id="sqStr">''</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$init_trans_result</span><span id="braces">)</span> = 0;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcripts</span><span id="braces">)</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$cutoffs</span><span id="braces">)</span>;
	
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">@results</span><span id="braces">)</span> = <span id="perlFunc">split</span><span id="braces">(</span> <span id="sqStr">'\n'</span>, <span id="var">$result</span><span id="braces">)</span>;
	<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$line</span> <span id="braces">(</span><span id="var">@results</span><span id="braces">)</span>
	<span id="braces">{</span>
		<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$line</span> <span id="perlKey">eq</span> <span id="sqStr">'######'</span><span id="braces">)</span> <span id="braces">{</span>
			<span id="comment"># Init trans result</span><br />			<span id="var">$transcript_result</span> = <span id="sqStr">''</span>;
			<span id="var">$init_trans_result</span> = 1;
		<span id="braces">}</span>
		<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$init_trans_result</span> <span id="braces">)</span> <span id="braces">{</span>
			<span id="var">$transcript_result</span> .= <span id="var">$line</span>.<span id="dqStr">"\n"</span>;		
		<span id="braces">}</span>

		<span id="comment">#&gt;&gt;&gt;     OTTHUMT00000171822      29      46,47,48,49,67,68,69,70,98,99,100,101,166,170,171,394,411,412,413,448,452,480,481,492,495,497,498,499,504</span><br />		<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$line</span>=~<span id="regExp">/^&gt;&gt;&gt;\t+([^\t]+)\t+([^\t]+)\t+([^\$]+)$/</span> <span id="braces">)</span>
		<span id="braces">{</span>
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$id</span><span id="braces">)</span> = <span id="var">$1</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">@residue_list</span><span id="braces">)</span> = <span id="perlFunc">split</span><span id="braces">(</span><span id="sqStr">','</span>, <span id="var">$3</span><span id="braces">)</span>;

			<span id="comment"># Get the peptide position and scores</span><br />			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$residue_list_report</span><span id="braces">)</span>;
			<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$residue_position</span> <span id="braces">(</span><span id="var">@residue_list</span><span id="braces">)</span>
			<span id="braces">{</span>
				<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$residue_position</span> and <span id="var">$residue_position</span> <span id="perlKey">ne</span> <span id="sqStr">''</span> <span id="braces">)</span>
				<span id="braces">{</span>
					<span id="comment">#76	6	VETATTVGYGDLY	 2h8pC  1k4cC  2r9rH</span><br />					<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$transcript_result</span> =~ <span id="regExp">/$residue_position\t+(\d+)\t+([^\t]*)\t+([^\n]*)[^\&gt;]*&gt;&gt;&gt;\t+$id/</span> <span id="braces">)</span>
					<span id="braces">{</span>
						<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$score</span><span id="braces">)</span> = <span id="var">$1</span>;
						<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$domain</span><span id="braces">)</span> = <span id="var">$2</span>;
						<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$motifs</span><span id="braces">)</span> = <span id="var">$3</span>; <span id="var">$motifs</span> =~ <span id="regExp">s/^\s*//</span>; <span id="var">$motifs</span> =~ <span id="regExp">s/\s*$//</span>;
						<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$residue_list_report</span><span id="braces">}</span>,<span id="braces">{</span>
								<span id="sqStr">'residue'</span>	=&gt; <span id="var">$residue_position</span>,
								<span id="sqStr">'score'</span>		=&gt; <span id="var">$score</span>,
								<span id="sqStr">'domain'</span>	=&gt; <span id="var">$domain</span>,
								<span id="sqStr">'motifs'</span>	=&gt; <span id="var">$motifs</span>,
						<span id="braces">}</span><span id="braces">)</span>;
					<span id="braces">}</span>
				<span id="braces">}</span>			
			<span id="braces">}</span>

			<span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$residue_list_report</span> and <span id="perlFunc">scalar</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$residue_list_report</span><span id="braces">}</span><span id="braces">)</span>&gt;0<span id="braces">)</span>
			<span id="braces">{</span>
				<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'residues'</span><span id="braces">}</span> = <span id="var">$residue_list_report</span>;
			<span id="braces">}</span>
			
			<span id="comment"># Save result for each transcript</span><br />			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> = <span id="var">$transcript_result</span>;
			
			<span id="comment"># Init trans result</span><br />			<span id="var">$transcript_result</span> = <span id="sqStr">''</span>; 
		<span id="braces">}</span>
		<span id="comment">#C&gt;&gt;     OTTHUMT00000171822      3      46,47,48</span><br />		<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$line</span>=~<span id="regExp">/^C&gt;&gt;\t+([^\t]+)\t+([^\t]+)\t+([^\$]+)$/</span> <span id="braces">)</span>
		<span id="braces">{</span>
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$id</span><span id="braces">)</span> = <span id="var">$1</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">@residue_list</span><span id="braces">)</span> = <span id="perlFunc">split</span><span id="braces">(</span><span id="sqStr">','</span>, <span id="var">$3</span><span id="braces">)</span>;

			<span id="comment"># Get the peptide position and scores</span><br />			<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$residue_position</span> <span id="braces">(</span><span id="var">@residue_list</span><span id="braces">)</span>
			<span id="braces">{</span>
				<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$residue_position</span> and <span id="var">$residue_position</span> <span id="perlKey">ne</span> <span id="sqStr">''</span> <span id="braces">)</span>
				<span id="braces">{</span>
					<span id="comment">#76	6	VETATTVGYGDLY	 2h8pC  1k4cC  2r9rH</span><br />					<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$transcript_result</span> =~ <span id="regExp">/$residue_position\t+(\d+)\t+([^\t]*)\t+([^\n]*)[^\&gt;]*&gt;&gt;\t+$id/</span> <span id="braces">)</span>
					<span id="braces">{</span>
						<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$score</span><span id="braces">)</span> = <span id="var">$1</span>;
						<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$domain</span><span id="braces">)</span> = <span id="var">$2</span>;
						<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$motifs</span><span id="braces">)</span> = <span id="var">$3</span>; <span id="var">$motifs</span> =~ <span id="regExp">s/^\s*//</span>; <span id="var">$motifs</span> =~ <span id="regExp">s/\s*$//</span>;
						<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'residues'</span><span id="braces">}</span><span id="braces">}</span>,<span id="braces">{</span>
								<span id="sqStr">'residue'</span>	=&gt; <span id="var">$residue_position</span>,
								<span id="sqStr">'score'</span>		=&gt; <span id="var">$score</span>,
								<span id="sqStr">'domain'</span>	=&gt; <span id="var">$domain</span>,
								<span id="sqStr">'motifs'</span>	=&gt; <span id="var">$motifs</span>,				
						<span id="braces">}</span><span id="braces">)</span>;		
					<span id="braces">}</span>
				<span id="braces">}</span>
			<span id="braces">}</span>
			
			<span id="comment"># Sort residues</span><br />			<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">exists</span> <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'residues'</span><span id="braces">}</span> and <span id="perlFunc">defined</span> <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'residues'</span><span id="braces">}</span> and
				 <span id="braces">(</span><span id="perlFunc">scalar</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'residues'</span><span id="braces">}</span><span id="braces">}</span><span id="braces">)</span> &gt; 0<span id="braces">)</span> <span id="braces">)</span>
			<span id="braces">{</span>
				<span id="perlKey">my</span> <span id="braces">(</span><span id="var">@res_list</span><span id="braces">)</span> = @<span id="braces">{</span><span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'residues'</span><span id="braces">}</span><span id="braces">}</span>;
				<span id="perlKey">my</span> <span id="braces">(</span><span id="var">@sort_res_list</span><span id="braces">)</span> = <span id="perlFunc">sort</span> <span id="braces">{</span> <span id="var">$a</span>-&gt;<span id="braces">{</span><span id="sqStr">'residue'</span><span id="braces">}</span> &lt;=&gt; <span id="var">$b</span>-&gt;<span id="braces">{</span><span id="sqStr">'residue'</span><span id="braces">}</span> <span id="braces">}</span> <span id="var">@res_list</span>;
				<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'residues'</span><span id="braces">}</span> =\@ sort_res_list;				
			<span id="braces">}</span>

			<span id="comment"># Save result for each transcript</span><br />			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$trans_result</span><span id="braces">)</span> = <span id="sqStr">''</span>;
			<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">exists</span> <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> and <span id="perlFunc">defined</span> <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> <span id="braces">)</span>
			<span id="braces">{</span>
					<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> = <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> . <span id="var">$transcript_result</span>;
			<span id="braces">}</span>
			
			<span id="comment"># Init result variable for the next</span><br />			<span id="var">$transcript_result</span> = <span id="sqStr">''</span>;
		<span id="braces">}</span>
		
		<span id="comment">#ACCEPT: ID\tTOTAL_SCORE\tTOTAL_MOTIFS\tNUM_SCORE_6\tNUM_SCORE_5\tNUM_SCORE_4\n		</span><br />		<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$line</span> =~ <span id="regExp">/^ACCEPT:\s*([^\t]+)\t([^\t]+)\t([^\t]*)\t([^\t]+)\t([^\t]+)\t([^\n]+)\n*/</span> <span id="braces">)</span>
		<span id="braces">{</span>
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$id</span><span id="braces">)</span> = <span id="var">$1</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$total_score</span><span id="braces">)</span> = <span id="var">$2</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$total_residues</span><span id="braces">)</span> = <span id="var">$3</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$num_residues_6</span><span id="braces">)</span> = <span id="var">$4</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$num_residues_5</span><span id="braces">)</span> = <span id="var">$5</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$num_residues_4</span><span id="braces">)</span> = <span id="var">$6</span>;

			<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$id</span> and <span id="braces">(</span><span id="var">$id</span> <span id="perlKey">ne</span> <span id="sqStr">''</span><span id="braces">)</span> <span id="braces">)</span>
			<span id="braces">{</span>
				<span id="perlKey">unless</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$total_residues</span> and <span id="var">$total_residues</span> <span id="perlKey">ne</span> <span id="sqStr">''</span> <span id="braces">)</span>
					<span id="braces">{</span> <span id="var">$total_residues</span> = 0; <span id="braces">}</span>
					
				<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'num_residues'</span><span id="braces">}</span> = <span id="var">$total_residues</span>;
				<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'functional_residue'</span><span id="braces">}</span> = <span id="var">$APPRIS</span>::<span id="module">Utils::Constant::FIRESTAR_ACCEPT_LABEL</span>;
			<span id="braces">}</span>
		<span id="braces">}</span>
		<span id="comment">#REJECT: ID\tTOTAL_SCORE\tTOTAL_MOTIFS\tNUM_SCORE_6\tNUM_SCORE_5\tNUM_SCORE_4\n</span><br />		<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$line</span> =~ <span id="regExp">/^REJECT:\s*([^\t]+)\t([^\t]+)\t([^\t]*)\t([^\t]+)\t([^\t]+)\t([^\n]+)\n*/</span> <span id="braces">)</span>
		<span id="braces">{</span>
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$id</span><span id="braces">)</span> = <span id="var">$1</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$total_score</span><span id="braces">)</span> = <span id="var">$2</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$total_residues</span><span id="braces">)</span> = <span id="var">$3</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$num_residues_6</span><span id="braces">)</span> = <span id="var">$4</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$num_residues_5</span><span id="braces">)</span> = <span id="var">$5</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$num_residues_4</span><span id="braces">)</span> = <span id="var">$6</span>;

			<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$id</span> and <span id="braces">(</span><span id="var">$id</span> <span id="perlKey">ne</span> <span id="sqStr">''</span><span id="braces">)</span> <span id="braces">)</span>
			<span id="braces">{</span>
				<span id="perlKey">unless</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$total_residues</span> and <span id="var">$total_residues</span> <span id="perlKey">ne</span> <span id="sqStr">''</span> <span id="braces">)</span>
					<span id="braces">{</span> <span id="var">$total_residues</span> = 0; <span id="braces">}</span>
					
				<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'num_residues'</span><span id="braces">}</span> = <span id="var">$total_residues</span>;
				<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'functional_residue'</span><span id="braces">}</span> = <span id="var">$APPRIS</span>::<span id="module">Utils::Constant::FIRESTAR_REJECT_LABEL</span>;
			<span id="braces">}</span>
		<span id="braces">}</span>
	<span id="braces">}</span>

	<span id="comment"># Create APPRIS object</span><br />	<span id="perlKey">while</span> <span id="braces">(</span> <span id="perlKey">my</span> <span id="braces">(</span><span id="var">$id</span>, <span id="var">$report</span><span id="braces">)</span> = <span id="perlFunc">each</span><span id="braces">(</span>%<span id="braces">{</span><span id="var">$cutoffs</span><span id="braces">}</span><span id="braces">)</span> <span id="braces">)</span>
	<span id="braces">{</span>
		<span id="comment"># create Firestar object</span><br />		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$regions</span><span id="braces">)</span>;		
		<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$residue</span> <span id="braces">(</span>@<span id="braces">{</span><span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'residues'</span><span id="braces">}</span><span id="braces">}</span><span id="braces">)</span>
		<span id="braces">{</span>
			<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$regions</span><span id="braces">}</span>,
				<span id="module"><a href="Analysis/FirestarRegion.html">APPRIS::Analysis::FirestarRegion</a></span>-&gt;<span id="perlKey">new</span>
				<span id="braces">(</span>
					-residue	=&gt; <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'residue'</span><span id="braces">}</span>,
					-score		=&gt; <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'score'</span><span id="braces">}</span>,
					-domain		=&gt; <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'domain'</span><span id="braces">}</span>,
				<span id="braces">)</span>				
			<span id="braces">)</span>;			
		<span id="braces">}</span>
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$firestar</span><span id="braces">)</span> = <span id="module"><a href="Analysis/Firestar.html">APPRIS::Analysis::Firestar</a></span>-&gt;<span id="perlKey">new</span> <span id="braces">(</span>
						-result					=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span>,
						-functional_residue		=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'functional_residue'</span><span id="braces">}</span>,
						-num_residues			=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'num_residues'</span><span id="braces">}</span>
		<span id="braces">)</span>;
		<span id="var">$firestar</span>-&gt;<span id="method">residues</span><span id="braces">(</span><span id="var">$regions</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$regions</span><span id="braces">)</span>;

		<span id="comment"># create Analysis object</span><br />		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$analysis</span><span id="braces">)</span> = <span id="module"><a href="Analysis.html">APPRIS::Analysis</a></span>-&gt;<span id="perlKey">new</span><span id="braces">(</span><span id="braces">)</span>;
		<span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$firestar</span><span id="braces">)</span> <span id="braces">{</span>
			<span id="var">$analysis</span>-&gt;<span id="method">firestar</span><span id="braces">(</span><span id="var">$firestar</span><span id="braces">)</span>;
			<span id="var">$analysis</span>-&gt;<span id="method">number</span><span id="braces">(</span><span id="var">$analysis</span>-&gt;<span id="method">number</span>+1<span id="braces">)</span>;
		<span id="braces">}</span>
				
		<span id="comment"># create Transcript object</span><br />		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcript</span><span id="braces">)</span> = <span id="module"><a href="Transcript.html">APPRIS::Transcript</a></span>-&gt;<span id="perlKey">new</span>
		<span id="braces">(</span>
			-stable_id	=&gt; <span id="var">$id</span>,
		<span id="braces">)</span>;
		<span id="var">$transcript</span>-&gt;<span id="method">analysis</span><span id="braces">(</span><span id="var">$analysis</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$analysis</span><span id="braces">)</span>;

		<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$transcripts</span><span id="braces">}</span>, <span id="var">$transcript</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$transcript</span> <span id="braces">)</span>;
	<span id="braces">}</span>

	<span id="perlKey">return</span> <span id="var">$transcripts</span>;</pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE26" id="CODE26"></a>parse_firestar_gopher($);</td><td >description</td><td ><a href="#CODE25">prev</a></td><td ><a href="#CODE27">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="subName">parse_firestar_gopher($);</span>
{<pre></pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE27" id="CODE27"></a>parse_gencode($;$;$)</td><td >description</td><td ><a href="#CODE26">prev</a></td><td ><a href="#CODE28">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="subName">parse_gencode($;$;$)</span>
{<pre>
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$data_file</span>, <span id="var">$transc_file</span>, <span id="var">$transl_file</span><span id="braces">)</span> = <span id="var">@_</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$entity_list</span><span id="braces">)</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$data_cont</span><span id="braces">)</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transc_cont</span><span id="braces">)</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transl_cont</span><span id="braces">)</span>;
	
	<span id="var">$data_cont</span> = <span id="method">_parse_gencode_data</span><span id="braces">(</span><span id="var">$data_file</span><span id="braces">)</span>;
	<span id="var">$transc_cont</span> = <span id="method">_parse_gencode_sequence</span><span id="braces">(</span><span id="var">$transc_file</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$transc_file</span><span id="braces">)</span>;
	<span id="var">$transl_cont</span> = <span id="method">_parse_gencode_sequence</span><span id="braces">(</span><span id="var">$transl_file</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$transl_file</span><span id="braces">)</span>;

	<span id="comment"># Scan genes</span><br />	<span id="perlKey">while</span> <span id="braces">(</span> <span id="perlKey">my</span> <span id="braces">(</span><span id="var">$gene_id</span>, <span id="var">$gene_features</span><span id="braces">)</span> = <span id="perlFunc">each</span><span id="braces">(</span>%<span id="braces">{</span><span id="var">$data_cont</span><span id="braces">}</span><span id="braces">)</span> <span id="braces">)</span>
	<span id="braces">{</span>
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$xref_identities</span><span id="braces">)</span>;
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcripts</span>, <span id="var">$index_transcripts</span><span id="braces">)</span> = <span id="method">_fetch_transc_objects</span><span id="braces">(</span><span id="var">$gene_id</span>, <span id="var">$gene_features</span>-&gt;<span id="braces">{</span><span id="sqStr">'transcripts'</span><span id="braces">}</span>, <span id="var">$transc_cont</span>, <span id="var">$transl_cont</span><span id="braces">)</span>;
		
		<span id="comment"># Create gene object</span><br />		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$gene</span><span id="braces">)</span> = <span id="module"><a href="Gene.html">APPRIS::Gene</a></span>-&gt;<span id="perlKey">new</span>
		<span id="braces">(</span>
			-stable_id	=&gt; <span id="var">$gene_id</span>,
			-<span id="perlFunc">chr</span>		=&gt; <span id="var">$gene_features</span>-&gt;<span id="braces">{</span><span id="sqStr">'chr'</span><span id="braces">}</span>,
			-start		=&gt; <span id="var">$gene_features</span>-&gt;<span id="braces">{</span><span id="sqStr">'start'</span><span id="braces">}</span>,
			-end		=&gt; <span id="var">$gene_features</span>-&gt;<span id="braces">{</span><span id="sqStr">'end'</span><span id="braces">}</span>,
			-strand		=&gt; <span id="var">$gene_features</span>-&gt;<span id="braces">{</span><span id="sqStr">'strand'</span><span id="braces">}</span>,
			-biotype	=&gt; <span id="var">$gene_features</span>-&gt;<span id="braces">{</span><span id="sqStr">'biotype'</span><span id="braces">}</span>,
			-status		=&gt; <span id="var">$gene_features</span>-&gt;<span id="braces">{</span><span id="sqStr">'status'</span><span id="braces">}</span>,
			-source		=&gt; <span id="var">$gene_features</span>-&gt;<span id="braces">{</span><span id="sqStr">'source'</span><span id="braces">}</span>,
			-level		=&gt; <span id="var">$gene_features</span>-&gt;<span id="braces">{</span><span id="sqStr">'level'</span><span id="braces">}</span>,
			-version	=&gt; <span id="var">$gene_features</span>-&gt;<span id="braces">{</span><span id="sqStr">'version'</span><span id="braces">}</span>
		<span id="braces">)</span>;

		<span id="comment"># Xref identifiers</span><br />		<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">exists</span> <span id="var">$gene_features</span>-&gt;<span id="braces">{</span><span id="sqStr">'external_id'</span><span id="braces">}</span> and <span id="perlFunc">defined</span> <span id="var">$gene_features</span>-&gt;<span id="braces">{</span><span id="sqStr">'external_id'</span><span id="braces">}</span> <span id="braces">)</span> <span id="braces">{</span>
			<span id="comment">#$gene-&gt;external_name($gene_features-&gt;{'external_id'});</span><br />			<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$xref_identities</span><span id="braces">}</span>,
					<span id="module"><a href="XrefEntry.html">APPRIS::XrefEntry</a></span>-&gt;<span id="perlKey">new</span>
					<span id="braces">(</span>
						-id				=&gt; <span id="var">$gene_features</span>-&gt;<span id="braces">{</span><span id="sqStr">'external_id'</span><span id="braces">}</span>,
						-dbname			=&gt; <span id="sqStr">'External_Id'</span>
					<span id="braces">)</span>
			<span id="braces">)</span>;
		<span id="braces">}</span>
		<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">exists</span> <span id="var">$gene_features</span>-&gt;<span id="braces">{</span><span id="sqStr">'havana_gene'</span><span id="braces">}</span> and <span id="perlFunc">defined</span> <span id="var">$gene_features</span>-&gt;<span id="braces">{</span><span id="sqStr">'havana_gene'</span><span id="braces">}</span> <span id="braces">)</span> <span id="braces">{</span>
			<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$xref_identities</span><span id="braces">}</span>,
					<span id="module"><a href="XrefEntry.html">APPRIS::XrefEntry</a></span>-&gt;<span id="perlKey">new</span>
					<span id="braces">(</span>
						-id				=&gt; <span id="var">$gene_features</span>-&gt;<span id="braces">{</span><span id="sqStr">'havana_gene'</span><span id="braces">}</span>,
						-dbname			=&gt; <span id="sqStr">'Havana_Gene_Id'</span>
					<span id="braces">)</span>
			<span id="braces">)</span>;
		<span id="braces">}</span>				
		<span id="comment"># From Ensembl: </span><br />		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$gene_xref</span><span id="braces">)</span> = <span id="method">get_xref_identifiers</span><span id="braces">(</span><span id="var">$gene_id</span><span id="braces">)</span>;
		<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">exists</span> <span id="var">$gene_xref</span>-&gt;<span id="braces">{</span><span id="sqStr">'description'</span><span id="braces">}</span> and <span id="perlFunc">defined</span> <span id="var">$gene_xref</span>-&gt;<span id="braces">{</span><span id="sqStr">'description'</span><span id="braces">}</span><span id="braces">)</span> <span id="braces">{</span> <span id="comment"># add description</span><br />			<span id="var">$gene</span>-&gt;<span id="method">description</span><span id="braces">(</span><span id="var">$gene_xref</span>-&gt;<span id="braces">{</span><span id="sqStr">'description'</span><span id="braces">}</span><span id="braces">)</span>;
		<span id="braces">}</span>		
		<span id="comment">#while ( my ($xref_type, $xref_id) = each (%{$gene_xref}) ) { # add xref identifier</span><br />		<span id="comment">#	if ( ($xref_type eq 'hgnc') and defined $xref_id) {</span><br />		<span id="comment">#		push(@{$xref_identities},</span><br />		<span id="comment">#			APPRIS::XrefEntry-&gt;new</span><br />		<span id="comment">#			(</span><br />		<span id="comment">#				-id				=&gt; $xref_id,</span><br />		<span id="comment">#				-dbname			=&gt; $xref_type</span><br />		<span id="comment">#			)</span><br />		<span id="comment">#		);</span><br />		<span id="comment">#	}</span><br />		<span id="comment">#}</span><br />		
		<span id="var">$gene</span>-&gt;<span id="method">xref_identify</span><span id="braces">(</span><span id="var">$xref_identities</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$xref_identities</span><span id="braces">)</span>;
		<span id="var">$gene</span>-&gt;<span id="method">transcripts</span><span id="braces">(</span><span id="var">$transcripts</span>, <span id="var">$index_transcripts</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$transcripts</span> and <span id="perlFunc">defined</span> <span id="var">$index_transcripts</span><span id="braces">)</span>;
		<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$entity_list</span><span id="braces">}</span>,<span id="var">$gene</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$gene</span><span id="braces">)</span>;
		<span id="comment">#$entity_list-&gt;{$gene_id} = $gene if (defined $gene);</span><br />			
	<span id="braces">}</span>	
	<span id="perlKey">return</span> <span id="var">$entity_list</span>;</pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE28" id="CODE28"></a>parse_gencode($;$;$);</td><td >description</td><td ><a href="#CODE27">prev</a></td><td ><a href="#CODE29">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="subName">parse_gencode($;$;$);</span>
{<pre><span id="perlKey">sub</span> <span id="method">_get_id_version</span><span id="braces">(</span>$<span id="braces">)</span>;</pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE29" id="CODE29"></a>parse_inertia($$$$$)</td><td >description</td><td ><a href="#CODE28">prev</a></td><td ><a href="#CODE30">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="subName">parse_inertia($$$$$)</span>
{<pre>
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$gene</span>, <span id="var">$inertia_i</span>, <span id="var">$mafft_i</span>, <span id="var">$prank_i</span>, <span id="var">$kalign_i</span><span id="braces">)</span> = <span id="var">@_</span>;
	
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$stable_id</span><span id="braces">)</span> = <span id="var">$gene</span>-&gt;<span id="method">stable_id</span>;	
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcripts</span><span id="braces">)</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$cutoffs</span><span id="braces">)</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$index_transcripts</span><span id="braces">)</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$index</span><span id="braces">)</span> = 0;	
	
	<span id="method">_parse_inertia_file</span><span id="braces">(</span><span id="sqStr">'inertia'</span>, <span id="var">$inertia_i</span>, <span id="var">$cutoffs</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$inertia_i</span><span id="braces">)</span>;
	<span id="method">_parse_omega_file</span><span id="braces">(</span><span id="sqStr">'mafft'</span>, <span id="var">$mafft_i</span>, <span id="var">$cutoffs</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$mafft_i</span><span id="braces">)</span>;
	<span id="method">_parse_omega_file</span><span id="braces">(</span><span id="sqStr">'prank'</span>, <span id="var">$prank_i</span>, <span id="var">$cutoffs</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$prank_i</span><span id="braces">)</span>;
	<span id="method">_parse_omega_file</span><span id="braces">(</span><span id="sqStr">'kalign'</span>, <span id="var">$kalign_i</span>, <span id="var">$cutoffs</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$kalign_i</span><span id="braces">)</span>;

	<span id="comment"># Create APPRIS objects</span><br />	<span id="comment">#while ( my ($transcript_id, $report) = each(%{$cutoffs}) )</span><br />	<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$transcript</span> <span id="braces">(</span>@<span id="braces">{</span><span id="var">$gene</span>-&gt;<span id="method">transcripts</span><span id="braces">}</span><span id="braces">)</span> <span id="braces">{</span>
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcript_id</span><span id="braces">)</span> = <span id="var">$transcript</span>-&gt;<span id="method">stable_id</span>;
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$analysis</span><span id="braces">)</span>;

		<span id="comment"># create method object</span><br />		<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">exists</span> <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span> and <span id="perlFunc">exists</span> <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'inertia'</span><span id="braces">}</span> <span id="braces">)</span> <span id="braces">{</span>
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$report</span><span id="braces">)</span> = <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$report2</span><span id="braces">)</span> = <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'inertia'</span><span id="braces">}</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method</span><span id="braces">)</span>;
			
			<span id="comment"># create inertia object</span><br />			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$regions</span><span id="braces">)</span>;			
			<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$residue</span> <span id="braces">(</span>@<span id="braces">{</span><span id="var">$report2</span>-&gt;<span id="braces">{</span><span id="sqStr">'residues'</span><span id="braces">}</span><span id="braces">}</span><span id="braces">)</span>
			<span id="braces">{</span>
				<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$regions</span><span id="braces">}</span>,
					<span id="module"><a href="Analysis/INERTIARegion.html">APPRIS::Analysis::INERTIARegion</a></span>-&gt;<span id="perlKey">new</span>
					<span id="braces">(</span>
						-start				=&gt; <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'start'</span><span id="braces">}</span>,
						-end				=&gt; <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'end'</span><span id="braces">}</span>,
						-strand				=&gt; <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'strand'</span><span id="braces">}</span>,
						-unusual_evolution	=&gt; <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'unusual_evolution'</span><span id="braces">}</span>
					<span id="braces">)</span>
				<span id="braces">)</span>;
			<span id="braces">}</span>
			<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">exists</span> <span id="var">$report2</span>-&gt;<span id="braces">{</span><span id="sqStr">'unusual_evolution'</span><span id="braces">}</span> and <span id="perlFunc">defined</span> <span id="var">$report2</span>-&gt;<span id="braces">{</span><span id="sqStr">'unusual_evolution'</span><span id="braces">}</span> <span id="braces">)</span> <span id="braces">{</span>
				<span id="var">$method</span> = <span id="module"><a href="Analysis/INERTIA.html">APPRIS::Analysis::INERTIA</a></span>-&gt;<span id="perlKey">new</span>
				<span id="braces">(</span>
					-unusual_evolution		=&gt; <span id="var">$report2</span>-&gt;<span id="braces">{</span><span id="sqStr">'unusual_evolution'</span><span id="braces">}</span>
				<span id="braces">)</span>;
				<span id="var">$method</span>-&gt;<span id="method">regions</span><span id="braces">(</span><span id="var">$regions</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$regions</span><span id="braces">)</span>;				
			<span id="braces">}</span>
			<span id="comment"># create omega objects</span><br />			<span id="perlKey">while</span> <span id="braces">(</span> <span id="perlKey">my</span> <span id="braces">(</span><span id="var">$type</span>, <span id="var">$report2</span><span id="braces">)</span> = <span id="perlFunc">each</span><span id="braces">(</span>%<span id="braces">{</span><span id="var">$report</span><span id="braces">}</span><span id="braces">)</span> <span id="braces">)</span>
			<span id="braces">{</span>
				<span id="perlKey">if</span> <span id="braces">(</span> <span id="braces">(</span><span id="var">$type</span> <span id="perlKey">eq</span> <span id="sqStr">'mafft'</span><span id="braces">)</span> or <span id="braces">(</span><span id="var">$type</span> <span id="perlKey">eq</span> <span id="sqStr">'prank'</span><span id="braces">)</span> or <span id="braces">(</span><span id="var">$type</span> <span id="perlKey">eq</span> <span id="sqStr">'kalign'</span><span id="braces">)</span> <span id="braces">)</span>
				<span id="braces">{</span>					
					<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$omega</span><span id="braces">)</span>;
					<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$regions</span><span id="braces">)</span>;
					
					<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$residue</span> <span id="braces">(</span>@<span id="braces">{</span><span id="var">$report2</span>-&gt;<span id="braces">{</span><span id="sqStr">'residues'</span><span id="braces">}</span><span id="braces">}</span><span id="braces">)</span>
					<span id="braces">{</span>
						<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$regions</span><span id="braces">}</span>,
							<span id="module"><a href="Analysis/OmegaRegion.html">APPRIS::Analysis::OmegaRegion</a></span>-&gt;<span id="perlKey">new</span>
							<span id="braces">(</span>
								-start				=&gt; <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'start'</span><span id="braces">}</span>,
								-end				=&gt; <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'end'</span><span id="braces">}</span>,
								-omega_mean			=&gt; <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'omega_mean'</span><span id="braces">}</span>,
								-st_deviation		=&gt; <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'st_deviation'</span><span id="braces">}</span>,
								-p_value			=&gt; <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'p_value'</span><span id="braces">}</span>,
								-difference_value	=&gt; <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'difference_value'</span><span id="braces">}</span>,
								-unusual_evolution	=&gt; <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'unusual_evolution'</span><span id="braces">}</span>
							<span id="braces">)</span>
						<span id="braces">)</span>;			
					<span id="braces">}</span>
					<span id="var">$omega</span> = <span id="module"><a href="Analysis/Omega.html">APPRIS::Analysis::Omega</a></span>-&gt;<span id="perlKey">new</span>
					<span id="braces">(</span>
						-average			=&gt; <span id="var">$report2</span>-&gt;<span id="braces">{</span><span id="sqStr">'omega_average'</span><span id="braces">}</span>,
						-st_desviation		=&gt; <span id="var">$report2</span>-&gt;<span id="braces">{</span><span id="sqStr">'omega_st_desviation'</span><span id="braces">}</span>,
						-result				=&gt; <span id="var">$report2</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span>,
						-unusual_evolution	=&gt; <span id="var">$report2</span>-&gt;<span id="braces">{</span><span id="sqStr">'unusual_evolution'</span><span id="braces">}</span>
					<span id="braces">)</span>;
					<span id="var">$omega</span>-&gt;<span id="method">regions</span><span id="braces">(</span><span id="var">$regions</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$regions</span><span id="braces">)</span>;
					
					<span id="var">$method</span>-&gt;<span id="method">mafft_alignment</span><span id="braces">(</span><span id="var">$omega</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="var">$method</span> and <span id="var">$omega</span> and <span id="braces">(</span><span id="var">$type</span> <span id="perlKey">eq</span> <span id="sqStr">'mafft'</span><span id="braces">)</span> <span id="braces">)</span>;
					<span id="var">$method</span>-&gt;<span id="method">prank_alignment</span><span id="braces">(</span><span id="var">$omega</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="var">$method</span> and <span id="var">$omega</span> and <span id="braces">(</span><span id="var">$type</span> <span id="perlKey">eq</span> <span id="sqStr">'prank'</span><span id="braces">)</span> <span id="braces">)</span>;
					<span id="var">$method</span>-&gt;<span id="method">kalign_alignment</span><span id="braces">(</span><span id="var">$omega</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="var">$method</span> and <span id="var">$omega</span> and <span id="braces">(</span><span id="var">$type</span> <span id="perlKey">eq</span> <span id="sqStr">'kalign'</span><span id="braces">)</span> <span id="braces">)</span>;
				<span id="braces">}</span>			
			<span id="braces">}</span>
			
			<span id="comment"># create Analysis object (for trans)</span><br />			<span id="var">$analysis</span> = <span id="module"><a href="Analysis.html">APPRIS::Analysis</a></span>-&gt;<span id="perlKey">new</span><span id="braces">(</span><span id="braces">)</span>;			
			<span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$method</span><span id="braces">)</span> <span id="braces">{</span>				
				<span id="var">$analysis</span>-&gt;<span id="method">inertia</span><span id="braces">(</span><span id="var">$method</span><span id="braces">)</span>;
				<span id="var">$analysis</span>-&gt;<span id="method">number</span><span id="braces">(</span><span id="var">$analysis</span>-&gt;<span id="method">number</span>+1<span id="braces">)</span>;
			<span id="braces">}</span>
		<span id="braces">}</span>
					
		<span id="comment"># create Transcript object</span><br />		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcript</span><span id="braces">)</span> = <span id="module"><a href="Transcript.html">APPRIS::Transcript</a></span>-&gt;<span id="perlKey">new</span> <span id="braces">(</span> -stable_id	=&gt; <span id="var">$transcript_id</span> <span id="braces">)</span>;
		<span id="var">$transcript</span>-&gt;<span id="method">analysis</span><span id="braces">(</span><span id="var">$analysis</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$analysis</span><span id="braces">)</span>;
		<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$transcript</span> <span id="braces">)</span> <span id="braces">{</span>
			<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$transcripts</span><span id="braces">}</span>, <span id="var">$transcript</span><span id="braces">)</span>;
			<span id="var">$index_transcripts</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span> = <span id="var">$index</span>; <span id="var">$index</span>++; <span id="comment"># Index the list of transcripts</span><br />		<span id="braces">}</span>
	<span id="braces">}</span>
	
	<span id="comment"># create Analysis object (for gene)</span><br />	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$analysis2</span><span id="braces">)</span> = <span id="module"><a href="Analysis.html">APPRIS::Analysis</a></span>-&gt;<span id="perlKey">new</span><span id="braces">(</span><span id="braces">)</span>;
	<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$inertia_i</span> and <span id="braces">(</span><span id="var">$inertia_i</span> <span id="perlKey">ne</span> <span id="sqStr">''</span><span id="braces">)</span> <span id="braces">)</span> <span id="braces">{</span>
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method2</span><span id="braces">)</span> = <span id="module"><a href="Analysis/INERTIA.html">APPRIS::Analysis::INERTIA</a></span>-&gt;<span id="perlKey">new</span><span id="braces">(</span> -result =&gt; <span id="var">$inertia_i</span> <span id="braces">)</span>;	
		<span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$method2</span><span id="braces">)</span> <span id="braces">{</span>
			<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$mafft_i</span> and <span id="braces">(</span><span id="var">$mafft_i</span> <span id="perlKey">ne</span> <span id="sqStr">''</span><span id="braces">)</span> <span id="braces">)</span> <span id="braces">{</span>	
				<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method3</span><span id="braces">)</span> = <span id="module"><a href="Analysis/Omega.html">APPRIS::Analysis::Omega</a></span>-&gt;<span id="perlKey">new</span><span id="braces">(</span> -result =&gt; <span id="var">$mafft_i</span> <span id="braces">)</span>;	
				<span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$method3</span><span id="braces">)</span> <span id="braces">{</span>
					<span id="var">$method2</span>-&gt;<span id="method">mafft_alignment</span><span id="braces">(</span><span id="var">$method3</span><span id="braces">)</span>;
				<span id="braces">}</span>
			<span id="braces">}</span>		
			<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$prank_i</span> and <span id="braces">(</span><span id="var">$prank_i</span> <span id="perlKey">ne</span> <span id="sqStr">''</span><span id="braces">)</span> <span id="braces">)</span> <span id="braces">{</span>	
				<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method4</span><span id="braces">)</span> = <span id="module"><a href="Analysis/Omega.html">APPRIS::Analysis::Omega</a></span>-&gt;<span id="perlKey">new</span><span id="braces">(</span> -result =&gt; <span id="var">$prank_i</span> <span id="braces">)</span>;	
				<span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$method4</span><span id="braces">)</span> <span id="braces">{</span>
					<span id="var">$method2</span>-&gt;<span id="method">prank_alignment</span><span id="braces">(</span><span id="var">$method4</span><span id="braces">)</span>;
				<span id="braces">}</span>
			<span id="braces">}</span>		
			<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$kalign_i</span> and <span id="braces">(</span><span id="var">$kalign_i</span> <span id="perlKey">ne</span> <span id="sqStr">''</span><span id="braces">)</span> <span id="braces">)</span> <span id="braces">{</span>	
				<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method5</span><span id="braces">)</span> = <span id="module"><a href="Analysis/Omega.html">APPRIS::Analysis::Omega</a></span>-&gt;<span id="perlKey">new</span><span id="braces">(</span> -result =&gt; <span id="var">$kalign_i</span> <span id="braces">)</span>;	
				<span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$method5</span><span id="braces">)</span> <span id="braces">{</span>
					<span id="var">$method2</span>-&gt;<span id="method">kalign_alignment</span><span id="braces">(</span><span id="var">$method5</span><span id="braces">)</span>;
				<span id="braces">}</span>
			<span id="braces">}</span>
			<span id="var">$analysis2</span>-&gt;<span id="method">inertia</span><span id="braces">(</span><span id="var">$method2</span><span id="braces">)</span>;
			<span id="var">$analysis2</span>-&gt;<span id="method">number</span><span id="braces">(</span><span id="var">$analysis2</span>-&gt;<span id="method">number</span>+1<span id="braces">)</span>;
		<span id="braces">}</span>
	<span id="braces">}</span>
	
	<span id="comment"># create Gene object</span><br />	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$entity</span><span id="braces">)</span> = <span id="module"><a href="Gene.html">APPRIS::Gene</a></span>-&gt;<span id="perlKey">new</span><span id="braces">(</span> -stable_id =&gt; <span id="var">$stable_id</span> <span id="braces">)</span>;
	<span id="var">$entity</span>-&gt;<span id="method">transcripts</span><span id="braces">(</span><span id="var">$transcripts</span>, <span id="var">$index_transcripts</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$transcripts</span> and <span id="perlFunc">defined</span> <span id="var">$index_transcripts</span><span id="braces">)</span>;
	<span id="var">$entity</span>-&gt;<span id="method">analysis</span><span id="braces">(</span><span id="var">$analysis2</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$analysis2</span><span id="braces">)</span>;	

	<span id="perlKey">return</span> <span id="var">$entity</span>;</pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE30" id="CODE30"></a>parse_inertia($$$$$);</td><td >description</td><td ><a href="#CODE29">prev</a></td><td ><a href="#CODE31">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="subName">parse_inertia($$$$$);</span>
{<pre><span id="perlKey">sub</span> <span id="method">_parse_inertia_file</span><span id="braces">(</span>$$\$<span id="braces">)</span>;</pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE31" id="CODE31"></a>parse_matador3d($$)</td><td >description</td><td ><a href="#CODE30">prev</a></td><td ><a href="#CODE32">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="subName">parse_matador3d($$)</span>
{<pre>
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$gene</span>, <span id="var">$result</span><span id="braces">)</span> = <span id="var">@_</span>;

	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$stable_id</span><span id="braces">)</span> = <span id="var">$gene</span>-&gt;<span id="method">stable_id</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$cutoffs</span><span id="braces">)</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcripts</span><span id="braces">)</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$index_transcripts</span><span id="braces">)</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$index</span><span id="braces">)</span> = 0;

	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">@results</span><span id="braces">)</span> = <span id="perlFunc">split</span><span id="braces">(</span><span id="sqStr">'&gt;'</span>,<span id="var">$result</span><span id="braces">)</span>;	
	<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$transcript_result</span> <span id="braces">(</span><span id="var">@results</span><span id="braces">)</span>
	<span id="braces">{</span>
        <span id="comment">#&gt;ENST00000381318        UNKNOWN</span><br />        <span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$transcript_result</span> =~ <span id="regExp">/^([^\t]+)\t+(</span><span id="var">$APPRIS</span><span id="regExp">::Utils::Constant::OK_LABEL|</span><span id="var">$APPRIS</span><span id="regExp">::Utils::Constant::NO_LABEL|</span><span id="var">$APPRIS</span><span id="regExp">::Utils::Constant::UNKNOWN_LABEL)\n+/</span> <span id="braces">)</span>        
		<span id="braces">{</span>
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcript_id</span><span id="braces">)</span> = <span id="var">$1</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$conservation_structure</span><span id="braces">)</span> = <span id="var">$2</span>;

			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'conservation_structure'</span><span id="braces">}</span> = <span id="var">$conservation_structure</span>;
		<span id="braces">}</span>
        <span id="perlKey">elsif</span> <span id="braces">(</span> <span id="var">$transcript_result</span> =~ <span id="regExp">/^([^\t]+)\t+([^\n]+)\n+/</span> <span id="braces">)</span>
		<span id="braces">{</span>
			<span id="comment">#&gt;ENST00000308249        3.65</span><br />			<span id="comment">#- 196:262[3]    1.33</span><br />	        <span id="comment">#	196:242 0.33[0.33*1*1]	 1Q33_A[35.9]</span><br />
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcript_id</span><span id="braces">)</span> = <span id="var">$1</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$structure_score</span><span id="braces">)</span> = <span id="var">$2</span>;
			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'score'</span><span id="braces">}</span> = <span id="var">$structure_score</span>;

			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$alignment_list_report</span><span id="braces">)</span>;			
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">@trans_alignments</span><span id="braces">)</span> = <span id="perlFunc">split</span><span id="braces">(</span><span id="sqStr">'- '</span>, <span id="var">$transcript_result</span><span id="braces">)</span>;

			<span id="perlKey">for</span> <span id="braces">(</span><span id="perlKey">my</span> <span id="var">$i</span> = 1; <span id="var">$i</span> &lt; <span id="perlFunc">scalar</span><span id="braces">(</span><span id="var">@trans_alignments</span><span id="braces">)</span>; <span id="var">$i</span>++<span id="braces">)</span> <span id="braces">{</span> <span id="comment"># jump the first line (ENST00000308249        3.65)</span><br />				<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$trans_alignments</span><span id="braces">[</span><span id="var">$i</span><span id="braces">]</span> =~ <span id="regExp">/^(\d+)\:(\d+)\[(\d+)\]\t+([^\n]*)\n*([^\$]*)$/</span> <span id="braces">)</span>
				<span id="braces">{</span>				
					<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$cds_start</span><span id="braces">)</span> = <span id="var">$1</span>;
					<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$cds_end</span><span id="braces">)</span> = <span id="var">$2</span>;
					<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$cds_order</span><span id="braces">)</span> = <span id="var">$3</span>;
					<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$cds_score</span><span id="braces">)</span> = <span id="var">$4</span>;
					<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$trans_mini_alignments</span><span id="braces">)</span> = <span id="var">$5</span>;

					<span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$cds_start</span> and <span id="perlFunc">defined</span> <span id="var">$cds_end</span> and <span id="perlFunc">defined</span> <span id="var">$cds_order</span> and <span id="perlFunc">defined</span> <span id="var">$cds_score</span> and <span id="perlFunc">defined</span> <span id="var">$trans_mini_alignments</span><span id="braces">)</span>
					<span id="braces">{</span>
						<span id="comment"># get pdb list</span><br />						<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$pdb_list</span><span id="braces">)</span>;
						<span id="perlKey">while</span> <span id="braces">(</span> <span id="var">$trans_mini_alignments</span> =~ <span id="regExp">/^\s+([^\n]*)\n*/mg</span> <span id="braces">)</span> <span id="comment"># per line</span><br />						<span id="braces">{</span>
							<span id="var">$pdb_list</span>-&gt;<span id="braces">{</span><span id="var">$1</span><span id="braces">}</span> = <span id="sqStr">''</span> <span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$1</span> =~ <span id="regExp">/^[^\t]*\t+[^\t]*\t+([^\$]*)$/</span> <span id="braces">)</span>; <span id="comment">#	196:242 0.33[0.33*1*1]	 1Q33_A[35.9]</span><br />						<span id="braces">}</span>
						
						<span id="comment"># get alignment</span><br />						<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$alignment_report</span><span id="braces">)</span> = <span id="braces">{</span>
							<span id="sqStr">'cds_id'</span>	=&gt; <span id="var">$cds_order</span>,
							<span id="sqStr">'start'</span>		=&gt; <span id="var">$cds_start</span>,
							<span id="sqStr">'end'</span>		=&gt; <span id="var">$cds_end</span>,
							<span id="sqStr">'score'</span>		=&gt; <span id="var">$cds_score</span>,								
						<span id="braces">}</span>;
						<span id="var">$alignment_report</span>-&gt;<span id="braces">{</span><span id="sqStr">'pdb_id'</span><span id="braces">}</span> = <span id="perlFunc">join</span><span id="braces">(</span><span id="sqStr">'|'</span>,<span id="perlFunc">keys</span><span id="braces">(</span>%<span id="braces">{</span><span id="var">$pdb_list</span><span id="braces">}</span><span id="braces">)</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$pdb_list</span> <span id="braces">)</span>;
						<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$alignment_list_report</span><span id="braces">}</span>, <span id="var">$alignment_report</span><span id="braces">)</span>;
					<span id="braces">}</span>
				<span id="braces">}</span>
			<span id="braces">}</span>
			<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$alignment_list_report</span> and <span id="braces">(</span><span id="perlFunc">scalar</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$alignment_list_report</span><span id="braces">}</span><span id="braces">)</span> &gt; 0<span id="braces">)</span> <span id="braces">)</span>
			<span id="braces">{</span>
				<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'alignments'</span><span id="braces">}</span> = <span id="var">$alignment_list_report</span>;
			<span id="braces">}</span>
			<span id="var">$transcript_result</span> =~ <span id="regExp">s/\n*#[^#]+#\n+#[^#]+#\n+#[^#]+#//mg</span>;
			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span>=<span id="sqStr">'&gt;'</span>.<span id="var">$transcript_result</span>;			
		<span id="braces">}</span>
	<span id="braces">}</span>
	<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> = <span id="var">$result</span>;

	<span id="comment"># Create APPRIS object</span><br />	<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$transcript</span> <span id="braces">(</span>@<span id="braces">{</span><span id="var">$gene</span>-&gt;<span id="method">transcripts</span><span id="braces">}</span><span id="braces">)</span> <span id="braces">{</span>			
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcript_id</span><span id="braces">)</span> = <span id="var">$transcript</span>-&gt;<span id="method">stable_id</span>;
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$analysis</span><span id="braces">)</span>;
		
		<span id="comment"># create method object</span><br />		<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">exists</span> <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span> and <span id="perlFunc">exists</span> <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'conservation_structure'</span><span id="braces">}</span> <span id="braces">)</span> <span id="braces">{</span>
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$report</span><span id="braces">)</span> = <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$regions</span><span id="braces">)</span>;			
			<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$transcript</span>-&gt;<span id="method">translate</span> <span id="braces">)</span> <span id="braces">{</span>
				<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$translate</span><span id="braces">)</span> = <span id="var">$transcript</span>-&gt;<span id="method">translate</span>;
				<span id="perlKey">for</span> <span id="braces">(</span><span id="perlKey">my</span> <span id="var">$icds</span> = 0; <span id="var">$icds</span> &lt; <span id="perlFunc">scalar</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$translate</span>-&gt;<span id="method">cds</span><span id="braces">}</span><span id="braces">)</span>; <span id="var">$icds</span>++<span id="braces">)</span> <span id="braces">{</span>
					<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$cds</span><span id="braces">)</span> = <span id="var">$translate</span>-&gt;<span id="method">cds</span>-&gt;<span id="braces">[</span><span id="var">$icds</span><span id="braces">]</span>;
					<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$cds_start</span><span id="braces">)</span> = <span id="var">$cds</span>-&gt;<span id="method">start</span>;
					<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$cds_end</span><span id="braces">)</span> = <span id="var">$cds</span>-&gt;<span id="method">end</span>;
					<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$cds_strand</span><span id="braces">)</span> = <span id="var">$cds</span>-&gt;<span id="method">strand</span>;

					<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">exists</span> <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'alignments'</span><span id="braces">}</span> and 
						 <span id="perlFunc">exists</span> <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'alignments'</span><span id="braces">}</span>-&gt;<span id="braces">[</span><span id="var">$icds</span><span id="braces">]</span> and
						 <span id="perlFunc">defined</span> <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'alignments'</span><span id="braces">}</span>-&gt;<span id="braces">[</span><span id="var">$icds</span><span id="braces">]</span> <span id="braces">)</span>
					<span id="braces">{</span>
						<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$align</span><span id="braces">)</span> = <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'alignments'</span><span id="braces">}</span>-&gt;<span id="braces">[</span><span id="var">$icds</span><span id="braces">]</span>;
						<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$region</span><span id="braces">)</span> = <span id="module"><a href="Analysis/Matador3DRegion.html">APPRIS::Analysis::Matador3DRegion</a></span>-&gt;<span id="perlKey">new</span> <span id="braces">(</span>
										-cds_id		=&gt; <span id="var">$align</span>-&gt;<span id="braces">{</span><span id="sqStr">'cds_id'</span><span id="braces">}</span>,
										-pstart		=&gt; <span id="var">$align</span>-&gt;<span id="braces">{</span><span id="sqStr">'start'</span><span id="braces">}</span>,
										-pend		=&gt; <span id="var">$align</span>-&gt;<span id="braces">{</span><span id="sqStr">'end'</span><span id="braces">}</span>,
										-score		=&gt; <span id="var">$align</span>-&gt;<span id="braces">{</span><span id="sqStr">'score'</span><span id="braces">}</span>,
										-start		=&gt; <span id="var">$cds_start</span>,
										-end		=&gt; <span id="var">$cds_end</span>,
										-strand		=&gt; <span id="var">$cds_strand</span>,										
						<span id="braces">)</span>;
						<span id="var">$region</span>-&gt;<span id="method">pdb_id</span><span id="braces">(</span><span id="var">$align</span>-&gt;<span id="braces">{</span><span id="sqStr">'pdb_id'</span><span id="braces">}</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">exists</span> <span id="var">$align</span>-&gt;<span id="braces">{</span><span id="sqStr">'pdb_id'</span><span id="braces">}</span> and <span id="perlFunc">defined</span> <span id="var">$align</span>-&gt;<span id="braces">{</span><span id="sqStr">'pdb_id'</span><span id="braces">}</span><span id="braces">)</span>;
						<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$regions</span><span id="braces">}</span>, <span id="var">$region</span><span id="braces">)</span>;
					<span id="braces">}</span>
				<span id="braces">}</span>				
			<span id="braces">}</span>
			
			<span id="comment"># create Analysis object (for trans)			</span><br />			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method</span><span id="braces">)</span> = <span id="module"><a href="Analysis/Matador3D.html">APPRIS::Analysis::Matador3D</a></span>-&gt;<span id="perlKey">new</span> <span id="braces">(</span>
							-result					=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span>,
							-score					=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'score'</span><span id="braces">}</span>,
							-conservation_structure	=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'conservation_structure'</span><span id="braces">}</span>,
			<span id="braces">)</span>;
			<span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$regions</span> and <span id="braces">(</span><span id="perlFunc">scalar</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$regions</span><span id="braces">}</span><span id="braces">)</span> &gt; 0<span id="braces">)</span> <span id="braces">)</span> <span id="braces">{</span>
				<span id="var">$method</span>-&gt;<span id="method">alignments</span><span id="braces">(</span><span id="var">$regions</span><span id="braces">)</span>;
				<span id="var">$method</span>-&gt;<span id="method">num_alignments</span><span id="braces">(</span><span id="perlFunc">scalar</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$regions</span><span id="braces">}</span><span id="braces">)</span><span id="braces">)</span>;
			<span id="braces">}</span>			
			<span id="var">$analysis</span> = <span id="module"><a href="Analysis.html">APPRIS::Analysis</a></span>-&gt;<span id="perlKey">new</span><span id="braces">(</span><span id="braces">)</span>;
			<span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$method</span><span id="braces">)</span> <span id="braces">{</span>
				<span id="var">$analysis</span>-&gt;<span id="method">matador3d</span><span id="braces">(</span><span id="var">$method</span><span id="braces">)</span>;
				<span id="var">$analysis</span>-&gt;<span id="method">number</span><span id="braces">(</span><span id="var">$analysis</span>-&gt;<span id="method">number</span>+1<span id="braces">)</span>;
			<span id="braces">}</span>			
		<span id="braces">}</span>
				
		<span id="comment"># create Transcript object</span><br />		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcript</span><span id="braces">)</span> = <span id="module"><a href="Transcript.html">APPRIS::Transcript</a></span>-&gt;<span id="perlKey">new</span>
		<span id="braces">(</span>
			-stable_id	=&gt; <span id="var">$transcript_id</span>,
		<span id="braces">)</span>;
		<span id="var">$transcript</span>-&gt;<span id="method">analysis</span><span id="braces">(</span><span id="var">$analysis</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$analysis</span><span id="braces">)</span>;
		<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$transcripts</span><span id="braces">}</span>, <span id="var">$transcript</span><span id="braces">)</span>;
		<span id="var">$index_transcripts</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span> = <span id="var">$index</span>; <span id="var">$index</span>++; <span id="comment"># Index the list of transcripts</span><br />	<span id="braces">}</span>

	<span id="comment"># create Analysis object (for gene)</span><br />	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method2</span><span id="braces">)</span> = <span id="module"><a href="Analysis/Matador3D.html">APPRIS::Analysis::Matador3D</a></span>-&gt;<span id="perlKey">new</span><span id="braces">(</span> -result =&gt; <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> <span id="braces">)</span>;	
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$analysis2</span><span id="braces">)</span> = <span id="module"><a href="Analysis.html">APPRIS::Analysis</a></span>-&gt;<span id="perlKey">new</span><span id="braces">(</span><span id="braces">)</span>;
	<span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$method2</span><span id="braces">)</span> <span id="braces">{</span>
		<span id="var">$analysis2</span>-&gt;<span id="method">matador3d</span><span id="braces">(</span><span id="var">$method2</span><span id="braces">)</span>;
		<span id="var">$analysis2</span>-&gt;<span id="method">number</span><span id="braces">(</span><span id="var">$analysis2</span>-&gt;<span id="method">number</span>+1<span id="braces">)</span>;
	<span id="braces">}</span>
	
	<span id="comment"># create Gene object</span><br />	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$entity</span><span id="braces">)</span> = <span id="module"><a href="Gene.html">APPRIS::Gene</a></span>-&gt;<span id="perlKey">new</span><span id="braces">(</span> -stable_id =&gt; <span id="var">$stable_id</span> <span id="braces">)</span>;
	<span id="var">$entity</span>-&gt;<span id="method">transcripts</span><span id="braces">(</span><span id="var">$transcripts</span>, <span id="var">$index_transcripts</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$transcripts</span> and <span id="perlFunc">defined</span> <span id="var">$index_transcripts</span><span id="braces">)</span>;
	<span id="var">$entity</span>-&gt;<span id="method">analysis</span><span id="braces">(</span><span id="var">$analysis2</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$analysis2</span><span id="braces">)</span>;	

	<span id="perlKey">return</span> <span id="var">$entity</span>;</pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE32" id="CODE32"></a>parse_matador3d($$);</td><td >description</td><td ><a href="#CODE31">prev</a></td><td ><a href="#CODE33">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="subName">parse_matador3d($$);</span>
{<pre><span id="perlKey">sub</span> <span id="method">parse_spade</span><span id="braces">(</span>$$<span id="braces">)</span>;</pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE33" id="CODE33"></a>parse_spade($$)</td><td >description</td><td ><a href="#CODE32">prev</a></td><td ><a href="#CODE34">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="subName">parse_spade($$)</span>
{<pre>
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$gene</span>, <span id="var">$result</span><span id="braces">)</span> = <span id="var">@_</span>;

	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$stable_id</span><span id="braces">)</span> = <span id="var">$gene</span>-&gt;<span id="method">stable_id</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$cutoffs</span><span id="braces">)</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcripts</span><span id="braces">)</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$index_transcripts</span><span id="braces">)</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$index</span><span id="braces">)</span> = 0;

	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">@results</span><span id="braces">)</span> = <span id="perlFunc">split</span><span id="braces">(</span><span id="sqStr">'&gt;'</span>,<span id="var">$result</span><span id="braces">)</span>;	
	<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$transcript_result</span> <span id="braces">(</span><span id="var">@results</span><span id="braces">)</span>
	<span id="braces">{</span>
        <span id="comment">#&gt;ENST00000381318        UNKNOWN</span><br />        <span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$transcript_result</span> =~ <span id="regExp">/^([^\t]+)\t+(</span><span id="var">$APPRIS</span><span id="regExp">::Utils::Constant::OK_LABEL|</span><span id="var">$APPRIS</span><span id="regExp">::Utils::Constant::NO_LABEL|</span><span id="var">$APPRIS</span><span id="regExp">::Utils::Constant::UNKNOWN_LABEL)\n+/</span> <span id="braces">)</span>        
		<span id="braces">{</span>
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcript_id</span><span id="braces">)</span> = <span id="var">$1</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$domain_signal</span><span id="braces">)</span> = <span id="var">$2</span>;

			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'domain_signal'</span><span id="braces">}</span> = <span id="var">$domain_signal</span>;
		<span id="braces">}</span>
        <span id="perlKey">elsif</span> <span id="braces">(</span> <span id="var">$transcript_result</span>=~<span id="regExp">/^([^\t]+)\t+([^\t]+)\t+([^\t]+)\t+([^\t]+)\t+([^\n]+)\n+/</span> <span id="braces">)</span>
		<span id="braces">{</span>

			<span id="comment">#&gt;ENST00000356093        4       1     	1		0</span><br />			<span id="comment">#domain  0       214     290     214     290     PF09379.3       FERM_N  Domain  1       80      80      73.6    7.6e-21 1       CL0072</span><br />			<span id="comment">#domain_damaged  .       292     401     292     401     PF00373.11      FERM_M  Domain  1       117     117     74.0    8.3e-21 1       No_clan</span><br />			<span id="comment">#domain_possibly_damaged 7       407     490     405     494     PF09380.3       FERM_C  Domain  3       85      90      81.2    3.7e-23 1       CL0266</span><br />			<span id="comment">#domain_wrong 7       407     490     405     494     PF09380.3       FERM_C  Domain  3       85      90      81.2    3.7e-23 1       CL0266</span><br />			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcript_id</span><span id="braces">)</span> = <span id="var">$1</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$num_domains</span><span id="braces">)</span> = <span id="var">$2</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$num_possibly_damaged_domains</span><span id="braces">)</span> = <span id="var">$3</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$num_damaged_domains</span><span id="braces">)</span> = <span id="var">$4</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$num_wrong_domains</span><span id="braces">)</span> = <span id="var">$5</span>;

			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'num_domains'</span><span id="braces">}</span> = <span id="var">$num_domains</span>;
			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'num_possibly_damaged_domains'</span><span id="braces">}</span> = <span id="var">$num_possibly_damaged_domains</span>;
			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'num_damaged_domains'</span><span id="braces">}</span> = <span id="var">$num_damaged_domains</span>;
			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'num_wrong_domains'</span><span id="braces">}</span> = <span id="var">$num_wrong_domains</span>;
	
			<span id="comment"># &lt;type_domain&gt; &lt;domain score&gt;</span><br />			<span id="comment"># &lt;alignment start&gt; &lt;alignment end&gt; &lt;envelope start&gt; &lt;envelope end&gt;</span><br />			<span id="comment"># &lt;hmm acc&gt; &lt;hmm name&gt; &lt;type&gt; &lt;hmm start&gt; &lt;hmm end&gt; &lt;hmm length&gt; &lt;bit score&gt; &lt;E-value&gt;</span><br />			<span id="comment"># &lt;significance&gt; &lt;clan&gt; &lt;predicted_active_site_residues&gt; -optional values-</span><br />			<span id="comment"># &lt;external id, if applied&gt; -optional values-			</span><br />			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$alignment_list</span><span id="braces">)</span>;
			<span id="perlKey">while</span> <span id="braces">(</span> <span id="var">$transcript_result</span> =~ <span id="regExp">/([domain|domain_possibly_damaged|domain_damaged|domain_wrong][^\n]*)\n*/mg</span> <span id="braces">)</span>
			<span id="braces">{</span>
				<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$value_line</span><span id="braces">)</span> = <span id="var">$1</span>;
				<span id="perlKey">my</span> <span id="braces">(</span><span id="var">@value_list</span><span id="braces">)</span> = <span id="perlFunc">split</span><span id="braces">(</span><span id="regExp">/\t+/</span>,<span id="var">$value_line</span><span id="braces">)</span>;
				<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">scalar</span><span id="braces">(</span><span id="var">@value_list</span><span id="braces">)</span> &gt; 12 <span id="braces">)</span>
				<span id="braces">{</span>
					<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$alignment_report</span><span id="braces">)</span>;
					
					<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$type_domain</span><span id="braces">)</span> = <span id="var">$value_list</span><span id="braces">[</span>0<span id="braces">]</span>;
					<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$domain_score</span><span id="braces">)</span> = <span id="var">$value_list</span><span id="braces">[</span>1<span id="braces">]</span>;					
					<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$alignment_start</span><span id="braces">)</span> = <span id="var">$value_list</span><span id="braces">[</span>2<span id="braces">]</span>;
					<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$alignment_end</span><span id="braces">)</span> = <span id="var">$value_list</span><span id="braces">[</span>3<span id="braces">]</span>;
					<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$envelope_start</span><span id="braces">)</span> = <span id="var">$value_list</span><span id="braces">[</span>4<span id="braces">]</span>;
					<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$envelope_end</span><span id="braces">)</span> = <span id="var">$value_list</span><span id="braces">[</span>5<span id="braces">]</span>;
					<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$hmm_acc</span><span id="braces">)</span> = <span id="var">$value_list</span><span id="braces">[</span>6<span id="braces">]</span>;
					<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$hmm_name</span><span id="braces">)</span> = <span id="var">$value_list</span><span id="braces">[</span>7<span id="braces">]</span>;
					<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$hmm_type</span><span id="braces">)</span> = <span id="var">$value_list</span><span id="braces">[</span>8<span id="braces">]</span>;
					<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$hmm_start</span><span id="braces">)</span> = <span id="var">$value_list</span><span id="braces">[</span>9<span id="braces">]</span>;
					<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$hmm_end</span><span id="braces">)</span> = <span id="var">$value_list</span><span id="braces">[</span>10<span id="braces">]</span>;
					<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$hmm_length</span><span id="braces">)</span> = <span id="var">$value_list</span><span id="braces">[</span>11<span id="braces">]</span>;
					<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$bit_score</span><span id="braces">)</span> = <span id="var">$value_list</span><span id="braces">[</span>12<span id="braces">]</span>;
					<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$e_value</span><span id="braces">)</span> = <span id="var">$value_list</span><span id="braces">[</span>13<span id="braces">]</span>;
					
					<span id="comment"># required values</span><br />					<span id="var">$alignment_report</span>-&gt;<span id="braces">{</span><span id="sqStr">'type_domain'</span><span id="braces">}</span> = <span id="var">$type_domain</span>;
					<span id="var">$alignment_report</span>-&gt;<span id="braces">{</span><span id="sqStr">'score'</span><span id="braces">}</span> = <span id="var">$domain_score</span>;
					<span id="var">$alignment_report</span>-&gt;<span id="braces">{</span><span id="sqStr">'alignment_start'</span><span id="braces">}</span> = <span id="var">$alignment_start</span>;
					<span id="var">$alignment_report</span>-&gt;<span id="braces">{</span><span id="sqStr">'alignment_end'</span><span id="braces">}</span> = <span id="var">$alignment_end</span>;
					<span id="var">$alignment_report</span>-&gt;<span id="braces">{</span><span id="sqStr">'envelope_start'</span><span id="braces">}</span> = <span id="var">$envelope_start</span>;
					<span id="var">$alignment_report</span>-&gt;<span id="braces">{</span><span id="sqStr">'envelope_end'</span><span id="braces">}</span> = <span id="var">$envelope_end</span>;
					<span id="var">$alignment_report</span>-&gt;<span id="braces">{</span><span id="sqStr">'hmm_acc'</span><span id="braces">}</span> = <span id="var">$hmm_acc</span>;
					<span id="var">$alignment_report</span>-&gt;<span id="braces">{</span><span id="sqStr">'hmm_name'</span><span id="braces">}</span> = <span id="var">$hmm_name</span>;
					<span id="var">$alignment_report</span>-&gt;<span id="braces">{</span><span id="sqStr">'hmm_type'</span><span id="braces">}</span> = <span id="var">$hmm_type</span>;
					<span id="var">$alignment_report</span>-&gt;<span id="braces">{</span><span id="sqStr">'hmm_start'</span><span id="braces">}</span> = <span id="var">$hmm_start</span>;
					<span id="var">$alignment_report</span>-&gt;<span id="braces">{</span><span id="sqStr">'hmm_end'</span><span id="braces">}</span> = <span id="var">$hmm_end</span>;
					<span id="var">$alignment_report</span>-&gt;<span id="braces">{</span><span id="sqStr">'hmm_length'</span><span id="braces">}</span> = <span id="var">$hmm_length</span>;
					<span id="var">$alignment_report</span>-&gt;<span id="braces">{</span><span id="sqStr">'bit_score'</span><span id="braces">}</span> = <span id="var">$bit_score</span>;
					<span id="var">$alignment_report</span>-&gt;<span id="braces">{</span><span id="sqStr">'e_value'</span><span id="braces">}</span> = <span id="var">$e_value</span>;
					
					<span id="comment"># optional values taking into account the value of external_id</span><br />					<span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$value_list</span><span id="braces">[</span>14<span id="braces">]</span> and !<span id="braces">(</span><span id="var">$value_list</span><span id="braces">[</span>14<span id="braces">]</span> =~ <span id="regExp">/\[[^\]]*\]/</span><span id="braces">)</span><span id="braces">)</span> <span id="braces">{</span>
						<span id="var">$alignment_report</span>-&gt;<span id="braces">{</span><span id="sqStr">'significance'</span><span id="braces">}</span> = <span id="var">$value_list</span><span id="braces">[</span>14<span id="braces">]</span>;
					<span id="braces">}</span>
					<span id="perlKey">elsif</span><span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$value_list</span><span id="braces">[</span>14<span id="braces">]</span> and <span id="braces">(</span><span id="var">$value_list</span><span id="braces">[</span>14<span id="braces">]</span> =~ <span id="regExp">/\[[^\]]*\]/</span><span id="braces">)</span><span id="braces">)</span> <span id="braces">{</span>
						<span id="var">$alignment_report</span>-&gt;<span id="braces">{</span><span id="sqStr">'external_id'</span><span id="braces">}</span> = <span id="var">$value_list</span><span id="braces">[</span>14<span id="braces">]</span>;
					<span id="braces">}</span>

					<span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$value_list</span><span id="braces">[</span>15<span id="braces">]</span> and !<span id="braces">(</span><span id="var">$value_list</span><span id="braces">[</span>15<span id="braces">]</span> =~ <span id="regExp">/\[[^\]]*\]/</span><span id="braces">)</span><span id="braces">)</span> <span id="braces">{</span>
						<span id="var">$alignment_report</span>-&gt;<span id="braces">{</span><span id="sqStr">'clan'</span><span id="braces">}</span> = <span id="var">$value_list</span><span id="braces">[</span>15<span id="braces">]</span>;
					<span id="braces">}</span>
					<span id="perlKey">elsif</span><span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$value_list</span><span id="braces">[</span>15<span id="braces">]</span> and <span id="braces">(</span><span id="var">$value_list</span><span id="braces">[</span>15<span id="braces">]</span> =~ <span id="regExp">/\[[^\]]*\]/</span><span id="braces">)</span><span id="braces">)</span> <span id="braces">{</span>
						<span id="var">$alignment_report</span>-&gt;<span id="braces">{</span><span id="sqStr">'external_id'</span><span id="braces">}</span> = <span id="var">$value_list</span><span id="braces">[</span>15<span id="braces">]</span>;
					<span id="braces">}</span>
									
					<span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$value_list</span><span id="braces">[</span>16<span id="braces">]</span> and !<span id="braces">(</span><span id="var">$value_list</span><span id="braces">[</span>16<span id="braces">]</span> =~ <span id="regExp">/\[[^\]]*\]/</span><span id="braces">)</span><span id="braces">)</span> <span id="braces">{</span>
						<span id="var">$alignment_report</span>-&gt;<span id="braces">{</span><span id="sqStr">'predicted_active_site_residues'</span><span id="braces">}</span> = <span id="var">$value_list</span><span id="braces">[</span>16<span id="braces">]</span>;
					<span id="braces">}</span>
					<span id="perlKey">elsif</span><span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$value_list</span><span id="braces">[</span>16<span id="braces">]</span> and <span id="braces">(</span><span id="var">$value_list</span><span id="braces">[</span>16<span id="braces">]</span> =~ <span id="regExp">/\[[^\]]*\]/</span><span id="braces">)</span><span id="braces">)</span> <span id="braces">{</span>
						<span id="var">$alignment_report</span>-&gt;<span id="braces">{</span><span id="sqStr">'external_id'</span><span id="braces">}</span> = <span id="var">$value_list</span><span id="braces">[</span>16<span id="braces">]</span>;
					<span id="braces">}</span>

					<span id="perlKey">if</span><span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$value_list</span><span id="braces">[</span>17<span id="braces">]</span> and <span id="braces">(</span><span id="var">$value_list</span><span id="braces">[</span>17<span id="braces">]</span> =~ <span id="regExp">/\[[^\]]*\]/</span><span id="braces">)</span><span id="braces">)</span>
						<span id="braces">{</span> <span id="var">$alignment_report</span>-&gt;<span id="braces">{</span><span id="sqStr">'external_id'</span><span id="braces">}</span> = <span id="var">$value_list</span><span id="braces">[</span>17<span id="braces">]</span>; <span id="braces">}</span>

					<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$alignment_list</span><span id="braces">}</span>, <span id="var">$alignment_report</span><span id="braces">)</span>;					
				<span id="braces">}</span>
			<span id="braces">}</span>
			<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$alignment_list</span> and <span id="braces">(</span><span id="perlFunc">scalar</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$alignment_list</span><span id="braces">}</span><span id="braces">)</span> &gt; 0<span id="braces">)</span> <span id="braces">)</span>
			<span id="braces">{</span>
				<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'domains'</span><span id="braces">}</span> = <span id="var">$alignment_list</span>;
			<span id="braces">}</span>
			<span id="var">$transcript_result</span> =~ <span id="regExp">s/\n*#[^#]+#\n+#[^#]+#\n+#[^#]+#//mg</span>;
			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> = <span id="sqStr">'&gt;'</span>.<span id="var">$transcript_result</span>;			
		<span id="braces">}</span>
        <span id="perlKey">elsif</span> <span id="braces">(</span> <span id="var">$transcript_result</span> =~ <span id="regExp">/^([^\s]+)(\s+[^\n]*\n+#HMM[^\n]*\n+#MATCH[^\n]*\n+#PP[^\n]*\n+#SEQ[^\n]*\n+)/</span> <span id="braces">)</span>
		<span id="braces">{</span>
			<span id="comment">#&gt;ENST00000270190     10    144     10    145 PF04118.7   Dopey_N           Family     1   136   309    199.8   3.3e-59   1 No_clan  </span><br />			<span id="comment">##HMM       kdskqkkyasevekaLksFetlqEWADyisfLskLlkalqkkqeklsyvpskllvskrLaqcLnpsLPsGVHqkaLevYelIfekigketLskdlalylsGlfpllsyasisvkplllellekyllpLekalrpll</span><br />			<span id="comment">##MATCH     +d++++ y+s +ekaL++Fe+++EWAD+is+L+kL+kalq ++ ++s +p++ll+skrLaqcL+p+LPsGVH kaLe+Ye+If+++g+++L+kdl+ly+ Glfpll++a++sv+p+ll+l+eky+lpL+k l+p l</span><br />			<span id="comment">##PP        5899************************************.*****************************************************************************************999977</span><br />			<span id="comment">##SEQ       NDYRYRSYSSVIEKALRNFESSSEWADLISSLGKLNKALQ-SNLRYSLLPRRLLISKRLAQCLHPALPSGVHLKALETYEIIFKIVGTKWLAKDLFLYSCGLFPLLAHAAVSVRPVLLTLYEKYFLPLQKLLLPSL</span><br />
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcript_id</span><span id="braces">)</span> = <span id="var">$1</span>;
			<span id="var">$transcript_result</span> =~ <span id="regExp">s/\n*#[^#]+#\n+#[^#]+#\n+#[^#]+#//mg</span>;						
			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> .= <span id="sqStr">'&gt;'</span>.<span id="var">$transcript_result</span>;
		<span id="braces">}</span>	
	<span id="braces">}</span>
	<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> = <span id="var">$result</span>;

	<span id="comment"># Create APPRIS object</span><br />	<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$transcript</span> <span id="braces">(</span>@<span id="braces">{</span><span id="var">$gene</span>-&gt;<span id="method">transcripts</span><span id="braces">}</span><span id="braces">)</span> <span id="braces">{</span>			
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcript_id</span><span id="braces">)</span> = <span id="var">$transcript</span>-&gt;<span id="method">stable_id</span>;
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$analysis</span><span id="braces">)</span>;
		
		<span id="comment"># create method object</span><br />		<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">exists</span> <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span> and <span id="perlFunc">exists</span> <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'domain_signal'</span><span id="braces">}</span> <span id="braces">)</span> <span id="braces">{</span>
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$report</span><span id="braces">)</span> = <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$regions</span><span id="braces">)</span>;
			<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$transcript</span>-&gt;<span id="method">translate</span> and <span id="var">$transcript</span>-&gt;<span id="method">translate</span>-&gt;<span id="method">cds</span> <span id="braces">)</span> <span id="braces">{</span>				
				<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">exists</span> <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'domains'</span><span id="braces">}</span> <span id="braces">)</span> <span id="braces">{</span>
					<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$strand</span><span id="braces">)</span> = <span id="var">$transcript</span>-&gt;<span id="method">strand</span>;
					<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$residue</span> <span id="braces">(</span>@<span id="braces">{</span><span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'domains'</span><span id="braces">}</span><span id="braces">}</span><span id="braces">)</span> <span id="braces">{</span>
						<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$pro_coord_start</span><span id="braces">)</span> = <span id="method">get_cds_from_residue</span><span id="braces">(</span><span id="var">$transcript</span>, <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'alignment_start'</span><span id="braces">}</span><span id="braces">)</span>;
						<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$pro_coord_end</span><span id="braces">)</span> = <span id="method">get_cds_from_residue</span><span id="braces">(</span><span id="var">$transcript</span>, <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'alignment_end'</span><span id="braces">}</span><span id="braces">)</span>;
						<span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'trans_strand'</span><span id="braces">}</span> = <span id="var">$strand</span>;
						<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$strand</span> <span id="perlKey">eq</span> <span id="sqStr">'-'</span> <span id="braces">)</span> <span id="braces">{</span>
							<span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'trans_end'</span><span id="braces">}</span> = <span id="var">$pro_coord_start</span>-&gt;<span id="braces">{</span><span id="sqStr">'start'</span><span id="braces">}</span>;                                                
							<span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'trans_start'</span><span id="braces">}</span> = <span id="var">$pro_coord_end</span>-&gt;<span id="braces">{</span><span id="sqStr">'end'</span><span id="braces">}</span>;                                              
						<span id="braces">}</span>
						<span id="perlKey">else</span> <span id="braces">{</span>
							<span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'trans_start'</span><span id="braces">}</span> = <span id="var">$pro_coord_start</span>-&gt;<span id="braces">{</span><span id="sqStr">'start'</span><span id="braces">}</span>;                                                
							<span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'trans_end'</span><span id="braces">}</span> = <span id="var">$pro_coord_end</span>-&gt;<span id="braces">{</span><span id="sqStr">'end'</span><span id="braces">}</span>;                                              
						<span id="braces">}</span>

						<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$region</span><span id="braces">)</span> = <span id="module"><a href="Analysis/SPADERegion.html">APPRIS::Analysis::SPADERegion</a></span>-&gt;<span id="perlKey">new</span> <span id="braces">(</span>
										-start								=&gt; <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'trans_start'</span><span id="braces">}</span>,
										-end								=&gt; <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'trans_end'</span><span id="braces">}</span>,
										-strand								=&gt; <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'trans_strand'</span><span id="braces">}</span>,						
										-score								=&gt; <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'score'</span><span id="braces">}</span>,						
										-type_domain						=&gt; <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'type_domain'</span><span id="braces">}</span>,						
										-alignment_start					=&gt; <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'alignment_start'</span><span id="braces">}</span>,					
										-alignment_end						=&gt; <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'alignment_end'</span><span id="braces">}</span>,
										-envelope_start						=&gt; <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'envelope_start'</span><span id="braces">}</span>,					
										-envelope_end						=&gt; <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'envelope_end'</span><span id="braces">}</span>,
										-hmm_start							=&gt; <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'hmm_start'</span><span id="braces">}</span>,					
										-hmm_end							=&gt; <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'hmm_end'</span><span id="braces">}</span>,
										-hmm_length							=&gt; <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'hmm_length'</span><span id="braces">}</span>,					
										-hmm_acc							=&gt; <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'hmm_acc'</span><span id="braces">}</span>,
										-hmm_name							=&gt; <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'hmm_name'</span><span id="braces">}</span>,					
										-hmm_type							=&gt; <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'hmm_type'</span><span id="braces">}</span>,
										-bit_score							=&gt; <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'bit_score'</span><span id="braces">}</span>,
										-evalue								=&gt; <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'e_value'</span><span id="braces">}</span>
						<span id="braces">)</span>;
						<span id="var">$region</span>-&gt;<span id="method">significance</span><span id="braces">(</span><span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'significance'</span><span id="braces">}</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">exists</span> <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'significance'</span><span id="braces">}</span> and <span id="perlFunc">defined</span> <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'significance'</span><span id="braces">}</span><span id="braces">)</span>;
						<span id="var">$region</span>-&gt;<span id="method">clan</span><span id="braces">(</span><span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'clan'</span><span id="braces">}</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">exists</span> <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'clan'</span><span id="braces">}</span> and <span id="perlFunc">defined</span> <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'clan'</span><span id="braces">}</span><span id="braces">)</span>;
						<span id="var">$region</span>-&gt;<span id="method">predicted_active_site_residues</span><span id="braces">(</span><span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'predicted_active_site_residues'</span><span id="braces">}</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">exists</span> <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'predicted_active_site_residues'</span><span id="braces">}</span> and <span id="perlFunc">defined</span> <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'predicted_active_site_residues'</span><span id="braces">}</span><span id="braces">)</span>;
						<span id="var">$region</span>-&gt;<span id="method">external_id</span><span id="braces">(</span><span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'external_id'</span><span id="braces">}</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">exists</span> <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'external_id'</span><span id="braces">}</span> and <span id="perlFunc">defined</span> <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'external_id'</span><span id="braces">}</span><span id="braces">)</span>;
						
						<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$regions</span><span id="braces">}</span>, <span id="var">$region</span><span id="braces">)</span>;
					<span id="braces">}</span>
				<span id="braces">}</span>
			<span id="braces">}</span>
			
			<span id="comment"># create Analysis object (for trans)			</span><br />			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method</span><span id="braces">)</span> = <span id="module"><a href="Analysis/SPADE.html">APPRIS::Analysis::SPADE</a></span>-&gt;<span id="perlKey">new</span> <span id="braces">(</span>
							-result							=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span>,
							-domain_signal					=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'domain_signal'</span><span id="braces">}</span>,
							-num_domains					=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'num_domains'</span><span id="braces">}</span>,
							-num_possibly_damaged_domains	=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'num_possibly_damaged_domains'</span><span id="braces">}</span>,
							-num_damaged_domains			=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'num_damaged_domains'</span><span id="braces">}</span>,
							-num_wrong_domains				=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'num_wrong_domains'</span><span id="braces">}</span>
			<span id="braces">)</span>;
			<span id="var">$method</span>-&gt;<span id="method">regions</span><span id="braces">(</span><span id="var">$regions</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$regions</span> and <span id="braces">(</span><span id="perlFunc">scalar</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$regions</span><span id="braces">}</span><span id="braces">)</span> &gt; 0<span id="braces">)</span> <span id="braces">)</span>;
			
			<span id="var">$analysis</span> = <span id="module"><a href="Analysis.html">APPRIS::Analysis</a></span>-&gt;<span id="perlKey">new</span><span id="braces">(</span><span id="braces">)</span>;
			<span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$method</span><span id="braces">)</span> <span id="braces">{</span>
				<span id="var">$analysis</span>-&gt;<span id="method">spade</span><span id="braces">(</span><span id="var">$method</span><span id="braces">)</span>;
				<span id="var">$analysis</span>-&gt;<span id="method">number</span><span id="braces">(</span><span id="var">$analysis</span>-&gt;<span id="method">number</span>+1<span id="braces">)</span>;
			<span id="braces">}</span>			
		<span id="braces">}</span>
				
		<span id="comment"># create Transcript object</span><br />		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcript</span><span id="braces">)</span> = <span id="module"><a href="Transcript.html">APPRIS::Transcript</a></span>-&gt;<span id="perlKey">new</span>
		<span id="braces">(</span>
			-stable_id	=&gt; <span id="var">$transcript_id</span>,
		<span id="braces">)</span>;
		<span id="var">$transcript</span>-&gt;<span id="method">analysis</span><span id="braces">(</span><span id="var">$analysis</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$analysis</span><span id="braces">)</span>;
		<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$transcripts</span><span id="braces">}</span>, <span id="var">$transcript</span><span id="braces">)</span>;
		<span id="var">$index_transcripts</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span> = <span id="var">$index</span>; <span id="var">$index</span>++; <span id="comment"># Index the list of transcripts</span><br />	<span id="braces">}</span>

	<span id="comment"># create Analysis object (for gene)</span><br />	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method2</span><span id="braces">)</span> = <span id="module"><a href="Analysis/SPADE.html">APPRIS::Analysis::SPADE</a></span>-&gt;<span id="perlKey">new</span><span id="braces">(</span> -result =&gt; <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> <span id="braces">)</span>;	
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$analysis2</span><span id="braces">)</span> = <span id="module"><a href="Analysis.html">APPRIS::Analysis</a></span>-&gt;<span id="perlKey">new</span><span id="braces">(</span><span id="braces">)</span>;
	<span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$method2</span><span id="braces">)</span> <span id="braces">{</span>
		<span id="var">$analysis2</span>-&gt;<span id="method">spade</span><span id="braces">(</span><span id="var">$method2</span><span id="braces">)</span>;
		<span id="var">$analysis2</span>-&gt;<span id="method">number</span><span id="braces">(</span><span id="var">$analysis2</span>-&gt;<span id="method">number</span>+1<span id="braces">)</span>;
	<span id="braces">}</span>
	
	<span id="comment"># create Gene object</span><br />	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$entity</span><span id="braces">)</span> = <span id="module"><a href="Gene.html">APPRIS::Gene</a></span>-&gt;<span id="perlKey">new</span><span id="braces">(</span> -stable_id =&gt; <span id="var">$stable_id</span> <span id="braces">)</span>;
	<span id="var">$entity</span>-&gt;<span id="method">transcripts</span><span id="braces">(</span><span id="var">$transcripts</span>, <span id="var">$index_transcripts</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$transcripts</span> and <span id="perlFunc">defined</span> <span id="var">$index_transcripts</span><span id="braces">)</span>;
	<span id="var">$entity</span>-&gt;<span id="method">analysis</span><span id="braces">(</span><span id="var">$analysis2</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$analysis2</span><span id="braces">)</span>;	

	<span id="perlKey">return</span> <span id="var">$entity</span>;</pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE34" id="CODE34"></a>parse_spade($$);</td><td >description</td><td ><a href="#CODE33">prev</a></td><td ><a href="#CODE35">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="subName">parse_spade($$);</span>
{<pre><span id="perlKey">sub</span> <span id="method">parse_inertia</span><span id="braces">(</span>$$$$$<span id="braces">)</span>;</pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE35" id="CODE35"></a>parse_thump($$)</td><td >description</td><td ><a href="#CODE34">prev</a></td><td ><a href="#CODE36">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="subName">parse_thump($$)</span>
{<pre>
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$gene</span>, <span id="var">$result</span><span id="braces">)</span> = <span id="var">@_</span>;

	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$stable_id</span><span id="braces">)</span> = <span id="var">$gene</span>-&gt;<span id="method">stable_id</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$cutoffs</span><span id="braces">)</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcripts</span><span id="braces">)</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$index_transcripts</span><span id="braces">)</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$index</span><span id="braces">)</span> = 0;
	
	<span id="comment"># Firstly, we get temporaly the result of transcripts</span><br />	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$trans_results_tmp</span><span id="braces">)</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">@rst_transcript</span><span id="braces">)</span> = <span id="perlFunc">split</span><span id="braces">(</span><span id="var">$stable_id</span>.<span id="sqStr">'.faa.'</span>,<span id="var">$result</span><span id="braces">)</span>;
	<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$result_trans</span> <span id="braces">(</span><span id="var">@rst_transcript</span><span id="braces">)</span> <span id="braces">{</span>
		<span id="var">$result_trans</span> =~ <span id="regExp">s/\n$//g</span>;
		<span id="perlKey">if</span><span id="braces">(</span> <span id="braces">(</span><span id="var">$result_trans</span> =~ <span id="regExp">/(ENST[^\s]+)/</span> <span id="braces">)</span> and <span id="perlFunc">defined</span> <span id="var">$1</span> <span id="braces">)</span> <span id="braces">{</span>
			<span id="var">$trans_results_tmp</span>-&gt;<span id="braces">{</span><span id="var">$1</span><span id="braces">}</span> = <span id="var">$result_trans</span>;
		<span id="braces">}</span>
	<span id="braces">}</span>

	<span id="comment"># get annotations for each transcript</span><br />	<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$transcript</span> <span id="braces">(</span>@<span id="braces">{</span><span id="var">$gene</span>-&gt;<span id="method">transcripts</span><span id="braces">}</span><span id="braces">)</span> <span id="braces">{</span>			
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcript_id</span><span id="braces">)</span> = <span id="var">$transcript</span>-&gt;<span id="method">stable_id</span>;

		<span id="comment"># Init value</span><br />		<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'num_tmh'</span><span id="braces">}</span> = 0;
		<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'num_damaged_tmh'</span><span id="braces">}</span> = 0;

		<span id="comment">#&gt;ENSG00000142185.faa.ENST00000300482    length 1503 a.a.        UNKNOWN</span><br />		<span id="comment">#helix number 1 start: 798       end: 818</span><br />		<span id="comment">#helix number 2 start: 829       end: 841        damaged</span><br />		<span id="comment">#helix number 3 start: 868       end: 886</span><br />		<span id="comment">#helix number 4 start: 895       end: 908        damaged</span><br />		<span id="comment">#helix number 5 start: 935       end: 955</span><br />		<span id="comment">#helix number 6 start: 1024      end: 1041</span><br />		<span id="comment">#&gt;ENSG00000142185.faa.ENST00000431901    length 144 a.a. NO</span><br />		<span id="comment">#&gt;ENSG00000185272.faa.ENST00000400577    length 281 a.a. YES</span><br />		<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">exists</span> <span id="var">$trans_results_tmp</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span> and <span id="perlFunc">defined</span> <span id="var">$trans_results_tmp</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span> <span id="braces">)</span> <span id="braces">{</span>
						
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcript_result</span><span id="braces">)</span> = <span id="var">$trans_results_tmp</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>;

			<span id="comment"># get annotations</span><br />			<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$transcript_result</span> =~ <span id="regExp">/$transcript_id\t+[^\t]+\t+($APPRIS::Utils::Constant::OK_LABEL|$APPRIS::Utils::Constant::NO_LABEL|$APPRIS::Utils::Constant::UNKNOWN_LABEL)\n*/</span> <span id="braces">)</span> <span id="braces">{</span>
				<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$annotation</span><span id="braces">)</span> = <span id="var">$1</span>;
				<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'transmembrane_signal'</span><span id="braces">}</span> = <span id="var">$annotation</span> <span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$annotation</span> <span id="braces">)</span>;
				
				<span id="comment"># get the helix coordinates			</span><br />				<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transmembrane_list</span><span id="braces">)</span>;
				<span id="perlKey">while</span> <span id="braces">(</span><span id="var">$transcript_result</span> =~ <span id="regExp">/^helix number \d+ start:\s+(\d+)\s+end:\s+(\d+)(\s*damaged|)$/mg</span> <span id="braces">)</span> <span id="braces">{</span>
					<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$start</span><span id="braces">)</span> = <span id="var">$1</span>;
					<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$end</span><span id="braces">)</span> = <span id="var">$2</span>;
					<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$damaged</span><span id="braces">)</span> = <span id="var">$3</span>;
					<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$start</span> and <span id="perlFunc">defined</span> <span id="var">$end</span> <span id="braces">)</span> <span id="braces">{</span>
						<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$helix_report</span><span id="braces">)</span> = <span id="braces">{</span>
							<span id="sqStr">'start'</span>	=&gt; <span id="var">$start</span>,
							<span id="sqStr">'end'</span>	=&gt; <span id="var">$end</span>
						<span id="braces">}</span>;
						<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'num_tmh'</span><span id="braces">}</span>++;
						<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$damaged</span> =~ <span id="regExp">/damaged/</span> <span id="braces">)</span> <span id="braces">{</span>
							<span id="var">$helix_report</span>-&gt;<span id="braces">{</span><span id="sqStr">'damaged'</span><span id="braces">}</span> = 1;
							<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'num_damaged_tmh'</span><span id="braces">}</span>++;
						<span id="braces">}</span>
						<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$transmembrane_list</span><span id="braces">}</span>, <span id="var">$helix_report</span><span id="braces">)</span>;					
					<span id="braces">}</span>
				<span id="braces">}</span>
				<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'tmhs'</span><span id="braces">}</span> = <span id="var">$transmembrane_list</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$transmembrane_list</span><span id="braces">)</span>; 
	
				<span id="comment"># save result for each transcript</span><br />				<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> = <span id="var">$transcript_result</span>;			
			<span id="braces">}</span>
		<span id="braces">}</span>
		<span id="perlKey">else</span>
		<span id="braces">{</span>
			<span id="comment"># Init value to UNKNOW</span><br />			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> = <span id="sqStr">''</span>;
			<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'transmembrane_signal'</span><span id="braces">}</span> = <span id="var">$APPRIS</span>::<span id="module">Utils::Constant::UNKNOWN_LABEL</span>;
		<span id="braces">}</span>
	<span id="braces">}</span>
	<span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> = <span id="var">$result</span>;

	<span id="comment"># Create APPRIS object</span><br />	<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$transcript</span> <span id="braces">(</span>@<span id="braces">{</span><span id="var">$gene</span>-&gt;<span id="method">transcripts</span><span id="braces">}</span><span id="braces">)</span> <span id="braces">{</span>
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcript_id</span><span id="braces">)</span> = <span id="var">$transcript</span>-&gt;<span id="method">stable_id</span>;
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$analysis</span><span id="braces">)</span>;
		
		<span id="comment"># create method object</span><br />		<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">exists</span> <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span> and <span id="perlFunc">exists</span> <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="sqStr">'transmembrane_signal'</span><span id="braces">}</span> <span id="braces">)</span> <span id="braces">{</span>
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$report</span><span id="braces">)</span> = <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>;
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$regions</span><span id="braces">)</span>;
			<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$transcript</span>-&gt;<span id="method">translate</span> and <span id="var">$transcript</span>-&gt;<span id="method">translate</span>-&gt;<span id="method">cds</span> <span id="braces">)</span> <span id="braces">{</span>				
				<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">exists</span> <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'tmhs'</span><span id="braces">}</span> <span id="braces">)</span> <span id="braces">{</span>
					<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$strand</span><span id="braces">)</span> = <span id="var">$transcript</span>-&gt;<span id="method">strand</span>;
					<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$residue</span> <span id="braces">(</span>@<span id="braces">{</span><span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'tmhs'</span><span id="braces">}</span><span id="braces">}</span><span id="braces">)</span> <span id="braces">{</span>
						<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$pro_coord_start</span><span id="braces">)</span> = <span id="method">get_cds_from_residue</span><span id="braces">(</span><span id="var">$transcript</span>, <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'start'</span><span id="braces">}</span><span id="braces">)</span>;
						<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$pro_coord_end</span><span id="braces">)</span> = <span id="method">get_cds_from_residue</span><span id="braces">(</span><span id="var">$transcript</span>, <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'end'</span><span id="braces">}</span><span id="braces">)</span>;
						<span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'trans_strand'</span><span id="braces">}</span> = <span id="var">$strand</span>;
						<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$strand</span> <span id="perlKey">eq</span> <span id="sqStr">'-'</span> <span id="braces">)</span> <span id="braces">{</span>
							<span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'trans_end'</span><span id="braces">}</span> = <span id="var">$pro_coord_start</span>-&gt;<span id="braces">{</span><span id="sqStr">'start'</span><span id="braces">}</span>;                                                
							<span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'trans_start'</span><span id="braces">}</span> = <span id="var">$pro_coord_end</span>-&gt;<span id="braces">{</span><span id="sqStr">'end'</span><span id="braces">}</span>;                                              
						<span id="braces">}</span>
						<span id="perlKey">else</span> <span id="braces">{</span>
							<span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'trans_start'</span><span id="braces">}</span> = <span id="var">$pro_coord_start</span>-&gt;<span id="braces">{</span><span id="sqStr">'start'</span><span id="braces">}</span>;                                                
							<span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'trans_end'</span><span id="braces">}</span> = <span id="var">$pro_coord_end</span>-&gt;<span id="braces">{</span><span id="sqStr">'end'</span><span id="braces">}</span>;                                              
						<span id="braces">}</span>
		
						<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$region</span><span id="braces">)</span> = <span id="module"><a href="Analysis/THUMPRegion.html">APPRIS::Analysis::THUMPRegion</a></span>-&gt;<span id="perlKey">new</span> <span id="braces">(</span>
										-start								=&gt; <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'trans_start'</span><span id="braces">}</span>,
										-end								=&gt; <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'trans_end'</span><span id="braces">}</span>,
										-strand								=&gt; <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'trans_strand'</span><span id="braces">}</span>,						
										-pstart								=&gt; <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'start'</span><span id="braces">}</span>,					
										-pend								=&gt; <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'end'</span><span id="braces">}</span>,
										-damaged							=&gt; <span id="var">$residue</span>-&gt;<span id="braces">{</span><span id="sqStr">'damaged'</span><span id="braces">}</span>										
						<span id="braces">)</span>;
												
						<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$regions</span><span id="braces">}</span>, <span id="var">$region</span><span id="braces">)</span>;
					<span id="braces">}</span>
				<span id="braces">}</span>
				<span id="comment"># create Analysis object (for trans) Note: we only create an analysis object when trans has got translation 			</span><br />				<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method</span><span id="braces">)</span> = <span id="module"><a href="Analysis/THUMP.html">APPRIS::Analysis::THUMP</a></span>-&gt;<span id="perlKey">new</span> <span id="braces">(</span>
								-result							=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span>,
								-transmembrane_signal			=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'transmembrane_signal'</span><span id="braces">}</span>,
								-num_tmh						=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'num_tmh'</span><span id="braces">}</span>,
								-num_damaged_tmh				=&gt; <span id="var">$report</span>-&gt;<span id="braces">{</span><span id="sqStr">'num_damaged_tmh'</span><span id="braces">}</span>
				<span id="braces">)</span>;
				<span id="var">$method</span>-&gt;<span id="method">regions</span><span id="braces">(</span><span id="var">$regions</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$regions</span> and <span id="braces">(</span><span id="perlFunc">scalar</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$regions</span><span id="braces">}</span><span id="braces">)</span> &gt; 0<span id="braces">)</span> <span id="braces">)</span>;
				
				<span id="var">$analysis</span> = <span id="module"><a href="Analysis.html">APPRIS::Analysis</a></span>-&gt;<span id="perlKey">new</span><span id="braces">(</span><span id="braces">)</span>;
				<span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$method</span><span id="braces">)</span> <span id="braces">{</span>
					<span id="var">$analysis</span>-&gt;<span id="method">thump</span><span id="braces">(</span><span id="var">$method</span><span id="braces">)</span>;
					<span id="var">$analysis</span>-&gt;<span id="method">number</span><span id="braces">(</span><span id="var">$analysis</span>-&gt;<span id="method">number</span>+1<span id="braces">)</span>;
				<span id="braces">}</span>
			<span id="braces">}</span>
		<span id="braces">}</span>
				
		<span id="comment"># create Transcript object</span><br />		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcript</span><span id="braces">)</span> = <span id="module"><a href="Transcript.html">APPRIS::Transcript</a></span>-&gt;<span id="perlKey">new</span>
		<span id="braces">(</span>
			-stable_id	=&gt; <span id="var">$transcript_id</span>,
		<span id="braces">)</span>;
		<span id="var">$transcript</span>-&gt;<span id="method">analysis</span><span id="braces">(</span><span id="var">$analysis</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$analysis</span><span id="braces">)</span>;
		<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$transcripts</span><span id="braces">}</span>, <span id="var">$transcript</span><span id="braces">)</span>;
		<span id="var">$index_transcripts</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span> = <span id="var">$index</span>; <span id="var">$index</span>++; <span id="comment"># Index the list of transcripts</span><br />	<span id="braces">}</span>

	<span id="comment"># create Analysis object (for gene)</span><br />	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method2</span><span id="braces">)</span> = <span id="module"><a href="Analysis/THUMP.html">APPRIS::Analysis::THUMP</a></span>-&gt;<span id="perlKey">new</span><span id="braces">(</span> -result =&gt; <span id="var">$cutoffs</span>-&gt;<span id="braces">{</span><span id="sqStr">'result'</span><span id="braces">}</span> <span id="braces">)</span>;	
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$analysis2</span><span id="braces">)</span> = <span id="module"><a href="Analysis.html">APPRIS::Analysis</a></span>-&gt;<span id="perlKey">new</span><span id="braces">(</span><span id="braces">)</span>;
	<span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$method2</span><span id="braces">)</span> <span id="braces">{</span>
		<span id="var">$analysis2</span>-&gt;<span id="method">thump</span><span id="braces">(</span><span id="var">$method2</span><span id="braces">)</span>;
		<span id="var">$analysis2</span>-&gt;<span id="method">number</span><span id="braces">(</span><span id="var">$analysis2</span>-&gt;<span id="method">number</span>+1<span id="braces">)</span>;
	<span id="braces">}</span>
	
	<span id="comment"># create Gene object</span><br />	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$entity</span><span id="braces">)</span> = <span id="module"><a href="Gene.html">APPRIS::Gene</a></span>-&gt;<span id="perlKey">new</span><span id="braces">(</span> -stable_id =&gt; <span id="var">$stable_id</span> <span id="braces">)</span>;
	<span id="var">$entity</span>-&gt;<span id="method">transcripts</span><span id="braces">(</span><span id="var">$transcripts</span>, <span id="var">$index_transcripts</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$transcripts</span> and <span id="perlFunc">defined</span> <span id="var">$index_transcripts</span><span id="braces">)</span>;
	<span id="var">$entity</span>-&gt;<span id="method">analysis</span><span id="braces">(</span><span id="var">$analysis2</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$analysis2</span><span id="braces">)</span>;	

	<span id="perlKey">return</span> <span id="var">$entity</span>;</pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE36" id="CODE36"></a>parse_thump($$);</td><td >description</td><td ><a href="#CODE35">prev</a></td><td ><a href="#CODE37">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="subName">parse_thump($$);</span>
{<pre><span id="perlKey">sub</span> <span id="method">parse_appris</span><span id="braces">(</span>$$<span id="braces">)</span>;</pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE37" id="CODE37"></a>parser_appris_methods($$$$$$$$$$$$)</td><td >description</td><td ><a href="#CODE36">prev</a></td><td ><a href="#CODE38">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="subName">parser_appris_methods($$$$$$$$$$$$)</span>
{<pre>
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$gene</span>, <span id="var">$firestar_result</span>, <span id="var">$matador3d_result</span>, <span id="var">$spade_result</span>, <span id="var">$inertia_result</span>, <span id="var">$inertia_maf_result</span>, <span id="var">$inertia_prank_result</span>, <span id="var">$inertia_kalign_result</span>, <span id="var">$corsair_result</span>, <span id="var">$cexonic_result</span>, <span id="var">$crash_result</span>, <span id="var">$thump_result</span><span id="braces">)</span> = <span id="var">@_</span>;
	
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$stable_id</span><span id="braces">)</span> = <span id="var">$gene</span>-&gt;<span id="method">stable_id</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcripts</span><span id="braces">)</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$index_transcripts</span><span id="braces">)</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$index</span><span id="braces">)</span> = 0;
	
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$firestar</span><span id="braces">)</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$matador3d</span><span id="braces">)</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$spade</span><span id="braces">)</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$inertia</span><span id="braces">)</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$corsair</span><span id="braces">)</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$cexonic</span><span id="braces">)</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$crash</span><span id="braces">)</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$thump</span><span id="braces">)</span>;
	
	<span id="comment"># get the reports for every method</span><br />	<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$firestar_result</span> <span id="braces">)</span> <span id="braces">{</span>
		<span id="var">$firestar</span> = <span id="method">parse_firestar</span><span id="braces">(</span><span id="var">$gene</span>, <span id="var">$firestar_result</span><span id="braces">)</span>;
	<span id="braces">}</span>
	<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$matador3d_result</span> <span id="braces">)</span> <span id="braces">{</span>
		<span id="var">$matador3d</span> = <span id="method">parse_matador3d</span><span id="braces">(</span><span id="var">$gene</span>, <span id="var">$matador3d_result</span><span id="braces">)</span>;
	<span id="braces">}</span>
	<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$spade_result</span> <span id="braces">)</span> <span id="braces">{</span>
		<span id="var">$spade</span> = <span id="method">parse_spade</span><span id="braces">(</span><span id="var">$gene</span>, <span id="var">$spade_result</span><span id="braces">)</span>;
	<span id="braces">}</span>
	<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$inertia_result</span> <span id="braces">)</span> <span id="braces">{</span>
		<span id="var">$inertia</span> = <span id="method">parse_inertia</span><span id="braces">(</span><span id="var">$gene</span>, <span id="var">$inertia_result</span>, <span id="var">$inertia_maf_result</span>, <span id="var">$inertia_prank_result</span>, <span id="var">$inertia_kalign_result</span><span id="braces">)</span>; <span id="comment"># We only take into account the main file of results</span><br />	<span id="braces">}</span>
	<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$corsair_result</span> <span id="braces">)</span> <span id="braces">{</span>
		<span id="var">$corsair</span> = <span id="method">parse_corsair</span><span id="braces">(</span><span id="var">$gene</span>, <span id="var">$corsair_result</span><span id="braces">)</span>;
	<span id="braces">}</span>
	<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$cexonic_result</span> <span id="braces">)</span> <span id="braces">{</span>
		<span id="var">$cexonic</span> = <span id="method">parse_cexonic</span><span id="braces">(</span><span id="var">$gene</span>, <span id="var">$cexonic_result</span>, <span id="sqStr">''</span>, <span id="sqStr">''</span><span id="braces">)</span>; <span id="comment"># We only take into account the main file of results</span><br />	<span id="braces">}</span>
	<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$crash_result</span> <span id="braces">)</span> <span id="braces">{</span>
		<span id="var">$crash</span> = <span id="method">parse_crash</span><span id="braces">(</span><span id="var">$gene</span>, <span id="var">$crash_result</span><span id="braces">)</span>;
	<span id="braces">}</span>
	<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$thump_result</span> <span id="braces">)</span> <span id="braces">{</span>
		<span id="var">$thump</span> = <span id="method">parse_thump</span><span id="braces">(</span><span id="var">$gene</span>, <span id="var">$thump_result</span><span id="braces">)</span>;
	<span id="braces">}</span>

	<span id="comment"># get the results for each transcript</span><br />	<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$transcript</span> <span id="braces">(</span>@<span id="braces">{</span><span id="var">$gene</span>-&gt;<span id="method">transcripts</span><span id="braces">}</span><span id="braces">)</span> <span id="braces">{</span>			
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcript_id</span><span id="braces">)</span> = <span id="var">$transcript</span>-&gt;<span id="method">stable_id</span>;
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$index</span><span id="braces">)</span> = <span id="var">$gene</span>-&gt;<span id="braces">{</span><span id="sqStr">'_index_transcripts'</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span>;
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$analysis</span><span id="braces">)</span> = <span id="module"><a href="Analysis.html">APPRIS::Analysis</a></span>-&gt;<span id="perlKey">new</span><span id="braces">(</span><span id="braces">)</span>;		

		<span id="comment"># get firestar</span><br />		<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$firestar</span> and <span id="var">$firestar</span>-&gt;<span id="method">transcripts</span>-&gt;<span id="braces">[</span><span id="var">$index</span><span id="braces">]</span> and <span id="var">$firestar</span>-&gt;<span id="method">transcripts</span>-&gt;<span id="braces">[</span><span id="var">$index</span><span id="braces">]</span>-&gt;<span id="method">analysis</span> <span id="braces">)</span> <span id="braces">{</span>
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$result</span><span id="braces">)</span> = <span id="var">$firestar</span>-&gt;<span id="method">transcripts</span>-&gt;<span id="braces">[</span><span id="var">$index</span><span id="braces">]</span>;
			<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$result</span>-&gt;<span id="method">analysis</span>-&gt;<span id="method">firestar</span> <span id="braces">)</span> <span id="braces">{</span>
				<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method</span><span id="braces">)</span> = <span id="var">$result</span>-&gt;<span id="method">analysis</span>-&gt;<span id="method">firestar</span>;
				<span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$method</span><span id="braces">)</span> <span id="braces">{</span>
					<span id="var">$analysis</span>-&gt;<span id="method">firestar</span><span id="braces">(</span><span id="var">$method</span><span id="braces">)</span>;
					<span id="var">$analysis</span>-&gt;<span id="method">number</span><span id="braces">(</span><span id="var">$analysis</span>-&gt;<span id="method">number</span>+1<span id="braces">)</span>;
				<span id="braces">}</span>
			<span id="braces">}</span>			
		<span id="braces">}</span>			
		<span id="comment"># get matador3d</span><br />		<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$matador3d</span> and <span id="var">$matador3d</span>-&gt;<span id="method">transcripts</span>-&gt;<span id="braces">[</span><span id="var">$index</span><span id="braces">]</span> and <span id="var">$matador3d</span>-&gt;<span id="method">transcripts</span>-&gt;<span id="braces">[</span><span id="var">$index</span><span id="braces">]</span>-&gt;<span id="method">analysis</span> <span id="braces">)</span> <span id="braces">{</span>
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$result</span><span id="braces">)</span> = <span id="var">$matador3d</span>-&gt;<span id="method">transcripts</span>-&gt;<span id="braces">[</span><span id="var">$index</span><span id="braces">]</span>;
			<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$result</span>-&gt;<span id="method">analysis</span>-&gt;<span id="method">matador3d</span> <span id="braces">)</span> <span id="braces">{</span>
				<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method</span><span id="braces">)</span> = <span id="var">$result</span>-&gt;<span id="method">analysis</span>-&gt;<span id="method">matador3d</span>;
				<span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$method</span><span id="braces">)</span> <span id="braces">{</span>
					<span id="var">$analysis</span>-&gt;<span id="method">matador3d</span><span id="braces">(</span><span id="var">$method</span><span id="braces">)</span>;
					<span id="var">$analysis</span>-&gt;<span id="method">number</span><span id="braces">(</span><span id="var">$analysis</span>-&gt;<span id="method">number</span>+1<span id="braces">)</span>;
				<span id="braces">}</span>
			<span id="braces">}</span>			
		<span id="braces">}</span>
		<span id="comment"># get spade</span><br />		<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$spade</span> and <span id="var">$spade</span>-&gt;<span id="method">transcripts</span>-&gt;<span id="braces">[</span><span id="var">$index</span><span id="braces">]</span> and <span id="var">$spade</span>-&gt;<span id="method">transcripts</span>-&gt;<span id="braces">[</span><span id="var">$index</span><span id="braces">]</span>-&gt;<span id="method">analysis</span> <span id="braces">)</span> <span id="braces">{</span>
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$result</span><span id="braces">)</span> = <span id="var">$spade</span>-&gt;<span id="method">transcripts</span>-&gt;<span id="braces">[</span><span id="var">$index</span><span id="braces">]</span>;
			<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$result</span>-&gt;<span id="method">analysis</span>-&gt;<span id="method">spade</span> <span id="braces">)</span> <span id="braces">{</span>
				<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method</span><span id="braces">)</span> = <span id="var">$result</span>-&gt;<span id="method">analysis</span>-&gt;<span id="method">spade</span>;
				<span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$method</span><span id="braces">)</span> <span id="braces">{</span>
					<span id="var">$analysis</span>-&gt;<span id="method">spade</span><span id="braces">(</span><span id="var">$method</span><span id="braces">)</span>;
					<span id="var">$analysis</span>-&gt;<span id="method">number</span><span id="braces">(</span><span id="var">$analysis</span>-&gt;<span id="method">number</span>+1<span id="braces">)</span>;
				<span id="braces">}</span>
			<span id="braces">}</span>			
		<span id="braces">}</span>
		<span id="comment"># get inertia</span><br />		<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$inertia</span> and <span id="var">$inertia</span>-&gt;<span id="method">transcripts</span>-&gt;<span id="braces">[</span><span id="var">$index</span><span id="braces">]</span> and <span id="var">$inertia</span>-&gt;<span id="method">transcripts</span>-&gt;<span id="braces">[</span><span id="var">$index</span><span id="braces">]</span>-&gt;<span id="method">analysis</span> <span id="braces">)</span> <span id="braces">{</span>
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$result</span><span id="braces">)</span> = <span id="var">$inertia</span>-&gt;<span id="method">transcripts</span>-&gt;<span id="braces">[</span><span id="var">$index</span><span id="braces">]</span>;
			<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$result</span>-&gt;<span id="method">analysis</span>-&gt;<span id="method">inertia</span> <span id="braces">)</span> <span id="braces">{</span>
				<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method</span><span id="braces">)</span> = <span id="var">$result</span>-&gt;<span id="method">analysis</span>-&gt;<span id="method">inertia</span>;
				<span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$method</span><span id="braces">)</span> <span id="braces">{</span>
					<span id="var">$analysis</span>-&gt;<span id="method">inertia</span><span id="braces">(</span><span id="var">$method</span><span id="braces">)</span>;
					<span id="var">$analysis</span>-&gt;<span id="method">number</span><span id="braces">(</span><span id="var">$analysis</span>-&gt;<span id="method">number</span>+1<span id="braces">)</span>;
				<span id="braces">}</span>
			<span id="braces">}</span>			
		<span id="braces">}</span>
		<span id="comment"># get corsair</span><br />		<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$corsair</span> and <span id="var">$corsair</span>-&gt;<span id="method">transcripts</span>-&gt;<span id="braces">[</span><span id="var">$index</span><span id="braces">]</span> and <span id="var">$corsair</span>-&gt;<span id="method">transcripts</span>-&gt;<span id="braces">[</span><span id="var">$index</span><span id="braces">]</span>-&gt;<span id="method">analysis</span> <span id="braces">)</span> <span id="braces">{</span>
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$result</span><span id="braces">)</span> = <span id="var">$corsair</span>-&gt;<span id="method">transcripts</span>-&gt;<span id="braces">[</span><span id="var">$index</span><span id="braces">]</span>;
			<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$result</span>-&gt;<span id="method">analysis</span>-&gt;<span id="method">corsair</span> <span id="braces">)</span> <span id="braces">{</span>
				<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method</span><span id="braces">)</span> = <span id="var">$result</span>-&gt;<span id="method">analysis</span>-&gt;<span id="method">corsair</span>;
				<span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$method</span><span id="braces">)</span> <span id="braces">{</span>
					<span id="var">$analysis</span>-&gt;<span id="method">corsair</span><span id="braces">(</span><span id="var">$method</span><span id="braces">)</span>;
					<span id="var">$analysis</span>-&gt;<span id="method">number</span><span id="braces">(</span><span id="var">$analysis</span>-&gt;<span id="method">number</span>+1<span id="braces">)</span>;
				<span id="braces">}</span>
			<span id="braces">}</span>			
		<span id="braces">}</span>
		<span id="comment"># get cexonic</span><br />		<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$cexonic</span> and <span id="var">$cexonic</span>-&gt;<span id="method">transcripts</span>-&gt;<span id="braces">[</span><span id="var">$index</span><span id="braces">]</span> and <span id="var">$cexonic</span>-&gt;<span id="method">transcripts</span>-&gt;<span id="braces">[</span><span id="var">$index</span><span id="braces">]</span>-&gt;<span id="method">analysis</span> <span id="braces">)</span> <span id="braces">{</span>
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$result</span><span id="braces">)</span> = <span id="var">$cexonic</span>-&gt;<span id="method">transcripts</span>-&gt;<span id="braces">[</span><span id="var">$index</span><span id="braces">]</span>;
			<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$result</span>-&gt;<span id="method">analysis</span>-&gt;<span id="method">cexonic</span> <span id="braces">)</span> <span id="braces">{</span>
				<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method</span><span id="braces">)</span> = <span id="var">$result</span>-&gt;<span id="method">analysis</span>-&gt;<span id="method">cexonic</span>;
				<span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$method</span><span id="braces">)</span> <span id="braces">{</span>
					<span id="var">$analysis</span>-&gt;<span id="method">cexonic</span><span id="braces">(</span><span id="var">$method</span><span id="braces">)</span>;
					<span id="var">$analysis</span>-&gt;<span id="method">number</span><span id="braces">(</span><span id="var">$analysis</span>-&gt;<span id="method">number</span>+1<span id="braces">)</span>;
				<span id="braces">}</span>
			<span id="braces">}</span>			
		<span id="braces">}</span>
		<span id="comment"># get crash</span><br />		<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$crash</span> and <span id="var">$crash</span>-&gt;<span id="method">transcripts</span>-&gt;<span id="braces">[</span><span id="var">$index</span><span id="braces">]</span> and <span id="var">$crash</span>-&gt;<span id="method">transcripts</span>-&gt;<span id="braces">[</span><span id="var">$index</span><span id="braces">]</span>-&gt;<span id="method">analysis</span> <span id="braces">)</span> <span id="braces">{</span>
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$result</span><span id="braces">)</span> = <span id="var">$crash</span>-&gt;<span id="method">transcripts</span>-&gt;<span id="braces">[</span><span id="var">$index</span><span id="braces">]</span>;
			<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$result</span>-&gt;<span id="method">analysis</span>-&gt;<span id="method">crash</span> <span id="braces">)</span> <span id="braces">{</span>
				<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method</span><span id="braces">)</span> = <span id="var">$result</span>-&gt;<span id="method">analysis</span>-&gt;<span id="method">crash</span>;
				<span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$method</span><span id="braces">)</span> <span id="braces">{</span>
					<span id="var">$analysis</span>-&gt;<span id="method">crash</span><span id="braces">(</span><span id="var">$method</span><span id="braces">)</span>;
					<span id="var">$analysis</span>-&gt;<span id="method">number</span><span id="braces">(</span><span id="var">$analysis</span>-&gt;<span id="method">number</span>+1<span id="braces">)</span>;
				<span id="braces">}</span>
			<span id="braces">}</span>			
		<span id="braces">}</span>
		<span id="comment"># get thump</span><br />		<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$thump</span> and <span id="var">$thump</span>-&gt;<span id="method">transcripts</span>-&gt;<span id="braces">[</span><span id="var">$index</span><span id="braces">]</span> and <span id="var">$thump</span>-&gt;<span id="method">transcripts</span>-&gt;<span id="braces">[</span><span id="var">$index</span><span id="braces">]</span>-&gt;<span id="method">analysis</span> <span id="braces">)</span> <span id="braces">{</span>
			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$result</span><span id="braces">)</span> = <span id="var">$thump</span>-&gt;<span id="method">transcripts</span>-&gt;<span id="braces">[</span><span id="var">$index</span><span id="braces">]</span>;
			<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$result</span>-&gt;<span id="method">analysis</span>-&gt;<span id="method">thump</span> <span id="braces">)</span> <span id="braces">{</span>
				<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method</span><span id="braces">)</span> = <span id="var">$result</span>-&gt;<span id="method">analysis</span>-&gt;<span id="method">thump</span>;
				<span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$method</span><span id="braces">)</span> <span id="braces">{</span>
					<span id="var">$analysis</span>-&gt;<span id="method">thump</span><span id="braces">(</span><span id="var">$method</span><span id="braces">)</span>;
					<span id="var">$analysis</span>-&gt;<span id="method">number</span><span id="braces">(</span><span id="var">$analysis</span>-&gt;<span id="method">number</span>+1<span id="braces">)</span>;
				<span id="braces">}</span>
			<span id="braces">}</span>			
		<span id="braces">}</span>
						
		<span id="comment"># create object</span><br />		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$transcript</span><span id="braces">)</span> = <span id="module"><a href="Transcript.html">APPRIS::Transcript</a></span>-&gt;<span id="perlKey">new</span>
		<span id="braces">(</span>
			-stable_id	=&gt; <span id="var">$transcript_id</span>,
		<span id="braces">)</span>;
		<span id="var">$transcript</span>-&gt;<span id="method">analysis</span><span id="braces">(</span><span id="var">$analysis</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$analysis</span><span id="braces">)</span>;
		<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$transcripts</span><span id="braces">}</span>, <span id="var">$transcript</span><span id="braces">)</span>;
		<span id="var">$index_transcripts</span>-&gt;<span id="braces">{</span><span id="var">$transcript_id</span><span id="braces">}</span> = <span id="var">$index</span>; <span id="var">$index</span>++; <span id="comment"># Index the list of transcripts		</span><br />	<span id="braces">}</span>
	
	<span id="comment"># get the results for gene</span><br />	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$analysis2</span><span id="braces">)</span> = <span id="module"><a href="Analysis.html">APPRIS::Analysis</a></span>-&gt;<span id="perlKey">new</span><span id="braces">(</span><span id="braces">)</span>;
	
	<span id="comment"># get firestar</span><br />	<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$firestar</span> and <span id="var">$firestar</span>-&gt;<span id="method">analysis</span> and <span id="var">$firestar</span>-&gt;<span id="method">analysis</span>-&gt;<span id="method">firestar</span> <span id="braces">)</span> <span id="braces">{</span>
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method2</span><span id="braces">)</span> = <span id="var">$firestar</span>-&gt;<span id="method">analysis</span>-&gt;<span id="method">firestar</span>;
		<span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$method2</span><span id="braces">)</span> <span id="braces">{</span>
			<span id="var">$analysis2</span>-&gt;<span id="method">firestar</span><span id="braces">(</span><span id="var">$method2</span><span id="braces">)</span>;
			<span id="var">$analysis2</span>-&gt;<span id="method">number</span><span id="braces">(</span><span id="var">$analysis2</span>-&gt;<span id="method">number</span>+1<span id="braces">)</span>;
		<span id="braces">}</span>			
	<span id="braces">}</span>
	<span id="comment"># get matador3d</span><br />	<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$matador3d</span> and <span id="var">$matador3d</span>-&gt;<span id="method">analysis</span> and <span id="var">$matador3d</span>-&gt;<span id="method">analysis</span>-&gt;<span id="method">matador3d</span> <span id="braces">)</span> <span id="braces">{</span>
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method2</span><span id="braces">)</span> = <span id="var">$matador3d</span>-&gt;<span id="method">analysis</span>-&gt;<span id="method">matador3d</span>;
		<span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$method2</span><span id="braces">)</span> <span id="braces">{</span>
			<span id="var">$analysis2</span>-&gt;<span id="method">matador3d</span><span id="braces">(</span><span id="var">$method2</span><span id="braces">)</span>;
			<span id="var">$analysis2</span>-&gt;<span id="method">number</span><span id="braces">(</span><span id="var">$analysis2</span>-&gt;<span id="method">number</span>+1<span id="braces">)</span>;
		<span id="braces">}</span>
	<span id="braces">}</span>
	<span id="comment"># get spade</span><br />	<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$spade</span> and <span id="var">$spade</span>-&gt;<span id="method">analysis</span> and <span id="var">$spade</span>-&gt;<span id="method">analysis</span>-&gt;<span id="method">spade</span> <span id="braces">)</span> <span id="braces">{</span>
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method2</span><span id="braces">)</span> = <span id="var">$spade</span>-&gt;<span id="method">analysis</span>-&gt;<span id="method">spade</span>;
		<span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$method2</span><span id="braces">)</span> <span id="braces">{</span>
			<span id="var">$analysis2</span>-&gt;<span id="method">spade</span><span id="braces">(</span><span id="var">$method2</span><span id="braces">)</span>;
			<span id="var">$analysis2</span>-&gt;<span id="method">number</span><span id="braces">(</span><span id="var">$analysis2</span>-&gt;<span id="method">number</span>+1<span id="braces">)</span>;
		<span id="braces">}</span>
	<span id="braces">}</span>
	<span id="comment"># get inertia</span><br />	<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$inertia</span> and <span id="var">$inertia</span>-&gt;<span id="method">analysis</span> and <span id="var">$inertia</span>-&gt;<span id="method">analysis</span>-&gt;<span id="method">inertia</span> <span id="braces">)</span> <span id="braces">{</span>
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method2</span><span id="braces">)</span> = <span id="var">$inertia</span>-&gt;<span id="method">analysis</span>-&gt;<span id="method">inertia</span>;
		<span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$method2</span><span id="braces">)</span> <span id="braces">{</span>
			<span id="var">$analysis2</span>-&gt;<span id="method">inertia</span><span id="braces">(</span><span id="var">$method2</span><span id="braces">)</span>;
			<span id="var">$analysis2</span>-&gt;<span id="method">number</span><span id="braces">(</span><span id="var">$analysis2</span>-&gt;<span id="method">number</span>+1<span id="braces">)</span>;
		<span id="braces">}</span>
	<span id="braces">}</span>
	<span id="comment"># get corsair</span><br />	<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$corsair</span> and <span id="var">$corsair</span>-&gt;<span id="method">analysis</span> and <span id="var">$corsair</span>-&gt;<span id="method">analysis</span>-&gt;<span id="method">corsair</span> <span id="braces">)</span> <span id="braces">{</span>
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method2</span><span id="braces">)</span> = <span id="var">$corsair</span>-&gt;<span id="method">analysis</span>-&gt;<span id="method">corsair</span>;
		<span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$method2</span><span id="braces">)</span> <span id="braces">{</span>
			<span id="var">$analysis2</span>-&gt;<span id="method">corsair</span><span id="braces">(</span><span id="var">$method2</span><span id="braces">)</span>;
			<span id="var">$analysis2</span>-&gt;<span id="method">number</span><span id="braces">(</span><span id="var">$analysis2</span>-&gt;<span id="method">number</span>+1<span id="braces">)</span>;
		<span id="braces">}</span>
	<span id="braces">}</span>
	<span id="comment"># get cexonic</span><br />	<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$cexonic</span> and <span id="var">$cexonic</span>-&gt;<span id="method">analysis</span> and <span id="var">$cexonic</span>-&gt;<span id="method">analysis</span>-&gt;<span id="method">cexonic</span> <span id="braces">)</span> <span id="braces">{</span>
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method2</span><span id="braces">)</span> = <span id="var">$cexonic</span>-&gt;<span id="method">analysis</span>-&gt;<span id="method">cexonic</span>;
		<span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$method2</span><span id="braces">)</span> <span id="braces">{</span>
			<span id="var">$analysis2</span>-&gt;<span id="method">cexonic</span><span id="braces">(</span><span id="var">$method2</span><span id="braces">)</span>;
			<span id="var">$analysis2</span>-&gt;<span id="method">number</span><span id="braces">(</span><span id="var">$analysis2</span>-&gt;<span id="method">number</span>+1<span id="braces">)</span>;
		<span id="braces">}</span>
	<span id="braces">}</span>	
	<span id="comment"># get crash</span><br />	<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$crash</span> and <span id="var">$crash</span>-&gt;<span id="method">analysis</span> and <span id="var">$crash</span>-&gt;<span id="method">analysis</span>-&gt;<span id="method">crash</span> <span id="braces">)</span> <span id="braces">{</span>
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method2</span><span id="braces">)</span> = <span id="var">$crash</span>-&gt;<span id="method">analysis</span>-&gt;<span id="method">crash</span>;
		<span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$method2</span><span id="braces">)</span> <span id="braces">{</span>
			<span id="var">$analysis2</span>-&gt;<span id="method">crash</span><span id="braces">(</span><span id="var">$method2</span><span id="braces">)</span>;
			<span id="var">$analysis2</span>-&gt;<span id="method">number</span><span id="braces">(</span><span id="var">$analysis2</span>-&gt;<span id="method">number</span>+1<span id="braces">)</span>;
		<span id="braces">}</span>
	<span id="braces">}</span>
	<span id="comment"># get thump</span><br />	<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$thump</span> and <span id="var">$thump</span>-&gt;<span id="method">analysis</span> and <span id="var">$thump</span>-&gt;<span id="method">analysis</span>-&gt;<span id="method">thump</span> <span id="braces">)</span> <span id="braces">{</span>
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method2</span><span id="braces">)</span> = <span id="var">$thump</span>-&gt;<span id="method">analysis</span>-&gt;<span id="method">thump</span>;
		<span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$method2</span><span id="braces">)</span> <span id="braces">{</span>
			<span id="var">$analysis2</span>-&gt;<span id="method">thump</span><span id="braces">(</span><span id="var">$method2</span><span id="braces">)</span>;
			<span id="var">$analysis2</span>-&gt;<span id="method">number</span><span id="braces">(</span><span id="var">$analysis2</span>-&gt;<span id="method">number</span>+1<span id="braces">)</span>;
		<span id="braces">}</span>
	<span id="braces">}</span>	
	
	<span id="comment"># create object</span><br />	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$entity</span><span id="braces">)</span> = <span id="module"><a href="Gene.html">APPRIS::Gene</a></span>-&gt;<span id="perlKey">new</span><span id="braces">(</span> -stable_id =&gt; <span id="var">$stable_id</span> <span id="braces">)</span>;
	<span id="var">$entity</span>-&gt;<span id="method">transcripts</span><span id="braces">(</span><span id="var">$transcripts</span>, <span id="var">$index_transcripts</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$transcripts</span> and <span id="perlFunc">defined</span> <span id="var">$index_transcripts</span><span id="braces">)</span>;
	<span id="var">$entity</span>-&gt;<span id="method">analysis</span><span id="braces">(</span><span id="var">$analysis2</span><span id="braces">)</span> <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">defined</span> <span id="var">$analysis2</span><span id="braces">)</span>;	
	
	<span id="perlKey">return</span> <span id="var">$entity</span>;</pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE38" id="CODE38"></a>parser_appris_methods($$$$$$$$$$$$);</td><td >description</td><td ><a href="#CODE37">prev</a></td><td >next</td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="subName">parser_appris_methods($$$$$$$$$$$$);</span>
{<pre><span id="perlKey">sub</span> <span id="method">parse_firestar_gopher</span><span id="braces">(</span>$<span id="braces">)</span>;</pre>}</td></div>
<div id="sep"></div>
<a name="General" id="General"></a>
<div id="mainTitle">General documentation</div>
<div id="sep"></div>
<table id="genInfoTitle" width="100%"><tr><td><a name="_pod_CONTACT" id="_pod_CONTACT"></a>CONTACT</td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="genInfoArea"><pre id="podParagraph">  Please email comments or questions to the public INB
  developers list at <<a href="mailto:inb-tecnico@lists.cnio.es" id="podEmail">inb-tecnico@lists.cnio.es</a>&gt;.<br />
  Questions may also be sent to the developer, 
  Jose Manuel Rodriguez <<a href="mailto:jmrodriguez@cnio.es" id="podEmail">jmrodriguez@cnio.es</a>&gt;.</pre></div>
<div id="sep"></div>
<table id="genInfoTitle" width="100%"><tr><td><a name="_pod_parse_gencode" id="_pod_parse_gencode"></a>parse_gencode</td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="genInfoArea"><pre id="podParagraph">  Arg [1]    : string $data_file
               File of gencode data as GTF format
  Arg [2]    : string $transc_file (optional)
               File of gencode transcript sequence as Fasta format
  Arg [3]    : string $transl_file (optional)
               File of gencode translation sequence as Fasta format
  Example    : use <B>APPRIS::Parser</B> qw(parse_gencode);
               parse_gencode($data_file, $transc_file, $transl_file);
  Description: Parse data of gencode.
  Returntype : Listref of APPRIS::Gene or undef
  Exceptions : return undef
  Caller     : generally on error</pre></div>
<div id="sep"></div>
<table id="genInfoTitle" width="100%"><tr><td><a name="_pod_parse_firestar" id="_pod_parse_firestar"></a>parse_firestar</td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="genInfoArea"><pre id="podParagraph">  Arg [1]    : APPRIS::Gene $gene 
               APPRIS::Gene object
  Arg [2]    : string $result
               Parse firestar result
  Example    : use <B>APPRIS::Parser</B> qw(parse_firestar);
               parse_firestar($result);
  Description: Parse output of firestar.
  Returntype : APPRIS::Gene or undef
  Exceptions : return undef
  Caller     : generally on error</pre></div>
<div id="sep"></div>
<table id="genInfoTitle" width="100%"><tr><td><a name="_pod_parse_matador3d" id="_pod_parse_matador3d"></a>parse_matador3d</td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="genInfoArea"><pre id="podParagraph">  Arg [1]    : APPRIS::Gene $gene 
               APPRIS::Gene object
  Arg [2]    : string $result
               Parse matador3d result
  Example    : use <B>APPRIS::Parser</B> qw(parse_matador3d);
               parse_matador3d($result);
  Description: Parse output of matador3d.
  Returntype : APPRIS::Gene or undef
  Exceptions : return undef
  Caller     : generally on error</pre></div>
<div id="sep"></div>
<table id="genInfoTitle" width="100%"><tr><td><a name="_pod_parse_spade" id="_pod_parse_spade"></a>parse_spade</td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="genInfoArea"><pre id="podParagraph">  Arg [1]    : APPRIS::Gene $gene 
               APPRIS::Gene object
  Arg [2]    : string $result
               Parse spade result
  Example    : use <B>APPRIS::Parser</B> qw(parse_spade);
               parse_spade($result);
  Description: Parse output of spade.
  Returntype : APPRIS::Gene or undef
  Exceptions : return undef
  Caller     : generally on error</pre></div>
<div id="sep"></div>
<table id="genInfoTitle" width="100%"><tr><td><a name="_pod_parse_inertia" id="_pod_parse_inertia"></a>parse_inertia</td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="genInfoArea"><pre id="podParagraph">  Arg [1]    : String $id 
               The stable ID of the gene to retrieve
  Arg [2]    : string $inertia
               INERTIA result
  Arg [3]    : string $mafft
               MAFFT Omega result
  Arg [4]    : string $prank
               Prank Omega result
  Arg [5]    : string $kalign
               Kalign Omega result
  Example    : use <B>APPRIS::Parser</B> qw(parse_inertia);
               parse_inertia($id, $mafft, $prank, $kalign);
  Description: Parse the output of inertia.
  Returntype : APPRIS::Gene or undef
  Exceptions : return undef
  Caller     : generally on error</pre></div>
<div id="sep"></div>
<table id="genInfoTitle" width="100%"><tr><td><a name="_pod_parse_corsair" id="_pod_parse_corsair"></a>parse_corsair</td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="genInfoArea"><pre id="podParagraph">  Arg [1]    : APPRIS::Gene $gene 
               APPRIS::Gene object
  Arg [2]    : string $result
               Parse corsair result
  Example    : use <B>APPRIS::Parser</B> qw(parse_corsair);
               parse_corsair($result);
  Description: Parse output of corsair.
  Returntype : APPRIS::Gene or undef
  Exceptions : return undef
  Caller     : generally on error</pre></div>
<div id="sep"></div>
<table id="genInfoTitle" width="100%"><tr><td><a name="_pod_parse_cexonic" id="_pod_parse_cexonic"></a>parse_cexonic</td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="genInfoArea"><pre id="podParagraph">  Arg [1]    : APPRIS::Gene $gene 
               APPRIS::Gene object
  Arg [2]    : string $result
               Parse cexonic result
  Example    : use <B>APPRIS::Parser</B> qw(parse_cexonic);
               parse_cexonic($result);
  Description: Parse output of cexonic.
  Returntype : APPRIS::Gene or undef
  Exceptions : return undef
  Caller     : generally on error</pre></div>
<div id="sep"></div>
<table id="genInfoTitle" width="100%"><tr><td><a name="_pod_parse_crash" id="_pod_parse_crash"></a>parse_crash</td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="genInfoArea"><pre id="podParagraph">  Arg [1]    : APPRIS::Gene $gene 
               APPRIS::Gene object
  Arg [2]    : string $result
               Parse crash result
  Example    : use <B>APPRIS::Parser</B> qw(parse_crash);
               parse_crash($result);
  Description: Parse output of crash.
  Returntype : APPRIS::Gene or undef
  Exceptions : return undef
  Caller     : generally on error</pre></div>
<div id="sep"></div>
<table id="genInfoTitle" width="100%"><tr><td><a name="_pod_parse_thump" id="_pod_parse_thump"></a>parse_thump</td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="genInfoArea"><pre id="podParagraph">  Arg [1]    : APPRIS::Gene $gene 
               APPRIS::Gene object
  Arg [2]    : string $result
               Parse thump result
  Example    : use <B>APPRIS::Parser</B> qw(parse_thump);
               parse_thump($result);
  Description: Parse output of thump.
  Returntype : APPRIS::Gene or undef
  Exceptions : return undef
  Caller     : generally on error</pre></div>
<div id="sep"></div>
<table id="genInfoTitle" width="100%"><tr><td><a name="_pod_parser_appris_methods" id="_pod_parser_appris_methods"></a>parser_appris_methods</td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="genInfoArea"><pre id="podParagraph">  Arg [1]    : APPRIS::Gene $gene 
               APPRIS::Gene object
  Arg [2]    : string $result
               Parse firestar result
  Arg [3]    : string $result
               Parse matador3d result
  Arg [4]    : string $result
               Parse spade result
  Arg [5]    : string $result
               Parse inertia result
  Arg [6]    : string $result
               Parse inertia_maf result
  Arg [7]    : string $result
               Parse inertia_prank result
  Arg [8]    : string $result
               Parse inertia_kalign result
  Arg [9]    : string $result
               Parse corsair result
  Arg [10]    : string $result
               Parse cexonic result
  Arg [11]    : string $result
               Parse crash result
  Arg [12]    : string $result
               Parse thump result
  Example    : use <B>APPRIS::Parser</B> qw(parser_appris_methods);
               parser_appris_methods([$results]);
  Description: Parse output of methods of appris.
  Returntype : APPRIS::Gene or undef
  Exceptions : return undef
  Caller     : generally on error</pre></div>
<div id="sep"></div>
<table id="genInfoTitle" width="100%"><tr><td><a name="_pod_parse_appris" id="_pod_parse_appris"></a>parse_appris</td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="genInfoArea"><pre id="podParagraph">  Arg [1]    : APPRIS::Gene $gene 
               APPRIS::Gene object
  Arg [2]    : string $result
               Parse matador3d result
  Example    : use <B>APPRIS::Parser</B> qw(parse_appris);
               parse_appris($result);
  Description: Parse output of matador3d.
  Returntype : APPRIS::Gene or undef
  Exceptions : return undef
  Caller     : generally on error</pre></div>
<div id="sep"></div>
<table id="genInfoTitle" width="100%"><tr><td><a name="_pod_parse_firestar_gopher" id="_pod_parse_firestar_gopher"></a>parse_firestar_gopher</td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="genInfoArea"><pre id="podParagraph">  Arg [1]    : string $result
               Parse firestar result
  Example    : use <B>APPRIS::Parser</B> qw(parse_firestar);
               parse_firestar($result);
  Description: Execute MOBY web services of firestar.
  Returntype : Listref of APPRIS::Transcript or undef
  Exceptions : return undef
  Caller     : generally on error</pre></div>
<div id="sep"></div>
</body>
</html>
