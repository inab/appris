<head>
<!-- Generated by perlmod2www.pl -->
<title>
RES documentation.
</title>
<link rel="stylesheet" type="text/css" href="../perl.css">
</head>
<body bgcolor="white">
<span id="modRootPath">APPRIS::Export</span>
<span id="modName">RES</span>
<div id="sep"></div>
<a name="TOP" id="TOP"></a>
<table id="daArea" width="100%"><tr><td id="daEntry" ><a href="#SUMMARY">Summary</a></td><td id="daEntry" ><a href="#vardefs">Package variables</a></td><td id="daEntry" ><a href="#SYNOPSIS">Synopsis</a></td><td id="daEntry" ><a href="#DESCRIPTION">Description</a></td><td id="daEntry" ><a href="#General">General documentation</a></td><td id="daEntry" ><a href="#Methods">Methods</a></td></tr></table>
<div id="sep"></div>
<div id="descTitle">Summary</div>
<div id="descArea"><B>APPRIS::Export::RES</B> - Utility functions for info exporting</div>
<div id="sep"></div>
<a name="vardefs" id="vardefs"></a><div id="descTitle">Package variables</div>
<div id="descArea"><div id="libEntry"><div id="descSubTitle">Privates (from <b>"my"</b> definitions)</div>
</div>
<div id="libEntry"><span id="braces">(</span><span id="var">$OK_LABEL</span><span id="braces">)</span> = <span id="var">$APPRIS</span>::Utils::Constant::OK_LABEL</div>
<div id="libEntry"><span id="braces">(</span><span id="var">$METHOD_DESC</span><span id="braces">)</span> = <span id="var">$APPRIS</span>::Utils::Constant::METHOD_DESC</div>
</div>
<div id="sep"></div>
<div id="descTitle">Included modules</div>
<div id="descArea"><div id="libEntry"><span id="use"><a href="../Utils/Constant.html">APPRIS::Utils::Constant</a></span> qw ( $OK_LABEL $METHOD_DESC ) </div>
<div id="libEntry"><span id="use"><a href="../Utils/Exception.html">APPRIS::Utils::Exception</a></span> qw ( throw warning deprecate ) </div>
<div id="libEntry"><span id="use">Bio::Seq</span> </div>
<div id="libEntry"><span id="use">Bio::SeqIO</span> </div>
<div id="libEntry"><span id="use">Data::Dumper</span> </div>
</div>
<div id="sep"></div>
<a name="SYNOPSIS" id="SYNOPSIS"></a>
<div id="descTitle">Synopsis</div>
<div id="descArea"><pre id="podParagraph">  use APPRIS::Export::RES
    qw(
       get_trans_residues
     );

  or to get all methods just

  use APPRIS::Export::RES;

  eval { get_trans_residues($feature,$params) };
  if ($@) {
    print "Caught exception:\n$@";
  }</pre>
</div>
<div id="sep"></div>
<a name="DESCRIPTION" id="DESCRIPTION"></a>
<div id="descTitle">Description</div>
<div id="descArea">Retrieves sequences of transcript as fasta format.
</div>
<div id="sep"></div>
<a name="Methods" id="Methods"></a>
<div id="descTitle">Methods</div>
<table id="methIndArea" width="100%" cellspacing="0"><tr><td id="methIndEntry">get_trans_residues</td><td id="methIndEntry"><a href="#POD1">Description</a></td><td id="methIndEntry"><a href="#CODE1">Code</a></td></tr>
<tr><td id="methIndEntry">parser_crash_residues</td><td id="methIndEntry"><div id="error">No description</div></td><td id="methIndEntry"><a href="#CODE2">Code</a></td></tr>
<tr><td id="methIndEntry">parser_firestar_residues</td><td id="methIndEntry"><div id="error">No description</div></td><td id="methIndEntry"><a href="#CODE3">Code</a></td></tr>
<tr><td id="methIndEntry">parser_matador3d_residues</td><td id="methIndEntry"><div id="error">No description</div></td><td id="methIndEntry"><a href="#CODE4">Code</a></td></tr>
<tr><td id="methIndEntry">parser_spade_residues</td><td id="methIndEntry"><div id="error">No description</div></td><td id="methIndEntry"><a href="#CODE5">Code</a></td></tr>
<tr><td id="methIndEntry">parser_thump_residues</td><td id="methIndEntry"><div id="error">No description</div></td><td id="methIndEntry"><a href="#CODE6">Code</a></td></tr>
</table>
<div id="sep"></div>
<a name="MethDesc" id="MethDesc"></a>
<div id="mainTitle">Methods description</div>
<div id="sep"></div>
<table id="methDescTitle" width="100%"><tr><td WIDTH="200"><a name="_pod_get_trans_residues" id="_pod_get_trans_residues"></a><a name="POD1" id="POD1"></a>get_trans_residues</td><td ><a href="#CODE1">code</a></td><td >&nbsp;&nbsp;&nbsp;&nbsp;</td><td ><a href="#POD2">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<table id="methDescArea" width="100%"><tr><td><pre id="podParagraph">  Arg [1]    : Listref of APPRIS::Gene or APPRIS::Transcript or undef
  Example    : $annot = $exporter->get_trans_residues($feature,'aa');
  Description: Retrieves nucleotide o aminoacid sequence.
  Returntype : String or undef</pre></td></tr></table>
<div id="sep"></div>
<a name="MethCode" id="MethCode"></a>
<div id="mainTitle">Methods code</div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE1" id="CODE1"></a>get_trans_residues</td><td ><a href="#POD1">description</a></td><td >prev</td><td ><a href="#CODE2">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="subName">get_trans_residues</span>
{<pre>    <span id="perlKey">my</span> <span id="braces">(</span><span id="var">$feature</span><span id="braces">)</span> = <span id="var">@_</span>;
    <span id="perlKey">my</span> <span id="braces">(</span><span id="var">$report</span><span id="braces">)</span>;
	
    <span id="perlKey">if</span> <span id="braces">(</span><span id="perlFunc">ref</span><span id="braces">(</span><span id="var">$feature</span><span id="braces">)</span> and <span id="var">$feature</span>-&gt;<span id="method">isa</span><span id="braces">(</span><span id="dqStr">"APPRIS::Transcript"</span><span id="braces">)</span><span id="braces">)</span> <span id="braces">{</span>    	
		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$id</span><span id="braces">)</span>;
		<span id="perlKey">if</span> <span id="braces">(</span><span id="var">$feature</span>-&gt;<span id="method">stable_id</span><span id="braces">)</span> <span id="braces">{</span>
			<span id="var">$id</span> = <span id="var">$feature</span>-&gt;<span id="method">stable_id</span>;
			
		 	<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$feature</span>-&gt;<span id="method">analysis</span> <span id="braces">)</span> <span id="braces">{</span>
		 		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$analysis</span><span id="braces">)</span> = <span id="var">$feature</span>-&gt;<span id="method">analysis</span>;
		 		<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$analysis</span>-&gt;<span id="method">firestar</span> and <span id="var">$analysis</span>-&gt;<span id="method">firestar</span>-&gt;<span id="method">result</span> <span id="braces">)</span> <span id="braces">{</span>		 			
					<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method</span><span id="braces">)</span> = <span id="var">$analysis</span>-&gt;<span id="method">firestar</span>;	 			
			 		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$residues</span><span id="braces">)</span> = <span id="method">parser_firestar_residues</span><span id="braces">(</span><span id="var">$method</span><span id="braces">)</span>;
					<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$residues</span> and <span id="perlFunc">scalar</span><span id="braces">(</span><span id="var">$residues</span><span id="braces">)</span> &gt; 0 <span id="braces">)</span> <span id="braces">{</span>
						<span id="var">$report</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="var">$METHOD_DESC</span>-&gt;<span id="braces">{</span><span id="sqStr">'firestar'</span><span id="braces">}</span><span id="braces">}</span> = <span id="var">$residues</span>;
					<span id="braces">}</span>
		 		<span id="braces">}</span>
		 		<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$analysis</span>-&gt;<span id="method">matador3d</span> and <span id="var">$analysis</span>-&gt;<span id="method">matador3d</span>-&gt;<span id="method">result</span> <span id="braces">)</span> <span id="braces">{</span>		 			
					<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method</span><span id="braces">)</span> = <span id="var">$analysis</span>-&gt;<span id="method">matador3d</span>;	 			
			 		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$residues</span><span id="braces">)</span> = <span id="method">parser_matador3d_residues</span><span id="braces">(</span><span id="var">$method</span><span id="braces">)</span>;
					<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$residues</span> and <span id="perlFunc">scalar</span><span id="braces">(</span><span id="var">$residues</span><span id="braces">)</span> &gt; 0 <span id="braces">)</span> <span id="braces">{</span>
						<span id="var">$report</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="var">$METHOD_DESC</span>-&gt;<span id="braces">{</span><span id="sqStr">'matador3d'</span><span id="braces">}</span><span id="braces">}</span> = <span id="var">$residues</span>;
					<span id="braces">}</span>
		 		<span id="braces">}</span>		 		
		 		<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$analysis</span>-&gt;<span id="method">spade</span> and <span id="var">$analysis</span>-&gt;<span id="method">spade</span>-&gt;<span id="method">result</span> <span id="braces">)</span> <span id="braces">{</span>		 			
					<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method</span><span id="braces">)</span> = <span id="var">$analysis</span>-&gt;<span id="method">spade</span>;	 			
			 		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$residues</span><span id="braces">)</span> = <span id="method">parser_spade_residues</span><span id="braces">(</span><span id="var">$method</span><span id="braces">)</span>;
					<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$residues</span> and <span id="perlFunc">scalar</span><span id="braces">(</span><span id="var">$residues</span><span id="braces">)</span> &gt; 0 <span id="braces">)</span> <span id="braces">{</span>
						<span id="var">$report</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="var">$METHOD_DESC</span>-&gt;<span id="braces">{</span><span id="sqStr">'spade'</span><span id="braces">}</span><span id="braces">}</span> = <span id="var">$residues</span>;
					<span id="braces">}</span>
		 		<span id="braces">}</span>
		 		<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$analysis</span>-&gt;<span id="method">crash</span> and <span id="var">$analysis</span>-&gt;<span id="method">crash</span>-&gt;<span id="method">result</span> <span id="braces">)</span> <span id="braces">{</span>		 			
					<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method</span><span id="braces">)</span> = <span id="var">$analysis</span>-&gt;<span id="method">crash</span>;	 			
			 		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$label</span>,<span id="var">$residues</span><span id="braces">)</span> = <span id="method">parser_crash_residues</span><span id="braces">(</span><span id="var">$method</span><span id="braces">)</span>;
					<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$residues</span> and <span id="perlFunc">scalar</span><span id="braces">(</span><span id="var">$residues</span><span id="braces">)</span> &gt; 0 <span id="braces">)</span> <span id="braces">{</span>
						<span id="var">$report</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="var">$METHOD_DESC</span>-&gt;<span id="braces">{</span><span id="var">$label</span><span id="braces">}</span><span id="braces">}</span> = <span id="var">$residues</span>;
					<span id="braces">}</span>
		 		<span id="braces">}</span>
		 		<span id="perlKey">if</span> <span id="braces">(</span> <span id="var">$analysis</span>-&gt;<span id="method">thump</span> and <span id="var">$analysis</span>-&gt;<span id="method">thump</span>-&gt;<span id="method">result</span> <span id="braces">)</span> <span id="braces">{</span>
		 			<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method</span><span id="braces">)</span> = <span id="var">$analysis</span>-&gt;<span id="method">thump</span>;		 			
			 		<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$residues</span><span id="braces">)</span> = <span id="method">parser_thump_residues</span><span id="braces">(</span><span id="var">$method</span><span id="braces">)</span>;
					<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$residues</span> and <span id="perlFunc">scalar</span><span id="braces">(</span><span id="var">$residues</span><span id="braces">)</span> &gt; 0 <span id="braces">)</span> <span id="braces">{</span>
						<span id="var">$report</span>-&gt;<span id="braces">{</span><span id="var">$id</span><span id="braces">}</span>-&gt;<span id="braces">{</span><span id="var">$METHOD_DESC</span>-&gt;<span id="braces">{</span><span id="sqStr">'thump'</span><span id="braces">}</span><span id="braces">}</span> = <span id="var">$residues</span>;
					<span id="braces">}</span>
		 		<span id="braces">}</span>
		 	<span id="braces">}</span>
		<span id="braces">}</span>		
    <span id="braces">}</span>
    <span id="perlKey">else</span> <span id="braces">{</span>
		<span id="method">throw</span><span id="braces">(</span><span id="sqStr">'Argument must be an APPRIS::Transcript'</span><span id="braces">)</span>;
   	<span id="braces">}</span>
	<span id="perlKey">return</span> <span id="var">$report</span>;</pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE2" id="CODE2"></a>parser_crash_residues</td><td >description</td><td ><a href="#CODE1">prev</a></td><td ><a href="#CODE3">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="subName">parser_crash_residues</span>
{<pre>	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method</span><span id="braces">)</span> = <span id="var">@_</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$label</span>,<span id="var">$residues</span><span id="braces">)</span>;
	
	<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$method</span>-&gt;<span id="method">result</span> and <span id="perlFunc">defined</span> <span id="var">$method</span>-&gt;<span id="method">peptide_signal</span> and <span id="perlFunc">defined</span> <span id="var">$method</span>-&gt;<span id="method">mitochondrial_signal</span> <span id="braces">)</span> <span id="braces">{</span>
		<span id="perlKey">if</span> <span id="braces">(</span> <span id="braces">(</span><span id="var">$method</span>-&gt;<span id="method">peptide_signal</span> <span id="perlKey">eq</span> <span id="var">$OK_LABEL</span><span id="braces">)</span> or <span id="braces">(</span><span id="var">$method</span>-&gt;<span id="method">mitochondrial_signal</span> <span id="perlKey">eq</span> <span id="var">$OK_LABEL</span><span id="braces">)</span> <span id="braces">)</span> <span id="braces">{</span>
			<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$method</span>-&gt;<span id="method">regions</span> <span id="braces">)</span> <span id="braces">{</span>
				<span id="perlKey">if</span> <span id="braces">(</span> <span id="braces">(</span><span id="var">$method</span>-&gt;<span id="method">peptide_signal</span> <span id="perlKey">eq</span> <span id="var">$OK_LABEL</span><span id="braces">)</span> and <span id="braces">(</span><span id="var">$method</span>-&gt;<span id="method">mitochondrial_signal</span> <span id="perlKey">eq</span> <span id="var">$OK_LABEL</span><span id="braces">)</span> <span id="braces">)</span> <span id="braces">{</span>
					<span id="var">$label</span> = <span id="sqStr">'crash'</span>;
				<span id="braces">}</span>
				<span id="perlKey">elsif</span> <span id="braces">(</span> <span id="var">$method</span>-&gt;<span id="method">peptide_signal</span> <span id="perlKey">eq</span> <span id="var">$OK_LABEL</span> <span id="braces">)</span> <span id="braces">{</span>
					<span id="var">$label</span> = <span id="sqStr">'crash_sp'</span>;
				<span id="braces">}</span>					
				<span id="perlKey">elsif</span> <span id="braces">(</span> <span id="var">$method</span>-&gt;<span id="method">mitochondrial_signal</span> <span id="perlKey">eq</span> <span id="var">$OK_LABEL</span> <span id="braces">)</span> <span id="braces">{</span>
					<span id="var">$label</span> = <span id="sqStr">'crash_tp'</span>;
				<span id="braces">}</span>					
				
				<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$region</span> <span id="braces">(</span>@<span id="braces">{</span><span id="var">$method</span>-&gt;<span id="method">regions</span><span id="braces">}</span><span id="braces">)</span> <span id="braces">{</span>
					<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$region</span>-&gt;<span id="method">pstart</span> and <span id="perlFunc">defined</span> <span id="var">$region</span>-&gt;<span id="method">pend</span> <span id="braces">)</span> <span id="braces">{</span>
						<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$res</span><span id="braces">)</span> = <span id="braces">{</span>
							<span id="sqStr">'start'</span>	=&gt; <span id="var">$region</span>-&gt;<span id="method">pstart</span>,
							<span id="sqStr">'end'</span>	=&gt; <span id="var">$region</span>-&gt;<span id="method">pend</span>,
						<span id="braces">}</span>;
						<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$residues</span><span id="braces">}</span>,<span id="var">$res</span><span id="braces">)</span>;
					<span id="braces">}</span>
				<span id="braces">}</span>
			<span id="braces">}</span>						
		<span id="braces">}</span>
	<span id="braces">}</span>
	
	<span id="perlKey">return</span> <span id="braces">(</span><span id="var">$label</span>,<span id="var">$residues</span><span id="braces">)</span>;</pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE3" id="CODE3"></a>parser_firestar_residues</td><td >description</td><td ><a href="#CODE2">prev</a></td><td ><a href="#CODE4">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="subName">parser_firestar_residues</span>
{<pre>	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method</span><span id="braces">)</span> = <span id="var">@_</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$residues</span><span id="braces">)</span>;
	<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$method</span>-&gt;<span id="method">residues</span> and <span id="perlFunc">defined</span> <span id="var">$method</span>-&gt;<span id="method">result</span> <span id="braces">)</span> <span id="braces">{</span>

		<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$region</span> <span id="braces">(</span>@<span id="braces">{</span><span id="var">$method</span>-&gt;<span id="method">residues</span><span id="braces">}</span><span id="braces">)</span> <span id="braces">{</span>
			<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$region</span>-&gt;<span id="method">residue</span> <span id="braces">)</span> <span id="braces">{</span>
				<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$res</span><span id="braces">)</span> = <span id="braces">{</span>
					<span id="sqStr">'start'</span>	=&gt; <span id="var">$region</span>-&gt;<span id="method">residue</span>,
					<span id="sqStr">'end'</span>	=&gt; <span id="var">$region</span>-&gt;<span id="method">residue</span>,	
				<span id="braces">}</span>;
				<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$residues</span><span id="braces">}</span>,<span id="var">$res</span><span id="braces">)</span>;
			<span id="braces">}</span>
		<span id="braces">}</span>
	<span id="braces">}</span>
	<span id="perlKey">return</span> <span id="var">$residues</span>;</pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE4" id="CODE4"></a>parser_matador3d_residues</td><td >description</td><td ><a href="#CODE3">prev</a></td><td ><a href="#CODE5">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="subName">parser_matador3d_residues</span>
{<pre>	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method</span><span id="braces">)</span> = <span id="var">@_</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$residues</span><span id="braces">)</span>;
	
	<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$method</span>-&gt;<span id="method">conservation_structure</span> and <span id="perlFunc">defined</span> <span id="var">$method</span>-&gt;<span id="method">result</span> <span id="braces">)</span> <span id="braces">{</span>
		<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$method</span>-&gt;<span id="method">alignments</span> <span id="braces">)</span> <span id="braces">{</span>
			<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$region</span> <span id="braces">(</span>@<span id="braces">{</span><span id="var">$method</span>-&gt;<span id="method">alignments</span><span id="braces">}</span><span id="braces">)</span> <span id="braces">{</span>	
				<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$region</span>-&gt;<span id="method">pstart</span> and <span id="perlFunc">defined</span> <span id="var">$region</span>-&gt;<span id="method">pend</span> and <span id="perlFunc">defined</span> <span id="var">$region</span>-&gt;<span id="method">score</span> and <span id="braces">(</span><span id="var">$region</span>-&gt;<span id="method">type</span> <span id="perlKey">eq</span> <span id="sqStr">'mini-exon'</span><span id="braces">)</span> <span id="braces">)</span> <span id="braces">{</span>
					<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$res</span><span id="braces">)</span> = <span id="braces">{</span>
						<span id="sqStr">'start'</span>	=&gt; <span id="var">$region</span>-&gt;<span id="method">pstart</span>,
						<span id="sqStr">'end'</span>	=&gt; <span id="var">$region</span>-&gt;<span id="method">pend</span>,
					<span id="braces">}</span>;
					<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$residues</span><span id="braces">}</span>,<span id="var">$res</span><span id="braces">)</span>;						
				<span id="braces">}</span>
			<span id="braces">}</span>
		<span id="braces">}</span>
	<span id="braces">}</span>
	
	<span id="perlKey">return</span> <span id="var">$residues</span>;</pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE5" id="CODE5"></a>parser_spade_residues</td><td >description</td><td ><a href="#CODE4">prev</a></td><td ><a href="#CODE6">next</a></td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="subName">parser_spade_residues</span>
{<pre>	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method</span><span id="braces">)</span> = <span id="var">@_</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$residues</span><span id="braces">)</span>;
	
	<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$method</span>-&gt;<span id="method">domain_signal</span> and <span id="perlFunc">defined</span> <span id="var">$method</span>-&gt;<span id="method">result</span> <span id="braces">)</span> <span id="braces">{</span>
		<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$method</span>-&gt;<span id="method">regions</span> <span id="braces">)</span> <span id="braces">{</span>
			<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$region</span> <span id="braces">(</span>@<span id="braces">{</span><span id="var">$method</span>-&gt;<span id="method">regions</span><span id="braces">}</span><span id="braces">)</span> <span id="braces">{</span>	
				<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$region</span>-&gt;<span id="method">alignment_start</span> and <span id="perlFunc">defined</span> <span id="var">$region</span>-&gt;<span id="method">alignment_end</span> and
					 <span id="perlFunc">defined</span> <span id="var">$region</span>-&gt;<span id="method">hmm_name</span> and <span id="perlFunc">defined</span> <span id="var">$region</span>-&gt;<span id="method">evalue</span> <span id="braces">)</span> <span id="braces">{</span>
						<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$res</span><span id="braces">)</span> = <span id="braces">{</span>
							<span id="sqStr">'start'</span>	=&gt; <span id="var">$region</span>-&gt;<span id="method">alignment_start</span>,
							<span id="sqStr">'end'</span>	=&gt; <span id="var">$region</span>-&gt;<span id="method">alignment_end</span>,
						<span id="braces">}</span>;
						<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$residues</span><span id="braces">}</span>,<span id="var">$res</span><span id="braces">)</span>;
				<span id="braces">}</span>
			<span id="braces">}</span>
		<span id="braces">}</span>
	<span id="braces">}</span>
	
	<span id="perlKey">return</span> <span id="var">$residues</span>;</pre>}</td></div>
<div id="sep"></div>
<table id="methCodeTitle" width="100%"><tr><td width="200"><a name="CODE6" id="CODE6"></a>parser_thump_residues</td><td >description</td><td ><a href="#CODE5">prev</a></td><td >next</td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="methCodeArea"><td ><span id="sub">sub</span> <span id="subName">parser_thump_residues</span>
{<pre>	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$method</span><span id="braces">)</span> = <span id="var">@_</span>;
	<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$residues</span><span id="braces">)</span>;
	
	<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$method</span>-&gt;<span id="method">transmembrane_signal</span> and <span id="perlFunc">defined</span> <span id="var">$method</span>-&gt;<span id="method">result</span> <span id="braces">)</span> <span id="braces">{</span>
		<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$method</span>-&gt;<span id="method">regions</span> <span id="braces">)</span> <span id="braces">{</span>
			<span id="perlKey">foreach</span> <span id="perlKey">my</span> <span id="var">$region</span> <span id="braces">(</span>@<span id="braces">{</span><span id="var">$method</span>-&gt;<span id="method">regions</span><span id="braces">}</span><span id="braces">)</span> <span id="braces">{</span>
				<span id="perlKey">if</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$region</span>-&gt;<span id="method">pstart</span> and <span id="perlFunc">defined</span> <span id="var">$region</span>-&gt;<span id="method">pend</span> <span id="braces">)</span> <span id="braces">{</span>					
					<span id="perlKey">unless</span> <span id="braces">(</span> <span id="perlFunc">defined</span> <span id="var">$region</span>-&gt;<span id="method">damaged</span> <span id="braces">)</span> <span id="braces">{</span>
						<span id="perlKey">my</span> <span id="braces">(</span><span id="var">$res</span><span id="braces">)</span> = <span id="braces">{</span>
							<span id="sqStr">'start'</span>	=&gt; <span id="var">$region</span>-&gt;<span id="method">pstart</span>,
							<span id="sqStr">'end'</span>	=&gt; <span id="var">$region</span>-&gt;<span id="method">pend</span>,
						<span id="braces">}</span>;
						<span id="perlFunc">push</span><span id="braces">(</span>@<span id="braces">{</span><span id="var">$residues</span><span id="braces">}</span>,<span id="var">$res</span><span id="braces">)</span>;						
					<span id="braces">}</span>					
				<span id="braces">}</span>
			<span id="braces">}</span>
		<span id="braces">}</span>
	<span id="braces">}</span>
		
	<span id="perlKey">return</span> <span id="var">$residues</span>;</pre>}</td></div>
<div id="sep"></div>
<a name="General" id="General"></a>
<div id="mainTitle">General documentation</div>
<div id="sep"></div>
<table id="genInfoTitle" width="100%"><tr><td><a name="_pod_CONTACT" id="_pod_CONTACT"></a>CONTACT</td><td align="right"><a href="#TOP">Top</a></td></tr></table>
<div id="genInfoArea"><pre id="podParagraph">  Please email comments or questions to the public INB
  developers list at <<a href="mailto:inb-tecnico@lists.cnio.es" id="podEmail">inb-tecnico@lists.cnio.es</a>&gt;.<br />
  Questions may also be sent to the developer, 
  Jose Manuel Rodriguez <<a href="mailto:jmrodriguez@cnio.es" id="podEmail">jmrodriguez@cnio.es</a>&gt;.</pre></div>
<div id="sep"></div>
</body>
</html>
